<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="358" onload="init(evt)" viewBox="0 0 1200 358" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = true;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="358" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">./target/noir_bigcurve.json-main</text><text id="details" fill="rgb(0,0,0)" x="10" y="341.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="341.00"> </text><svg id="frames" x="10" width="1180" total_samples="136637"><g><title>scalar_field.nr:204:9::x.validate_in_field() (5 gates, 0.00%)</title><rect x="0.0000%" y="229" width="0.0037%" height="23" fill="rgb(255,249,249)" fg:x="0" fg:w="5"/><text x="0.2500%" y="243.50"></text></g><g><title>lib.nr:252:9::Params::get_instance().validate_in_field(self) (5 gates, 0.00%)</title><rect x="0.0000%" y="205" width="0.0037%" height="23" fill="rgb(255,249,249)" fg:x="0" fg:w="5"/><text x="0.2500%" y="219.50"></text></g><g><title>runtime_bignum.nr:549:28::self.__validate_in_field_compute_borrow_flags(val) (5 gates, 0.00%)</title><rect x="0.0000%" y="181" width="0.0037%" height="23" fill="rgb(255,249,249)" fg:x="0" fg:w="5"/><text x="0.2500%" y="195.50"></text></g><g><title>opcode::arithmetic (5 gates, 0.00%)</title><rect x="0.0000%" y="157" width="0.0037%" height="23" fill="rgb(255,249,249)" fg:x="0" fg:w="5"/><text x="0.2500%" y="171.50"></text></g><g><title>bls12_381.nr:151:35::ScalarField::from_bignum(scalar_fr) (18 gates, 0.01%)</title><rect x="0.0000%" y="253" width="0.0132%" height="23" fill="rgb(255,248,248)" fg:x="0" fg:w="18"/><text x="0.2500%" y="267.50"></text></g><g><title>scalar_field.nr:205:51::__get_wnaf_slices2(x.limbs) (13 gates, 0.01%)</title><rect x="0.0037%" y="229" width="0.0095%" height="23" fill="rgb(255,248,248)" fg:x="5" fg:w="13"/><text x="0.2537%" y="243.50"></text></g><g><title>opcode::arithmetic (13 gates, 0.01%)</title><rect x="0.0037%" y="205" width="0.0095%" height="23" fill="rgb(255,248,248)" fg:x="5" fg:w="13"/><text x="0.2537%" y="219.50"></text></g><g><title>runtime_bignum.nr:234:13::self.limbs[i].assert_max_bit_size(120) (2,794 gates, 2.04%)</title><rect x="0.0132%" y="133" width="2.0448%" height="23" fill="rgb(255,228,228)" fg:x="18" fg:w="2794"/><text x="0.2632%" y="147.50">r..</text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (2,794 gates, 2.04%)</title><rect x="0.0132%" y="109" width="2.0448%" height="23" fill="rgb(255,228,228)" fg:x="18" fg:w="2794"/><text x="0.2632%" y="123.50">m..</text></g><g><title>opcode::blackbox::range (2,794 gates, 2.04%)</title><rect x="0.0132%" y="85" width="2.0448%" height="23" fill="rgb(255,228,228)" fg:x="18" fg:w="2794"/><text x="0.2632%" y="99.50">o..</text></g><g><title>main.nr:500:9::x3.validate_in_range() (2,819 gates, 2.06%)</title><rect x="0.0132%" y="181" width="2.0631%" height="23" fill="rgb(255,228,228)" fg:x="18" fg:w="2819"/><text x="0.2632%" y="195.50">m..</text></g><g><title>lib.nr:51:33::RuntimeBigNumTrait::validate_in_range(self) (2,819 gates, 2.06%)</title><rect x="0.0132%" y="157" width="2.0631%" height="23" fill="rgb(255,228,228)" fg:x="18" fg:w="2819"/><text x="0.2632%" y="171.50">l..</text></g><g><title>runtime_bignum.nr:237:9::self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32) (25 gates, 0.02%)</title><rect x="2.0580%" y="133" width="0.0183%" height="23" fill="rgb(255,247,247)" fg:x="2812" fg:w="25"/><text x="2.3080%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (25 gates, 0.02%)</title><rect x="2.0580%" y="109" width="0.0183%" height="23" fill="rgb(255,247,247)" fg:x="2812" fg:w="25"/><text x="2.3080%" y="123.50"></text></g><g><title>opcode::blackbox::range (25 gates, 0.02%)</title><rect x="2.0580%" y="85" width="0.0183%" height="23" fill="rgb(255,247,247)" fg:x="2812" fg:w="25"/><text x="2.3080%" y="99.50"></text></g><g><title>runtime_bignum.nr:234:13::self.limbs[i].assert_max_bit_size(120) (16 gates, 0.01%)</title><rect x="2.0763%" y="133" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="2837" fg:w="16"/><text x="2.3263%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (16 gates, 0.01%)</title><rect x="2.0763%" y="109" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="2837" fg:w="16"/><text x="2.3263%" y="123.50"></text></g><g><title>opcode::blackbox::range (16 gates, 0.01%)</title><rect x="2.0763%" y="85" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="2837" fg:w="16"/><text x="2.3263%" y="99.50"></text></g><g><title>main.nr:501:9::y3.validate_in_range() (18 gates, 0.01%)</title><rect x="2.0763%" y="181" width="0.0132%" height="23" fill="rgb(255,248,248)" fg:x="2837" fg:w="18"/><text x="2.3263%" y="195.50"></text></g><g><title>lib.nr:51:33::RuntimeBigNumTrait::validate_in_range(self) (18 gates, 0.01%)</title><rect x="2.0763%" y="157" width="0.0132%" height="23" fill="rgb(255,248,248)" fg:x="2837" fg:w="18"/><text x="2.3263%" y="171.50"></text></g><g><title>runtime_bignum.nr:237:9::self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32) (2 gates, 0.00%)</title><rect x="2.0880%" y="133" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="2853" fg:w="2"/><text x="2.3380%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (2 gates, 0.00%)</title><rect x="2.0880%" y="109" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="2853" fg:w="2"/><text x="2.3380%" y="123.50"></text></g><g><title>opcode::blackbox::range (2 gates, 0.00%)</title><rect x="2.0880%" y="85" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="2853" fg:w="2"/><text x="2.3380%" y="99.50"></text></g><g><title>runtime_bignum.nr:234:13::self.limbs[i].assert_max_bit_size(120) (15 gates, 0.01%)</title><rect x="2.0895%" y="133" width="0.0110%" height="23" fill="rgb(255,248,248)" fg:x="2855" fg:w="15"/><text x="2.3395%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (15 gates, 0.01%)</title><rect x="2.0895%" y="109" width="0.0110%" height="23" fill="rgb(255,248,248)" fg:x="2855" fg:w="15"/><text x="2.3395%" y="123.50"></text></g><g><title>opcode::blackbox::range (15 gates, 0.01%)</title><rect x="2.0895%" y="85" width="0.0110%" height="23" fill="rgb(255,248,248)" fg:x="2855" fg:w="15"/><text x="2.3395%" y="99.50"></text></g><g><title>main.nr:502:9::lambda.validate_in_range() (16 gates, 0.01%)</title><rect x="2.0895%" y="181" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="2855" fg:w="16"/><text x="2.3395%" y="195.50"></text></g><g><title>lib.nr:51:33::RuntimeBigNumTrait::validate_in_range(self) (16 gates, 0.01%)</title><rect x="2.0895%" y="157" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="2855" fg:w="16"/><text x="2.3395%" y="171.50"></text></g><g><title>runtime_bignum.nr:237:9::self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32) (1 gates, 0.00%)</title><rect x="2.1005%" y="133" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="2870" fg:w="1"/><text x="2.3505%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (1 gates, 0.00%)</title><rect x="2.1005%" y="109" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="2870" fg:w="1"/><text x="2.3505%" y="123.50"></text></g><g><title>opcode::blackbox::range (1 gates, 0.00%)</title><rect x="2.1005%" y="85" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="2870" fg:w="1"/><text x="2.3505%" y="99.50"></text></g><g><title>runtime_bignum.nr:255:13::self.limbs[i].assert_max_bit_size(120) (16 gates, 0.01%)</title><rect x="2.1012%" y="109" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="2871" fg:w="16"/><text x="2.3512%" y="123.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (16 gates, 0.01%)</title><rect x="2.1012%" y="85" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="2871" fg:w="16"/><text x="2.3512%" y="99.50"></text></g><g><title>opcode::blackbox::range (16 gates, 0.01%)</title><rect x="2.1012%" y="61" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="2871" fg:w="16"/><text x="2.3512%" y="75.50"></text></g><g><title>runtime_bignum.nr:424:9::quotient.validate_quotient_in_range() (1,385 gates, 1.01%)</title><rect x="2.1012%" y="133" width="1.0136%" height="23" fill="rgb(255,234,234)" fg:x="2871" fg:w="1385"/><text x="2.3512%" y="147.50"></text></g><g><title>runtime_bignum.nr:259:9::self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32) (1,369 gates, 1.00%)</title><rect x="2.1129%" y="109" width="1.0019%" height="23" fill="rgb(255,235,235)" fg:x="2887" fg:w="1369"/><text x="2.3629%" y="123.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (1,369 gates, 1.00%)</title><rect x="2.1129%" y="85" width="1.0019%" height="23" fill="rgb(255,235,235)" fg:x="2887" fg:w="1369"/><text x="2.3629%" y="99.50"></text></g><g><title>opcode::blackbox::range (1,369 gates, 1.00%)</title><rect x="2.1129%" y="61" width="1.0019%" height="23" fill="rgb(255,235,235)" fg:x="2887" fg:w="1369"/><text x="2.3629%" y="75.50"></text></g><g><title>runtime_bignum.nr:481:25::std::as_witness(new_term) (16 gates, 0.01%)</title><rect x="3.1148%" y="133" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="4256" fg:w="16"/><text x="3.3648%" y="147.50"></text></g><g><title>opcode::arithmetic (16 gates, 0.01%)</title><rect x="3.1148%" y="109" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="4256" fg:w="16"/><text x="3.3648%" y="123.50"></text></g><g><title>runtime_bignum.nr:508:9::borrow_flags.get(0).assert_max_bit_size(1) (1 gates, 0.00%)</title><rect x="3.1265%" y="133" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="4272" fg:w="1"/><text x="3.3765%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (1 gates, 0.00%)</title><rect x="3.1265%" y="109" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="4272" fg:w="1"/><text x="3.3765%" y="123.50"></text></g><g><title>opcode::blackbox::range (1 gates, 0.00%)</title><rect x="3.1265%" y="85" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="4272" fg:w="1"/><text x="3.3765%" y="99.50"></text></g><g><title>runtime_bignum.nr:511:13::borrow_flags.get(i).assert_max_bit_size(1) (5 gates, 0.00%)</title><rect x="3.1273%" y="133" width="0.0037%" height="23" fill="rgb(255,249,249)" fg:x="4273" fg:w="5"/><text x="3.3773%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (5 gates, 0.00%)</title><rect x="3.1273%" y="109" width="0.0037%" height="23" fill="rgb(255,249,249)" fg:x="4273" fg:w="5"/><text x="3.3773%" y="123.50"></text></g><g><title>opcode::blackbox::range (5 gates, 0.00%)</title><rect x="3.1273%" y="85" width="0.0037%" height="23" fill="rgb(255,249,249)" fg:x="4273" fg:w="5"/><text x="3.3773%" y="99.50"></text></g><g><title>runtime_bignum.nr:534:13::std::as_witness(product_limbs.get(i)) (20 gates, 0.01%)</title><rect x="3.1309%" y="133" width="0.0146%" height="23" fill="rgb(255,248,248)" fg:x="4278" fg:w="20"/><text x="3.3809%" y="147.50"></text></g><g><title>opcode::arithmetic (20 gates, 0.01%)</title><rect x="3.1309%" y="109" width="0.0146%" height="23" fill="rgb(255,248,248)" fg:x="4278" fg:w="20"/><text x="3.3809%" y="123.50"></text></g><g><title>runtime_bignum.nr:535:13::product_limbs.get(i).assert_max_bit_size(126) (32 gates, 0.02%)</title><rect x="3.1456%" y="133" width="0.0234%" height="23" fill="rgb(255,247,247)" fg:x="4298" fg:w="32"/><text x="3.3956%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (32 gates, 0.02%)</title><rect x="3.1456%" y="109" width="0.0234%" height="23" fill="rgb(255,247,247)" fg:x="4298" fg:w="32"/><text x="3.3956%" y="123.50"></text></g><g><title>opcode::blackbox::range (32 gates, 0.02%)</title><rect x="3.1456%" y="85" width="0.0234%" height="23" fill="rgb(255,247,247)" fg:x="4298" fg:w="32"/><text x="3.3956%" y="99.50"></text></g><g><title>main.nr:507:9::BigNum::evaluate_quadratic_expression(
            [[x1, x1, x1], [y1, y1, BigNum::new()]],
            [[false, false, false], [false, false, false]],
            [[x1], [lambda]],
            [[false], [true]],
            [CurveParams::a()],
            [false]
        ) (1,460 gates, 1.07%)</title><rect x="2.1012%" y="181" width="1.0685%" height="23" fill="rgb(255,234,234)" fg:x="2871" fg:w="1460"/><text x="2.3512%" y="195.50"></text></g><g><title>lib.nr:241:9::Params::get_instance().evaluate_quadratic_expression(
            lhs_terms,
            lhs_flags,
            rhs_terms,
            rhs_flags,
            linear_terms,
            linear_flags
        ) (1,460 gates, 1.07%)</title><rect x="2.1012%" y="157" width="1.0685%" height="23" fill="rgb(255,234,234)" fg:x="2871" fg:w="1460"/><text x="2.3512%" y="171.50"></text></g><g><title>runtime_bignum.nr:539:16::product_limbs.get(N + N - 2) == 0 (1 gates, 0.00%)</title><rect x="3.1690%" y="133" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="4330" fg:w="1"/><text x="3.4190%" y="147.50"></text></g><g><title>opcode::arithmetic (1 gates, 0.00%)</title><rect x="3.1690%" y="109" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="4330" fg:w="1"/><text x="3.4190%" y="123.50"></text></g><g><title>runtime_bignum.nr:255:13::self.limbs[i].assert_max_bit_size(120) (16 gates, 0.01%)</title><rect x="3.1697%" y="109" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="4331" fg:w="16"/><text x="3.4197%" y="123.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (16 gates, 0.01%)</title><rect x="3.1697%" y="85" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="4331" fg:w="16"/><text x="3.4197%" y="99.50"></text></g><g><title>opcode::blackbox::range (16 gates, 0.01%)</title><rect x="3.1697%" y="61" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="4331" fg:w="16"/><text x="3.4197%" y="75.50"></text></g><g><title>runtime_bignum.nr:424:9::quotient.validate_quotient_in_range() (17 gates, 0.01%)</title><rect x="3.1697%" y="133" width="0.0124%" height="23" fill="rgb(255,248,248)" fg:x="4331" fg:w="17"/><text x="3.4197%" y="147.50"></text></g><g><title>runtime_bignum.nr:259:9::self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32) (1 gates, 0.00%)</title><rect x="3.1814%" y="109" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="4347" fg:w="1"/><text x="3.4314%" y="123.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (1 gates, 0.00%)</title><rect x="3.1814%" y="85" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="4347" fg:w="1"/><text x="3.4314%" y="99.50"></text></g><g><title>opcode::blackbox::range (1 gates, 0.00%)</title><rect x="3.1814%" y="61" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="4347" fg:w="1"/><text x="3.4314%" y="75.50"></text></g><g><title>runtime_bignum.nr:481:25::std::as_witness(new_term) (16 gates, 0.01%)</title><rect x="3.1822%" y="133" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="4348" fg:w="16"/><text x="3.4322%" y="147.50"></text></g><g><title>opcode::arithmetic (16 gates, 0.01%)</title><rect x="3.1822%" y="109" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="4348" fg:w="16"/><text x="3.4322%" y="123.50"></text></g><g><title>runtime_bignum.nr:508:9::borrow_flags.get(0).assert_max_bit_size(1) (1 gates, 0.00%)</title><rect x="3.1939%" y="133" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="4364" fg:w="1"/><text x="3.4439%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (1 gates, 0.00%)</title><rect x="3.1939%" y="109" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="4364" fg:w="1"/><text x="3.4439%" y="123.50"></text></g><g><title>opcode::blackbox::range (1 gates, 0.00%)</title><rect x="3.1939%" y="85" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="4364" fg:w="1"/><text x="3.4439%" y="99.50"></text></g><g><title>runtime_bignum.nr:511:13::borrow_flags.get(i).assert_max_bit_size(1) (5 gates, 0.00%)</title><rect x="3.1946%" y="133" width="0.0037%" height="23" fill="rgb(255,249,249)" fg:x="4365" fg:w="5"/><text x="3.4446%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (5 gates, 0.00%)</title><rect x="3.1946%" y="109" width="0.0037%" height="23" fill="rgb(255,249,249)" fg:x="4365" fg:w="5"/><text x="3.4446%" y="123.50"></text></g><g><title>opcode::blackbox::range (5 gates, 0.00%)</title><rect x="3.1946%" y="85" width="0.0037%" height="23" fill="rgb(255,249,249)" fg:x="4365" fg:w="5"/><text x="3.4446%" y="99.50"></text></g><g><title>runtime_bignum.nr:534:13::std::as_witness(product_limbs.get(i)) (16 gates, 0.01%)</title><rect x="3.1983%" y="133" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="4370" fg:w="16"/><text x="3.4483%" y="147.50"></text></g><g><title>opcode::arithmetic (16 gates, 0.01%)</title><rect x="3.1983%" y="109" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="4370" fg:w="16"/><text x="3.4483%" y="123.50"></text></g><g><title>runtime_bignum.nr:535:13::product_limbs.get(i).assert_max_bit_size(126) (31 gates, 0.02%)</title><rect x="3.2100%" y="133" width="0.0227%" height="23" fill="rgb(255,247,247)" fg:x="4386" fg:w="31"/><text x="3.4600%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (31 gates, 0.02%)</title><rect x="3.2100%" y="109" width="0.0227%" height="23" fill="rgb(255,247,247)" fg:x="4386" fg:w="31"/><text x="3.4600%" y="123.50"></text></g><g><title>opcode::blackbox::range (31 gates, 0.02%)</title><rect x="3.2100%" y="85" width="0.0227%" height="23" fill="rgb(255,247,247)" fg:x="4386" fg:w="31"/><text x="3.4600%" y="99.50"></text></g><g><title>main.nr:517:9::BigNum::evaluate_quadratic_expression(
            [[lambda]],
            [[false]],
            [[lambda]],
            [[false]],
            [x3, x1, x1],
            [true, true, true]
        ) (87 gates, 0.06%)</title><rect x="3.1697%" y="181" width="0.0637%" height="23" fill="rgb(255,246,246)" fg:x="4331" fg:w="87"/><text x="3.4197%" y="195.50"></text></g><g><title>lib.nr:241:9::Params::get_instance().evaluate_quadratic_expression(
            lhs_terms,
            lhs_flags,
            rhs_terms,
            rhs_flags,
            linear_terms,
            linear_flags
        ) (87 gates, 0.06%)</title><rect x="3.1697%" y="157" width="0.0637%" height="23" fill="rgb(255,246,246)" fg:x="4331" fg:w="87"/><text x="3.4197%" y="171.50"></text></g><g><title>runtime_bignum.nr:539:16::product_limbs.get(N + N - 2) == 0 (1 gates, 0.00%)</title><rect x="3.2327%" y="133" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="4417" fg:w="1"/><text x="3.4827%" y="147.50"></text></g><g><title>opcode::arithmetic (1 gates, 0.00%)</title><rect x="3.2327%" y="109" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="4417" fg:w="1"/><text x="3.4827%" y="123.50"></text></g><g><title>runtime_bignum.nr:255:13::self.limbs[i].assert_max_bit_size(120) (16 gates, 0.01%)</title><rect x="3.2334%" y="109" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="4418" fg:w="16"/><text x="3.4834%" y="123.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (16 gates, 0.01%)</title><rect x="3.2334%" y="85" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="4418" fg:w="16"/><text x="3.4834%" y="99.50"></text></g><g><title>opcode::blackbox::range (16 gates, 0.01%)</title><rect x="3.2334%" y="61" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="4418" fg:w="16"/><text x="3.4834%" y="75.50"></text></g><g><title>runtime_bignum.nr:424:9::quotient.validate_quotient_in_range() (18 gates, 0.01%)</title><rect x="3.2334%" y="133" width="0.0132%" height="23" fill="rgb(255,248,248)" fg:x="4418" fg:w="18"/><text x="3.4834%" y="147.50"></text></g><g><title>runtime_bignum.nr:259:9::self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32) (2 gates, 0.00%)</title><rect x="3.2451%" y="109" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="4434" fg:w="2"/><text x="3.4951%" y="123.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (2 gates, 0.00%)</title><rect x="3.2451%" y="85" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="4434" fg:w="2"/><text x="3.4951%" y="99.50"></text></g><g><title>opcode::blackbox::range (2 gates, 0.00%)</title><rect x="3.2451%" y="61" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="4434" fg:w="2"/><text x="3.4951%" y="75.50"></text></g><g><title>runtime_bignum.nr:481:25::std::as_witness(new_term) (16 gates, 0.01%)</title><rect x="3.2466%" y="133" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="4436" fg:w="16"/><text x="3.4966%" y="147.50"></text></g><g><title>opcode::arithmetic (16 gates, 0.01%)</title><rect x="3.2466%" y="109" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="4436" fg:w="16"/><text x="3.4966%" y="123.50"></text></g><g><title>runtime_bignum.nr:508:9::borrow_flags.get(0).assert_max_bit_size(1) (1 gates, 0.00%)</title><rect x="3.2583%" y="133" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="4452" fg:w="1"/><text x="3.5083%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (1 gates, 0.00%)</title><rect x="3.2583%" y="109" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="4452" fg:w="1"/><text x="3.5083%" y="123.50"></text></g><g><title>opcode::blackbox::range (1 gates, 0.00%)</title><rect x="3.2583%" y="85" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="4452" fg:w="1"/><text x="3.5083%" y="99.50"></text></g><g><title>runtime_bignum.nr:511:13::borrow_flags.get(i).assert_max_bit_size(1) (5 gates, 0.00%)</title><rect x="3.2590%" y="133" width="0.0037%" height="23" fill="rgb(255,249,249)" fg:x="4453" fg:w="5"/><text x="3.5090%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (5 gates, 0.00%)</title><rect x="3.2590%" y="109" width="0.0037%" height="23" fill="rgb(255,249,249)" fg:x="4453" fg:w="5"/><text x="3.5090%" y="123.50"></text></g><g><title>opcode::blackbox::range (5 gates, 0.00%)</title><rect x="3.2590%" y="85" width="0.0037%" height="23" fill="rgb(255,249,249)" fg:x="4453" fg:w="5"/><text x="3.5090%" y="99.50"></text></g><g><title>runtime_bignum.nr:534:13::std::as_witness(product_limbs.get(i)) (16 gates, 0.01%)</title><rect x="3.2627%" y="133" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="4458" fg:w="16"/><text x="3.5127%" y="147.50"></text></g><g><title>opcode::arithmetic (16 gates, 0.01%)</title><rect x="3.2627%" y="109" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="4458" fg:w="16"/><text x="3.5127%" y="123.50"></text></g><g><title>runtime_bignum.nr:535:13::product_limbs.get(i).assert_max_bit_size(126) (31 gates, 0.02%)</title><rect x="3.2744%" y="133" width="0.0227%" height="23" fill="rgb(255,247,247)" fg:x="4474" fg:w="31"/><text x="3.5244%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (31 gates, 0.02%)</title><rect x="3.2744%" y="109" width="0.0227%" height="23" fill="rgb(255,247,247)" fg:x="4474" fg:w="31"/><text x="3.5244%" y="123.50"></text></g><g><title>opcode::blackbox::range (31 gates, 0.02%)</title><rect x="3.2744%" y="85" width="0.0227%" height="23" fill="rgb(255,247,247)" fg:x="4474" fg:w="31"/><text x="3.5244%" y="99.50"></text></g><g><title>main.nr:80:18::P.double_with_hint(transcript[0]) (4,488 gates, 3.28%)</title><rect x="0.0132%" y="205" width="3.2846%" height="23" fill="rgb(255,222,222)" fg:x="18" fg:w="4488"/><text x="0.2632%" y="219.50">mai..</text></g><g><title>main.nr:527:9::BigNum::evaluate_quadratic_expression(
            [[lambda]],
            [[false]],
            [[x3, x1]],
            [[false, true]],
            [y3, y1],
            [false, false]
        ) (88 gates, 0.06%)</title><rect x="3.2334%" y="181" width="0.0644%" height="23" fill="rgb(255,246,246)" fg:x="4418" fg:w="88"/><text x="3.4834%" y="195.50"></text></g><g><title>lib.nr:241:9::Params::get_instance().evaluate_quadratic_expression(
            lhs_terms,
            lhs_flags,
            rhs_terms,
            rhs_flags,
            linear_terms,
            linear_flags
        ) (88 gates, 0.06%)</title><rect x="3.2334%" y="157" width="0.0644%" height="23" fill="rgb(255,246,246)" fg:x="4418" fg:w="88"/><text x="3.4834%" y="171.50"></text></g><g><title>runtime_bignum.nr:539:16::product_limbs.get(N + N - 2) == 0 (1 gates, 0.00%)</title><rect x="3.2971%" y="133" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="4505" fg:w="1"/><text x="3.5471%" y="147.50"></text></g><g><title>opcode::arithmetic (1 gates, 0.00%)</title><rect x="3.2971%" y="109" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="4505" fg:w="1"/><text x="3.5471%" y="123.50"></text></g><g><title>main.nr:85:24::P.y.neg() (4 gates, 0.00%)</title><rect x="3.2978%" y="205" width="0.0029%" height="23" fill="rgb(255,249,249)" fg:x="4506" fg:w="4"/><text x="3.5478%" y="219.50"></text></g><g><title>lib.nr:268:9::Params::get_instance().neg(self) (4 gates, 0.00%)</title><rect x="3.2978%" y="181" width="0.0029%" height="23" fill="rgb(255,249,249)" fg:x="4506" fg:w="4"/><text x="3.5478%" y="195.50"></text></g><g><title>runtime_bignum.nr:608:38::self.__neg_with_flags(val) (4 gates, 0.00%)</title><rect x="3.2978%" y="157" width="0.0029%" height="23" fill="rgb(255,249,249)" fg:x="4506" fg:w="4"/><text x="3.5478%" y="171.50"></text></g><g><title>opcode::arithmetic (4 gates, 0.00%)</title><rect x="3.2978%" y="133" width="0.0029%" height="23" fill="rgb(255,249,249)" fg:x="4506" fg:w="4"/><text x="3.5478%" y="147.50"></text></g><g><title>runtime_bignum.nr:234:13::self.limbs[i].assert_max_bit_size(120) (110 gates, 0.08%)</title><rect x="3.3007%" y="133" width="0.0805%" height="23" fill="rgb(255,245,245)" fg:x="4510" fg:w="110"/><text x="3.5507%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (110 gates, 0.08%)</title><rect x="3.3007%" y="109" width="0.0805%" height="23" fill="rgb(255,245,245)" fg:x="4510" fg:w="110"/><text x="3.5507%" y="123.50"></text></g><g><title>opcode::blackbox::range (110 gates, 0.08%)</title><rect x="3.3007%" y="85" width="0.0805%" height="23" fill="rgb(255,245,245)" fg:x="4510" fg:w="110"/><text x="3.5507%" y="99.50"></text></g><g><title>main.nr:184:9::x3.validate_in_range() (119 gates, 0.09%)</title><rect x="3.3007%" y="181" width="0.0871%" height="23" fill="rgb(255,245,245)" fg:x="4510" fg:w="119"/><text x="3.5507%" y="195.50"></text></g><g><title>lib.nr:51:33::RuntimeBigNumTrait::validate_in_range(self) (119 gates, 0.09%)</title><rect x="3.3007%" y="157" width="0.0871%" height="23" fill="rgb(255,245,245)" fg:x="4510" fg:w="119"/><text x="3.5507%" y="171.50"></text></g><g><title>runtime_bignum.nr:237:9::self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32) (9 gates, 0.01%)</title><rect x="3.3812%" y="133" width="0.0066%" height="23" fill="rgb(255,248,248)" fg:x="4620" fg:w="9"/><text x="3.6312%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (9 gates, 0.01%)</title><rect x="3.3812%" y="109" width="0.0066%" height="23" fill="rgb(255,248,248)" fg:x="4620" fg:w="9"/><text x="3.6312%" y="123.50"></text></g><g><title>opcode::blackbox::range (9 gates, 0.01%)</title><rect x="3.3812%" y="85" width="0.0066%" height="23" fill="rgb(255,248,248)" fg:x="4620" fg:w="9"/><text x="3.6312%" y="99.50"></text></g><g><title>runtime_bignum.nr:234:13::self.limbs[i].assert_max_bit_size(120) (110 gates, 0.08%)</title><rect x="3.3878%" y="133" width="0.0805%" height="23" fill="rgb(255,245,245)" fg:x="4629" fg:w="110"/><text x="3.6378%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (110 gates, 0.08%)</title><rect x="3.3878%" y="109" width="0.0805%" height="23" fill="rgb(255,245,245)" fg:x="4629" fg:w="110"/><text x="3.6378%" y="123.50"></text></g><g><title>opcode::blackbox::range (110 gates, 0.08%)</title><rect x="3.3878%" y="85" width="0.0805%" height="23" fill="rgb(255,245,245)" fg:x="4629" fg:w="110"/><text x="3.6378%" y="99.50"></text></g><g><title>main.nr:185:9::y3.validate_in_range() (126 gates, 0.09%)</title><rect x="3.3878%" y="181" width="0.0922%" height="23" fill="rgb(255,245,245)" fg:x="4629" fg:w="126"/><text x="3.6378%" y="195.50"></text></g><g><title>lib.nr:51:33::RuntimeBigNumTrait::validate_in_range(self) (126 gates, 0.09%)</title><rect x="3.3878%" y="157" width="0.0922%" height="23" fill="rgb(255,245,245)" fg:x="4629" fg:w="126"/><text x="3.6378%" y="171.50"></text></g><g><title>runtime_bignum.nr:237:9::self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32) (16 gates, 0.01%)</title><rect x="3.4683%" y="133" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="4739" fg:w="16"/><text x="3.7183%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (16 gates, 0.01%)</title><rect x="3.4683%" y="109" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="4739" fg:w="16"/><text x="3.7183%" y="123.50"></text></g><g><title>opcode::blackbox::range (16 gates, 0.01%)</title><rect x="3.4683%" y="85" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="4739" fg:w="16"/><text x="3.7183%" y="99.50"></text></g><g><title>runtime_bignum.nr:234:13::self.limbs[i].assert_max_bit_size(120) (110 gates, 0.08%)</title><rect x="3.4800%" y="133" width="0.0805%" height="23" fill="rgb(255,245,245)" fg:x="4755" fg:w="110"/><text x="3.7300%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (110 gates, 0.08%)</title><rect x="3.4800%" y="109" width="0.0805%" height="23" fill="rgb(255,245,245)" fg:x="4755" fg:w="110"/><text x="3.7300%" y="123.50"></text></g><g><title>opcode::blackbox::range (110 gates, 0.08%)</title><rect x="3.4800%" y="85" width="0.0805%" height="23" fill="rgb(255,245,245)" fg:x="4755" fg:w="110"/><text x="3.7300%" y="99.50"></text></g><g><title>main.nr:186:9::lambda.validate_in_range() (118 gates, 0.09%)</title><rect x="3.4800%" y="181" width="0.0864%" height="23" fill="rgb(255,245,245)" fg:x="4755" fg:w="118"/><text x="3.7300%" y="195.50"></text></g><g><title>lib.nr:51:33::RuntimeBigNumTrait::validate_in_range(self) (118 gates, 0.09%)</title><rect x="3.4800%" y="157" width="0.0864%" height="23" fill="rgb(255,245,245)" fg:x="4755" fg:w="118"/><text x="3.7300%" y="171.50"></text></g><g><title>runtime_bignum.nr:237:9::self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32) (8 gates, 0.01%)</title><rect x="3.5605%" y="133" width="0.0059%" height="23" fill="rgb(255,248,248)" fg:x="4865" fg:w="8"/><text x="3.8105%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (8 gates, 0.01%)</title><rect x="3.5605%" y="109" width="0.0059%" height="23" fill="rgb(255,248,248)" fg:x="4865" fg:w="8"/><text x="3.8105%" y="123.50"></text></g><g><title>opcode::blackbox::range (8 gates, 0.01%)</title><rect x="3.5605%" y="85" width="0.0059%" height="23" fill="rgb(255,248,248)" fg:x="4865" fg:w="8"/><text x="3.8105%" y="99.50"></text></g><g><title>runtime_bignum.nr:588:26::diff * (diff + modulus_mod_n) * (diff - modulus_mod_n) (14 gates, 0.01%)</title><rect x="3.5664%" y="133" width="0.0102%" height="23" fill="rgb(255,248,248)" fg:x="4873" fg:w="14"/><text x="3.8164%" y="147.50"></text></g><g><title>opcode::arithmetic (14 gates, 0.01%)</title><rect x="3.5664%" y="109" width="0.0102%" height="23" fill="rgb(255,248,248)" fg:x="4873" fg:w="14"/><text x="3.8164%" y="123.50"></text></g><g><title>runtime_bignum.nr:588:26::diff * (diff + modulus_mod_n) (27 gates, 0.02%)</title><rect x="3.5766%" y="133" width="0.0198%" height="23" fill="rgb(255,247,247)" fg:x="4887" fg:w="27"/><text x="3.8266%" y="147.50"></text></g><g><title>opcode::arithmetic (27 gates, 0.02%)</title><rect x="3.5766%" y="109" width="0.0198%" height="23" fill="rgb(255,247,247)" fg:x="4887" fg:w="27"/><text x="3.8266%" y="123.50"></text></g><g><title>main.nr:189:9::x1.assert_is_not_equal(x2) (69 gates, 0.05%)</title><rect x="3.5664%" y="181" width="0.0505%" height="23" fill="rgb(255,246,246)" fg:x="4873" fg:w="69"/><text x="3.8164%" y="195.50"></text></g><g><title>lib.nr:264:9::Params::get_instance().assert_is_not_equal(self, other) (69 gates, 0.05%)</title><rect x="3.5664%" y="157" width="0.0505%" height="23" fill="rgb(255,246,246)" fg:x="4873" fg:w="69"/><text x="3.8164%" y="171.50"></text></g><g><title>runtime_bignum.nr:589:16::target != 0 (28 gates, 0.02%)</title><rect x="3.5964%" y="133" width="0.0205%" height="23" fill="rgb(255,247,247)" fg:x="4914" fg:w="28"/><text x="3.8464%" y="147.50"></text></g><g><title>opcode::arithmetic (28 gates, 0.02%)</title><rect x="3.5964%" y="109" width="0.0205%" height="23" fill="rgb(255,247,247)" fg:x="4914" fg:w="28"/><text x="3.8464%" y="123.50"></text></g><g><title>runtime_bignum.nr:255:13::self.limbs[i].assert_max_bit_size(120) (111 gates, 0.08%)</title><rect x="3.6169%" y="109" width="0.0812%" height="23" fill="rgb(255,245,245)" fg:x="4942" fg:w="111"/><text x="3.8669%" y="123.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (111 gates, 0.08%)</title><rect x="3.6169%" y="85" width="0.0812%" height="23" fill="rgb(255,245,245)" fg:x="4942" fg:w="111"/><text x="3.8669%" y="99.50"></text></g><g><title>opcode::blackbox::range (111 gates, 0.08%)</title><rect x="3.6169%" y="61" width="0.0812%" height="23" fill="rgb(255,245,245)" fg:x="4942" fg:w="111"/><text x="3.8669%" y="75.50"></text></g><g><title>runtime_bignum.nr:424:9::quotient.validate_quotient_in_range() (121 gates, 0.09%)</title><rect x="3.6169%" y="133" width="0.0886%" height="23" fill="rgb(255,245,245)" fg:x="4942" fg:w="121"/><text x="3.8669%" y="147.50"></text></g><g><title>runtime_bignum.nr:259:9::self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32) (10 gates, 0.01%)</title><rect x="3.6981%" y="109" width="0.0073%" height="23" fill="rgb(255,248,248)" fg:x="5053" fg:w="10"/><text x="3.9481%" y="123.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (10 gates, 0.01%)</title><rect x="3.6981%" y="85" width="0.0073%" height="23" fill="rgb(255,248,248)" fg:x="5053" fg:w="10"/><text x="3.9481%" y="99.50"></text></g><g><title>opcode::blackbox::range (10 gates, 0.01%)</title><rect x="3.6981%" y="61" width="0.0073%" height="23" fill="rgb(255,248,248)" fg:x="5053" fg:w="10"/><text x="3.9481%" y="75.50"></text></g><g><title>runtime_bignum.nr:481:25::std::as_witness(new_term) (400 gates, 0.29%)</title><rect x="3.7054%" y="133" width="0.2927%" height="23" fill="rgb(255,241,241)" fg:x="5063" fg:w="400"/><text x="3.9554%" y="147.50"></text></g><g><title>opcode::arithmetic (400 gates, 0.29%)</title><rect x="3.7054%" y="109" width="0.2927%" height="23" fill="rgb(255,241,241)" fg:x="5063" fg:w="400"/><text x="3.9554%" y="123.50"></text></g><g><title>runtime_bignum.nr:508:9::borrow_flags.get(0).assert_max_bit_size(1) (7 gates, 0.01%)</title><rect x="3.9982%" y="133" width="0.0051%" height="23" fill="rgb(255,248,248)" fg:x="5463" fg:w="7"/><text x="4.2482%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (7 gates, 0.01%)</title><rect x="3.9982%" y="109" width="0.0051%" height="23" fill="rgb(255,248,248)" fg:x="5463" fg:w="7"/><text x="4.2482%" y="123.50"></text></g><g><title>opcode::blackbox::range (7 gates, 0.01%)</title><rect x="3.9982%" y="85" width="0.0051%" height="23" fill="rgb(255,248,248)" fg:x="5463" fg:w="7"/><text x="4.2482%" y="99.50"></text></g><g><title>runtime_bignum.nr:511:13::borrow_flags.get(i).assert_max_bit_size(1) (35 gates, 0.03%)</title><rect x="4.0033%" y="133" width="0.0256%" height="23" fill="rgb(255,247,247)" fg:x="5470" fg:w="35"/><text x="4.2533%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (35 gates, 0.03%)</title><rect x="4.0033%" y="109" width="0.0256%" height="23" fill="rgb(255,247,247)" fg:x="5470" fg:w="35"/><text x="4.2533%" y="123.50"></text></g><g><title>opcode::blackbox::range (35 gates, 0.03%)</title><rect x="4.0033%" y="85" width="0.0256%" height="23" fill="rgb(255,247,247)" fg:x="5470" fg:w="35"/><text x="4.2533%" y="99.50"></text></g><g><title>runtime_bignum.nr:534:13::std::as_witness(product_limbs.get(i)) (124 gates, 0.09%)</title><rect x="4.0289%" y="133" width="0.0908%" height="23" fill="rgb(255,245,245)" fg:x="5505" fg:w="124"/><text x="4.2789%" y="147.50"></text></g><g><title>opcode::arithmetic (124 gates, 0.09%)</title><rect x="4.0289%" y="109" width="0.0908%" height="23" fill="rgb(255,245,245)" fg:x="5505" fg:w="124"/><text x="4.2789%" y="123.50"></text></g><g><title>runtime_bignum.nr:535:13::product_limbs.get(i).assert_max_bit_size(126) (221 gates, 0.16%)</title><rect x="4.1197%" y="133" width="0.1617%" height="23" fill="rgb(255,244,244)" fg:x="5629" fg:w="221"/><text x="4.3697%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (221 gates, 0.16%)</title><rect x="4.1197%" y="109" width="0.1617%" height="23" fill="rgb(255,244,244)" fg:x="5629" fg:w="221"/><text x="4.3697%" y="123.50"></text></g><g><title>opcode::blackbox::range (221 gates, 0.16%)</title><rect x="4.1197%" y="85" width="0.1617%" height="23" fill="rgb(255,244,244)" fg:x="5629" fg:w="221"/><text x="4.3697%" y="99.50"></text></g><g><title>main.nr:192:9::BigNum::evaluate_quadratic_expression(
            [[lambda]],
            [[false]],
            [[x2, x1]],
            [[false, true]],
            [y2, y1],
            [true, false]
        ) (915 gates, 0.67%)</title><rect x="3.6169%" y="181" width="0.6697%" height="23" fill="rgb(255,237,237)" fg:x="4942" fg:w="915"/><text x="3.8669%" y="195.50"></text></g><g><title>lib.nr:241:9::Params::get_instance().evaluate_quadratic_expression(
            lhs_terms,
            lhs_flags,
            rhs_terms,
            rhs_flags,
            linear_terms,
            linear_flags
        ) (915 gates, 0.67%)</title><rect x="3.6169%" y="157" width="0.6697%" height="23" fill="rgb(255,237,237)" fg:x="4942" fg:w="915"/><text x="3.8669%" y="171.50"></text></g><g><title>runtime_bignum.nr:539:16::product_limbs.get(N + N - 2) == 0 (7 gates, 0.01%)</title><rect x="4.2814%" y="133" width="0.0051%" height="23" fill="rgb(255,248,248)" fg:x="5850" fg:w="7"/><text x="4.5314%" y="147.50"></text></g><g><title>opcode::arithmetic (7 gates, 0.01%)</title><rect x="4.2814%" y="109" width="0.0051%" height="23" fill="rgb(255,248,248)" fg:x="5850" fg:w="7"/><text x="4.5314%" y="123.50"></text></g><g><title>runtime_bignum.nr:255:13::self.limbs[i].assert_max_bit_size(120) (110 gates, 0.08%)</title><rect x="4.2865%" y="109" width="0.0805%" height="23" fill="rgb(255,245,245)" fg:x="5857" fg:w="110"/><text x="4.5365%" y="123.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (110 gates, 0.08%)</title><rect x="4.2865%" y="85" width="0.0805%" height="23" fill="rgb(255,245,245)" fg:x="5857" fg:w="110"/><text x="4.5365%" y="99.50"></text></g><g><title>opcode::blackbox::range (110 gates, 0.08%)</title><rect x="4.2865%" y="61" width="0.0805%" height="23" fill="rgb(255,245,245)" fg:x="5857" fg:w="110"/><text x="4.5365%" y="75.50"></text></g><g><title>runtime_bignum.nr:424:9::quotient.validate_quotient_in_range() (120 gates, 0.09%)</title><rect x="4.2865%" y="133" width="0.0878%" height="23" fill="rgb(255,245,245)" fg:x="5857" fg:w="120"/><text x="4.5365%" y="147.50"></text></g><g><title>runtime_bignum.nr:259:9::self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32) (10 gates, 0.01%)</title><rect x="4.3670%" y="109" width="0.0073%" height="23" fill="rgb(255,248,248)" fg:x="5967" fg:w="10"/><text x="4.6170%" y="123.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (10 gates, 0.01%)</title><rect x="4.3670%" y="85" width="0.0073%" height="23" fill="rgb(255,248,248)" fg:x="5967" fg:w="10"/><text x="4.6170%" y="99.50"></text></g><g><title>opcode::blackbox::range (10 gates, 0.01%)</title><rect x="4.3670%" y="61" width="0.0073%" height="23" fill="rgb(255,248,248)" fg:x="5967" fg:w="10"/><text x="4.6170%" y="75.50"></text></g><g><title>runtime_bignum.nr:481:25::std::as_witness(new_term) (112 gates, 0.08%)</title><rect x="4.3744%" y="133" width="0.0820%" height="23" fill="rgb(255,245,245)" fg:x="5977" fg:w="112"/><text x="4.6244%" y="147.50"></text></g><g><title>opcode::arithmetic (112 gates, 0.08%)</title><rect x="4.3744%" y="109" width="0.0820%" height="23" fill="rgb(255,245,245)" fg:x="5977" fg:w="112"/><text x="4.6244%" y="123.50"></text></g><g><title>runtime_bignum.nr:508:9::borrow_flags.get(0).assert_max_bit_size(1) (7 gates, 0.01%)</title><rect x="4.4563%" y="133" width="0.0051%" height="23" fill="rgb(255,248,248)" fg:x="6089" fg:w="7"/><text x="4.7063%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (7 gates, 0.01%)</title><rect x="4.4563%" y="109" width="0.0051%" height="23" fill="rgb(255,248,248)" fg:x="6089" fg:w="7"/><text x="4.7063%" y="123.50"></text></g><g><title>opcode::blackbox::range (7 gates, 0.01%)</title><rect x="4.4563%" y="85" width="0.0051%" height="23" fill="rgb(255,248,248)" fg:x="6089" fg:w="7"/><text x="4.7063%" y="99.50"></text></g><g><title>runtime_bignum.nr:511:13::borrow_flags.get(i).assert_max_bit_size(1) (35 gates, 0.03%)</title><rect x="4.4615%" y="133" width="0.0256%" height="23" fill="rgb(255,247,247)" fg:x="6096" fg:w="35"/><text x="4.7115%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (35 gates, 0.03%)</title><rect x="4.4615%" y="109" width="0.0256%" height="23" fill="rgb(255,247,247)" fg:x="6096" fg:w="35"/><text x="4.7115%" y="123.50"></text></g><g><title>opcode::blackbox::range (35 gates, 0.03%)</title><rect x="4.4615%" y="85" width="0.0256%" height="23" fill="rgb(255,247,247)" fg:x="6096" fg:w="35"/><text x="4.7115%" y="99.50"></text></g><g><title>runtime_bignum.nr:534:13::std::as_witness(product_limbs.get(i)) (138 gates, 0.10%)</title><rect x="4.4871%" y="133" width="0.1010%" height="23" fill="rgb(255,245,245)" fg:x="6131" fg:w="138"/><text x="4.7371%" y="147.50"></text></g><g><title>opcode::arithmetic (138 gates, 0.10%)</title><rect x="4.4871%" y="109" width="0.1010%" height="23" fill="rgb(255,245,245)" fg:x="6131" fg:w="138"/><text x="4.7371%" y="123.50"></text></g><g><title>runtime_bignum.nr:535:13::product_limbs.get(i).assert_max_bit_size(126) (221 gates, 0.16%)</title><rect x="4.5881%" y="133" width="0.1617%" height="23" fill="rgb(255,244,244)" fg:x="6269" fg:w="221"/><text x="4.8381%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (221 gates, 0.16%)</title><rect x="4.5881%" y="109" width="0.1617%" height="23" fill="rgb(255,244,244)" fg:x="6269" fg:w="221"/><text x="4.8381%" y="123.50"></text></g><g><title>opcode::blackbox::range (221 gates, 0.16%)</title><rect x="4.5881%" y="85" width="0.1617%" height="23" fill="rgb(255,244,244)" fg:x="6269" fg:w="221"/><text x="4.8381%" y="99.50"></text></g><g><title>main.nr:202:9::BigNum::evaluate_quadratic_expression(
            [[lambda]],
            [[false]],
            [[lambda]],
            [[false]],
            [x3, x2, x1],
            [true, true, true]
        ) (640 gates, 0.47%)</title><rect x="4.2865%" y="181" width="0.4684%" height="23" fill="rgb(255,239,239)" fg:x="5857" fg:w="640"/><text x="4.5365%" y="195.50"></text></g><g><title>lib.nr:241:9::Params::get_instance().evaluate_quadratic_expression(
            lhs_terms,
            lhs_flags,
            rhs_terms,
            rhs_flags,
            linear_terms,
            linear_flags
        ) (640 gates, 0.47%)</title><rect x="4.2865%" y="157" width="0.4684%" height="23" fill="rgb(255,239,239)" fg:x="5857" fg:w="640"/><text x="4.5365%" y="171.50"></text></g><g><title>runtime_bignum.nr:539:16::product_limbs.get(N + N - 2) == 0 (7 gates, 0.01%)</title><rect x="4.7498%" y="133" width="0.0051%" height="23" fill="rgb(255,248,248)" fg:x="6490" fg:w="7"/><text x="4.9998%" y="147.50"></text></g><g><title>opcode::arithmetic (7 gates, 0.01%)</title><rect x="4.7498%" y="109" width="0.0051%" height="23" fill="rgb(255,248,248)" fg:x="6490" fg:w="7"/><text x="4.9998%" y="123.50"></text></g><g><title>runtime_bignum.nr:255:13::self.limbs[i].assert_max_bit_size(120) (110 gates, 0.08%)</title><rect x="4.7549%" y="109" width="0.0805%" height="23" fill="rgb(255,245,245)" fg:x="6497" fg:w="110"/><text x="5.0049%" y="123.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (110 gates, 0.08%)</title><rect x="4.7549%" y="85" width="0.0805%" height="23" fill="rgb(255,245,245)" fg:x="6497" fg:w="110"/><text x="5.0049%" y="99.50"></text></g><g><title>opcode::blackbox::range (110 gates, 0.08%)</title><rect x="4.7549%" y="61" width="0.0805%" height="23" fill="rgb(255,245,245)" fg:x="6497" fg:w="110"/><text x="5.0049%" y="75.50"></text></g><g><title>runtime_bignum.nr:424:9::quotient.validate_quotient_in_range() (121 gates, 0.09%)</title><rect x="4.7549%" y="133" width="0.0886%" height="23" fill="rgb(255,245,245)" fg:x="6497" fg:w="121"/><text x="5.0049%" y="147.50"></text></g><g><title>runtime_bignum.nr:259:9::self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32) (11 gates, 0.01%)</title><rect x="4.8354%" y="109" width="0.0081%" height="23" fill="rgb(255,248,248)" fg:x="6607" fg:w="11"/><text x="5.0854%" y="123.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (11 gates, 0.01%)</title><rect x="4.8354%" y="85" width="0.0081%" height="23" fill="rgb(255,248,248)" fg:x="6607" fg:w="11"/><text x="5.0854%" y="99.50"></text></g><g><title>opcode::blackbox::range (11 gates, 0.01%)</title><rect x="4.8354%" y="61" width="0.0081%" height="23" fill="rgb(255,248,248)" fg:x="6607" fg:w="11"/><text x="5.0854%" y="75.50"></text></g><g><title>runtime_bignum.nr:481:25::std::as_witness(new_term) (352 gates, 0.26%)</title><rect x="4.8435%" y="133" width="0.2576%" height="23" fill="rgb(255,242,242)" fg:x="6618" fg:w="352"/><text x="5.0935%" y="147.50"></text></g><g><title>opcode::arithmetic (352 gates, 0.26%)</title><rect x="4.8435%" y="109" width="0.2576%" height="23" fill="rgb(255,242,242)" fg:x="6618" fg:w="352"/><text x="5.0935%" y="123.50"></text></g><g><title>runtime_bignum.nr:508:9::borrow_flags.get(0).assert_max_bit_size(1) (7 gates, 0.01%)</title><rect x="5.1011%" y="133" width="0.0051%" height="23" fill="rgb(255,248,248)" fg:x="6970" fg:w="7"/><text x="5.3511%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (7 gates, 0.01%)</title><rect x="5.1011%" y="109" width="0.0051%" height="23" fill="rgb(255,248,248)" fg:x="6970" fg:w="7"/><text x="5.3511%" y="123.50"></text></g><g><title>opcode::blackbox::range (7 gates, 0.01%)</title><rect x="5.1011%" y="85" width="0.0051%" height="23" fill="rgb(255,248,248)" fg:x="6970" fg:w="7"/><text x="5.3511%" y="99.50"></text></g><g><title>runtime_bignum.nr:511:13::borrow_flags.get(i).assert_max_bit_size(1) (35 gates, 0.03%)</title><rect x="5.1062%" y="133" width="0.0256%" height="23" fill="rgb(255,247,247)" fg:x="6977" fg:w="35"/><text x="5.3562%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (35 gates, 0.03%)</title><rect x="5.1062%" y="109" width="0.0256%" height="23" fill="rgb(255,247,247)" fg:x="6977" fg:w="35"/><text x="5.3562%" y="123.50"></text></g><g><title>opcode::blackbox::range (35 gates, 0.03%)</title><rect x="5.1062%" y="85" width="0.0256%" height="23" fill="rgb(255,247,247)" fg:x="6977" fg:w="35"/><text x="5.3562%" y="99.50"></text></g><g><title>runtime_bignum.nr:534:13::std::as_witness(product_limbs.get(i)) (126 gates, 0.09%)</title><rect x="5.1318%" y="133" width="0.0922%" height="23" fill="rgb(255,245,245)" fg:x="7012" fg:w="126"/><text x="5.3818%" y="147.50"></text></g><g><title>opcode::arithmetic (126 gates, 0.09%)</title><rect x="5.1318%" y="109" width="0.0922%" height="23" fill="rgb(255,245,245)" fg:x="7012" fg:w="126"/><text x="5.3818%" y="123.50"></text></g><g><title>runtime_bignum.nr:535:13::product_limbs.get(i).assert_max_bit_size(126) (220 gates, 0.16%)</title><rect x="5.2241%" y="133" width="0.1610%" height="23" fill="rgb(255,244,244)" fg:x="7138" fg:w="220"/><text x="5.4741%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (220 gates, 0.16%)</title><rect x="5.2241%" y="109" width="0.1610%" height="23" fill="rgb(255,244,244)" fg:x="7138" fg:w="220"/><text x="5.4741%" y="123.50"></text></g><g><title>opcode::blackbox::range (220 gates, 0.16%)</title><rect x="5.2241%" y="85" width="0.1610%" height="23" fill="rgb(255,244,244)" fg:x="7138" fg:w="220"/><text x="5.4741%" y="99.50"></text></g><g><title>main.nr:89:17::D2.incomplete_add_with_hint(A, transcript[i]) (2,855 gates, 2.09%)</title><rect x="3.3007%" y="205" width="2.0895%" height="23" fill="rgb(255,228,228)" fg:x="4510" fg:w="2855"/><text x="3.5507%" y="219.50">m..</text></g><g><title>main.nr:212:9::BigNum::evaluate_quadratic_expression(
            [[lambda]],
            [[false]],
            [[x3, x1]],
            [[false, true]],
            [y3, y1],
            [false, false]
        ) (868 gates, 0.64%)</title><rect x="4.7549%" y="181" width="0.6353%" height="23" fill="rgb(255,238,238)" fg:x="6497" fg:w="868"/><text x="5.0049%" y="195.50"></text></g><g><title>lib.nr:241:9::Params::get_instance().evaluate_quadratic_expression(
            lhs_terms,
            lhs_flags,
            rhs_terms,
            rhs_flags,
            linear_terms,
            linear_flags
        ) (868 gates, 0.64%)</title><rect x="4.7549%" y="157" width="0.6353%" height="23" fill="rgb(255,238,238)" fg:x="6497" fg:w="868"/><text x="5.0049%" y="171.50"></text></g><g><title>runtime_bignum.nr:539:16::product_limbs.get(N + N - 2) == 0 (7 gates, 0.01%)</title><rect x="5.3851%" y="133" width="0.0051%" height="23" fill="rgb(255,248,248)" fg:x="7358" fg:w="7"/><text x="5.6351%" y="147.50"></text></g><g><title>opcode::arithmetic (7 gates, 0.01%)</title><rect x="5.3851%" y="109" width="0.0051%" height="23" fill="rgb(255,248,248)" fg:x="7358" fg:w="7"/><text x="5.6351%" y="123.50"></text></g><g><title>runtime_bignum.nr:608:38::self.__neg_with_flags(val) (28 gates, 0.02%)</title><rect x="5.3902%" y="157" width="0.0205%" height="23" fill="rgb(255,247,247)" fg:x="7365" fg:w="28"/><text x="5.6402%" y="171.50"></text></g><g><title>opcode::blackbox::range (28 gates, 0.02%)</title><rect x="5.3902%" y="133" width="0.0205%" height="23" fill="rgb(255,247,247)" fg:x="7365" fg:w="28"/><text x="5.6402%" y="147.50"></text></g><g><title>runtime_bignum.nr:234:13::self.limbs[i].assert_max_bit_size(120) (110 gates, 0.08%)</title><rect x="5.4107%" y="133" width="0.0805%" height="23" fill="rgb(255,245,245)" fg:x="7393" fg:w="110"/><text x="5.6607%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (110 gates, 0.08%)</title><rect x="5.4107%" y="109" width="0.0805%" height="23" fill="rgb(255,245,245)" fg:x="7393" fg:w="110"/><text x="5.6607%" y="123.50"></text></g><g><title>opcode::blackbox::range (110 gates, 0.08%)</title><rect x="5.4107%" y="85" width="0.0805%" height="23" fill="rgb(255,245,245)" fg:x="7393" fg:w="110"/><text x="5.6607%" y="99.50"></text></g><g><title>runtime_bignum.nr:609:9::result.validate_in_range() (119 gates, 0.09%)</title><rect x="5.4107%" y="157" width="0.0871%" height="23" fill="rgb(255,245,245)" fg:x="7393" fg:w="119"/><text x="5.6607%" y="171.50"></text></g><g><title>runtime_bignum.nr:237:9::self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32) (9 gates, 0.01%)</title><rect x="5.4912%" y="133" width="0.0066%" height="23" fill="rgb(255,248,248)" fg:x="7503" fg:w="9"/><text x="5.7412%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (9 gates, 0.01%)</title><rect x="5.4912%" y="109" width="0.0066%" height="23" fill="rgb(255,248,248)" fg:x="7503" fg:w="9"/><text x="5.7412%" y="123.50"></text></g><g><title>opcode::blackbox::range (9 gates, 0.01%)</title><rect x="5.4912%" y="85" width="0.0066%" height="23" fill="rgb(255,248,248)" fg:x="7503" fg:w="9"/><text x="5.7412%" y="99.50"></text></g><g><title>runtime_bignum.nr:613:16::result_limb == 0 (7 gates, 0.01%)</title><rect x="5.4978%" y="157" width="0.0051%" height="23" fill="rgb(255,248,248)" fg:x="7512" fg:w="7"/><text x="5.7478%" y="171.50"></text></g><g><title>opcode::arithmetic (7 gates, 0.01%)</title><rect x="5.4978%" y="133" width="0.0051%" height="23" fill="rgb(255,248,248)" fg:x="7512" fg:w="7"/><text x="5.7478%" y="147.50"></text></g><g><title>runtime_bignum.nr:617:20::result_limb == 0 (14 gates, 0.01%)</title><rect x="5.5029%" y="157" width="0.0102%" height="23" fill="rgb(255,248,248)" fg:x="7519" fg:w="14"/><text x="5.7529%" y="171.50"></text></g><g><title>opcode::arithmetic (14 gates, 0.01%)</title><rect x="5.5029%" y="133" width="0.0102%" height="23" fill="rgb(255,248,248)" fg:x="7519" fg:w="14"/><text x="5.7529%" y="147.50"></text></g><g><title>main.nr:551:37::PointTable::new_with_hint(
            input,
            [
            transcript[0], transcript[1], transcript[2], transcript[3], transcript[4], transcript[5], transcript[6], transcript[7]
        ]
        ) (7,522 gates, 5.51%)</title><rect x="0.0132%" y="229" width="5.5051%" height="23" fill="rgb(255,214,214)" fg:x="18" fg:w="7522"/><text x="0.2632%" y="243.50">main.nr..</text></g><g><title>main.nr:93:32::A.y.neg() (175 gates, 0.13%)</title><rect x="5.3902%" y="205" width="0.1281%" height="23" fill="rgb(255,244,244)" fg:x="7365" fg:w="175"/><text x="5.6402%" y="219.50"></text></g><g><title>lib.nr:268:9::Params::get_instance().neg(self) (175 gates, 0.13%)</title><rect x="5.3902%" y="181" width="0.1281%" height="23" fill="rgb(255,244,244)" fg:x="7365" fg:w="175"/><text x="5.6402%" y="195.50"></text></g><g><title>runtime_bignum.nr:620:16::result_limb == 0 (7 gates, 0.01%)</title><rect x="5.5131%" y="157" width="0.0051%" height="23" fill="rgb(255,248,248)" fg:x="7533" fg:w="7"/><text x="5.7631%" y="171.50"></text></g><g><title>opcode::arithmetic (7 gates, 0.01%)</title><rect x="5.5131%" y="133" width="0.0051%" height="23" fill="rgb(255,248,248)" fg:x="7533" fg:w="7"/><text x="5.7631%" y="147.50"></text></g><g><title>runtime_bignum.nr:234:13::self.limbs[i].assert_max_bit_size(120) (16 gates, 0.01%)</title><rect x="5.5183%" y="157" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="7540" fg:w="16"/><text x="5.7683%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (16 gates, 0.01%)</title><rect x="5.5183%" y="133" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="7540" fg:w="16"/><text x="5.7683%" y="147.50"></text></g><g><title>opcode::blackbox::range (16 gates, 0.01%)</title><rect x="5.5183%" y="109" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="7540" fg:w="16"/><text x="5.7683%" y="123.50"></text></g><g><title>main.nr:184:9::x3.validate_in_range() (17 gates, 0.01%)</title><rect x="5.5183%" y="205" width="0.0124%" height="23" fill="rgb(255,248,248)" fg:x="7540" fg:w="17"/><text x="5.7683%" y="219.50"></text></g><g><title>lib.nr:51:33::RuntimeBigNumTrait::validate_in_range(self) (17 gates, 0.01%)</title><rect x="5.5183%" y="181" width="0.0124%" height="23" fill="rgb(255,248,248)" fg:x="7540" fg:w="17"/><text x="5.7683%" y="195.50"></text></g><g><title>runtime_bignum.nr:237:9::self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32) (1 gates, 0.00%)</title><rect x="5.5300%" y="157" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="7556" fg:w="1"/><text x="5.7800%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (1 gates, 0.00%)</title><rect x="5.5300%" y="133" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="7556" fg:w="1"/><text x="5.7800%" y="147.50"></text></g><g><title>opcode::blackbox::range (1 gates, 0.00%)</title><rect x="5.5300%" y="109" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="7556" fg:w="1"/><text x="5.7800%" y="123.50"></text></g><g><title>runtime_bignum.nr:234:13::self.limbs[i].assert_max_bit_size(120) (16 gates, 0.01%)</title><rect x="5.5307%" y="157" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="7557" fg:w="16"/><text x="5.7807%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (16 gates, 0.01%)</title><rect x="5.5307%" y="133" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="7557" fg:w="16"/><text x="5.7807%" y="147.50"></text></g><g><title>opcode::blackbox::range (16 gates, 0.01%)</title><rect x="5.5307%" y="109" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="7557" fg:w="16"/><text x="5.7807%" y="123.50"></text></g><g><title>main.nr:185:9::y3.validate_in_range() (18 gates, 0.01%)</title><rect x="5.5307%" y="205" width="0.0132%" height="23" fill="rgb(255,248,248)" fg:x="7557" fg:w="18"/><text x="5.7807%" y="219.50"></text></g><g><title>lib.nr:51:33::RuntimeBigNumTrait::validate_in_range(self) (18 gates, 0.01%)</title><rect x="5.5307%" y="181" width="0.0132%" height="23" fill="rgb(255,248,248)" fg:x="7557" fg:w="18"/><text x="5.7807%" y="195.50"></text></g><g><title>runtime_bignum.nr:237:9::self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32) (2 gates, 0.00%)</title><rect x="5.5424%" y="157" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="7573" fg:w="2"/><text x="5.7924%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (2 gates, 0.00%)</title><rect x="5.5424%" y="133" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="7573" fg:w="2"/><text x="5.7924%" y="147.50"></text></g><g><title>opcode::blackbox::range (2 gates, 0.00%)</title><rect x="5.5424%" y="109" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="7573" fg:w="2"/><text x="5.7924%" y="123.50"></text></g><g><title>runtime_bignum.nr:234:13::self.limbs[i].assert_max_bit_size(120) (16 gates, 0.01%)</title><rect x="5.5439%" y="157" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="7575" fg:w="16"/><text x="5.7939%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (16 gates, 0.01%)</title><rect x="5.5439%" y="133" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="7575" fg:w="16"/><text x="5.7939%" y="147.50"></text></g><g><title>opcode::blackbox::range (16 gates, 0.01%)</title><rect x="5.5439%" y="109" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="7575" fg:w="16"/><text x="5.7939%" y="123.50"></text></g><g><title>main.nr:186:9::lambda.validate_in_range() (18 gates, 0.01%)</title><rect x="5.5439%" y="205" width="0.0132%" height="23" fill="rgb(255,248,248)" fg:x="7575" fg:w="18"/><text x="5.7939%" y="219.50"></text></g><g><title>lib.nr:51:33::RuntimeBigNumTrait::validate_in_range(self) (18 gates, 0.01%)</title><rect x="5.5439%" y="181" width="0.0132%" height="23" fill="rgb(255,248,248)" fg:x="7575" fg:w="18"/><text x="5.7939%" y="195.50"></text></g><g><title>runtime_bignum.nr:237:9::self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32) (2 gates, 0.00%)</title><rect x="5.5556%" y="157" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="7591" fg:w="2"/><text x="5.8056%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (2 gates, 0.00%)</title><rect x="5.5556%" y="133" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="7591" fg:w="2"/><text x="5.8056%" y="147.50"></text></g><g><title>opcode::blackbox::range (2 gates, 0.00%)</title><rect x="5.5556%" y="109" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="7591" fg:w="2"/><text x="5.8056%" y="123.50"></text></g><g><title>runtime_bignum.nr:588:26::diff * (diff + modulus_mod_n) * (diff - modulus_mod_n) (2 gates, 0.00%)</title><rect x="5.5571%" y="157" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="7593" fg:w="2"/><text x="5.8071%" y="171.50"></text></g><g><title>opcode::arithmetic (2 gates, 0.00%)</title><rect x="5.5571%" y="133" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="7593" fg:w="2"/><text x="5.8071%" y="147.50"></text></g><g><title>runtime_bignum.nr:588:26::diff * (diff + modulus_mod_n) (3 gates, 0.00%)</title><rect x="5.5585%" y="157" width="0.0022%" height="23" fill="rgb(255,249,249)" fg:x="7595" fg:w="3"/><text x="5.8085%" y="171.50"></text></g><g><title>opcode::arithmetic (3 gates, 0.00%)</title><rect x="5.5585%" y="133" width="0.0022%" height="23" fill="rgb(255,249,249)" fg:x="7595" fg:w="3"/><text x="5.8085%" y="147.50"></text></g><g><title>main.nr:189:9::x1.assert_is_not_equal(x2) (9 gates, 0.01%)</title><rect x="5.5571%" y="205" width="0.0066%" height="23" fill="rgb(255,248,248)" fg:x="7593" fg:w="9"/><text x="5.8071%" y="219.50"></text></g><g><title>lib.nr:264:9::Params::get_instance().assert_is_not_equal(self, other) (9 gates, 0.01%)</title><rect x="5.5571%" y="181" width="0.0066%" height="23" fill="rgb(255,248,248)" fg:x="7593" fg:w="9"/><text x="5.8071%" y="195.50"></text></g><g><title>runtime_bignum.nr:589:16::target != 0 (4 gates, 0.00%)</title><rect x="5.5607%" y="157" width="0.0029%" height="23" fill="rgb(255,249,249)" fg:x="7598" fg:w="4"/><text x="5.8107%" y="171.50"></text></g><g><title>opcode::arithmetic (4 gates, 0.00%)</title><rect x="5.5607%" y="133" width="0.0029%" height="23" fill="rgb(255,249,249)" fg:x="7598" fg:w="4"/><text x="5.8107%" y="147.50"></text></g><g><title>runtime_bignum.nr:255:13::self.limbs[i].assert_max_bit_size(120) (15 gates, 0.01%)</title><rect x="5.5636%" y="133" width="0.0110%" height="23" fill="rgb(255,248,248)" fg:x="7602" fg:w="15"/><text x="5.8136%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (15 gates, 0.01%)</title><rect x="5.5636%" y="109" width="0.0110%" height="23" fill="rgb(255,248,248)" fg:x="7602" fg:w="15"/><text x="5.8136%" y="123.50"></text></g><g><title>opcode::blackbox::range (15 gates, 0.01%)</title><rect x="5.5636%" y="85" width="0.0110%" height="23" fill="rgb(255,248,248)" fg:x="7602" fg:w="15"/><text x="5.8136%" y="99.50"></text></g><g><title>runtime_bignum.nr:424:9::quotient.validate_quotient_in_range() (17 gates, 0.01%)</title><rect x="5.5636%" y="157" width="0.0124%" height="23" fill="rgb(255,248,248)" fg:x="7602" fg:w="17"/><text x="5.8136%" y="171.50"></text></g><g><title>runtime_bignum.nr:259:9::self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32) (2 gates, 0.00%)</title><rect x="5.5746%" y="133" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="7617" fg:w="2"/><text x="5.8246%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (2 gates, 0.00%)</title><rect x="5.5746%" y="109" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="7617" fg:w="2"/><text x="5.8246%" y="123.50"></text></g><g><title>opcode::blackbox::range (2 gates, 0.00%)</title><rect x="5.5746%" y="85" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="7617" fg:w="2"/><text x="5.8246%" y="99.50"></text></g><g><title>runtime_bignum.nr:481:25::std::as_witness(new_term) (16 gates, 0.01%)</title><rect x="5.5761%" y="157" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="7619" fg:w="16"/><text x="5.8261%" y="171.50"></text></g><g><title>opcode::arithmetic (16 gates, 0.01%)</title><rect x="5.5761%" y="133" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="7619" fg:w="16"/><text x="5.8261%" y="147.50"></text></g><g><title>runtime_bignum.nr:508:9::borrow_flags.get(0).assert_max_bit_size(1) (1 gates, 0.00%)</title><rect x="5.5878%" y="157" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="7635" fg:w="1"/><text x="5.8378%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (1 gates, 0.00%)</title><rect x="5.5878%" y="133" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="7635" fg:w="1"/><text x="5.8378%" y="147.50"></text></g><g><title>opcode::blackbox::range (1 gates, 0.00%)</title><rect x="5.5878%" y="109" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="7635" fg:w="1"/><text x="5.8378%" y="123.50"></text></g><g><title>runtime_bignum.nr:511:13::borrow_flags.get(i).assert_max_bit_size(1) (5 gates, 0.00%)</title><rect x="5.5885%" y="157" width="0.0037%" height="23" fill="rgb(255,249,249)" fg:x="7636" fg:w="5"/><text x="5.8385%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (5 gates, 0.00%)</title><rect x="5.5885%" y="133" width="0.0037%" height="23" fill="rgb(255,249,249)" fg:x="7636" fg:w="5"/><text x="5.8385%" y="147.50"></text></g><g><title>opcode::blackbox::range (5 gates, 0.00%)</title><rect x="5.5885%" y="109" width="0.0037%" height="23" fill="rgb(255,249,249)" fg:x="7636" fg:w="5"/><text x="5.8385%" y="123.50"></text></g><g><title>runtime_bignum.nr:534:13::std::as_witness(product_limbs.get(i)) (16 gates, 0.01%)</title><rect x="5.5922%" y="157" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="7641" fg:w="16"/><text x="5.8422%" y="171.50"></text></g><g><title>opcode::arithmetic (16 gates, 0.01%)</title><rect x="5.5922%" y="133" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="7641" fg:w="16"/><text x="5.8422%" y="147.50"></text></g><g><title>runtime_bignum.nr:535:13::product_limbs.get(i).assert_max_bit_size(126) (31 gates, 0.02%)</title><rect x="5.6039%" y="157" width="0.0227%" height="23" fill="rgb(255,247,247)" fg:x="7657" fg:w="31"/><text x="5.8539%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (31 gates, 0.02%)</title><rect x="5.6039%" y="133" width="0.0227%" height="23" fill="rgb(255,247,247)" fg:x="7657" fg:w="31"/><text x="5.8539%" y="147.50"></text></g><g><title>opcode::blackbox::range (31 gates, 0.02%)</title><rect x="5.6039%" y="109" width="0.0227%" height="23" fill="rgb(255,247,247)" fg:x="7657" fg:w="31"/><text x="5.8539%" y="123.50"></text></g><g><title>main.nr:192:9::BigNum::evaluate_quadratic_expression(
            [[lambda]],
            [[false]],
            [[x2, x1]],
            [[false, true]],
            [y2, y1],
            [true, false]
        ) (87 gates, 0.06%)</title><rect x="5.5636%" y="205" width="0.0637%" height="23" fill="rgb(255,246,246)" fg:x="7602" fg:w="87"/><text x="5.8136%" y="219.50"></text></g><g><title>lib.nr:241:9::Params::get_instance().evaluate_quadratic_expression(
            lhs_terms,
            lhs_flags,
            rhs_terms,
            rhs_flags,
            linear_terms,
            linear_flags
        ) (87 gates, 0.06%)</title><rect x="5.5636%" y="181" width="0.0637%" height="23" fill="rgb(255,246,246)" fg:x="7602" fg:w="87"/><text x="5.8136%" y="195.50"></text></g><g><title>runtime_bignum.nr:539:16::product_limbs.get(N + N - 2) == 0 (1 gates, 0.00%)</title><rect x="5.6266%" y="157" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="7688" fg:w="1"/><text x="5.8766%" y="171.50"></text></g><g><title>opcode::arithmetic (1 gates, 0.00%)</title><rect x="5.6266%" y="133" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="7688" fg:w="1"/><text x="5.8766%" y="147.50"></text></g><g><title>runtime_bignum.nr:255:13::self.limbs[i].assert_max_bit_size(120) (16 gates, 0.01%)</title><rect x="5.6273%" y="133" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="7689" fg:w="16"/><text x="5.8773%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (16 gates, 0.01%)</title><rect x="5.6273%" y="109" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="7689" fg:w="16"/><text x="5.8773%" y="123.50"></text></g><g><title>opcode::blackbox::range (16 gates, 0.01%)</title><rect x="5.6273%" y="85" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="7689" fg:w="16"/><text x="5.8773%" y="99.50"></text></g><g><title>runtime_bignum.nr:424:9::quotient.validate_quotient_in_range() (18 gates, 0.01%)</title><rect x="5.6273%" y="157" width="0.0132%" height="23" fill="rgb(255,248,248)" fg:x="7689" fg:w="18"/><text x="5.8773%" y="171.50"></text></g><g><title>runtime_bignum.nr:259:9::self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32) (2 gates, 0.00%)</title><rect x="5.6390%" y="133" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="7705" fg:w="2"/><text x="5.8890%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (2 gates, 0.00%)</title><rect x="5.6390%" y="109" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="7705" fg:w="2"/><text x="5.8890%" y="123.50"></text></g><g><title>opcode::blackbox::range (2 gates, 0.00%)</title><rect x="5.6390%" y="85" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="7705" fg:w="2"/><text x="5.8890%" y="99.50"></text></g><g><title>runtime_bignum.nr:481:25::std::as_witness(new_term) (16 gates, 0.01%)</title><rect x="5.6405%" y="157" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="7707" fg:w="16"/><text x="5.8905%" y="171.50"></text></g><g><title>opcode::arithmetic (16 gates, 0.01%)</title><rect x="5.6405%" y="133" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="7707" fg:w="16"/><text x="5.8905%" y="147.50"></text></g><g><title>runtime_bignum.nr:508:9::borrow_flags.get(0).assert_max_bit_size(1) (1 gates, 0.00%)</title><rect x="5.6522%" y="157" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="7723" fg:w="1"/><text x="5.9022%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (1 gates, 0.00%)</title><rect x="5.6522%" y="133" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="7723" fg:w="1"/><text x="5.9022%" y="147.50"></text></g><g><title>opcode::blackbox::range (1 gates, 0.00%)</title><rect x="5.6522%" y="109" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="7723" fg:w="1"/><text x="5.9022%" y="123.50"></text></g><g><title>runtime_bignum.nr:511:13::borrow_flags.get(i).assert_max_bit_size(1) (5 gates, 0.00%)</title><rect x="5.6529%" y="157" width="0.0037%" height="23" fill="rgb(255,249,249)" fg:x="7724" fg:w="5"/><text x="5.9029%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (5 gates, 0.00%)</title><rect x="5.6529%" y="133" width="0.0037%" height="23" fill="rgb(255,249,249)" fg:x="7724" fg:w="5"/><text x="5.9029%" y="147.50"></text></g><g><title>opcode::blackbox::range (5 gates, 0.00%)</title><rect x="5.6529%" y="109" width="0.0037%" height="23" fill="rgb(255,249,249)" fg:x="7724" fg:w="5"/><text x="5.9029%" y="123.50"></text></g><g><title>runtime_bignum.nr:534:13::std::as_witness(product_limbs.get(i)) (18 gates, 0.01%)</title><rect x="5.6566%" y="157" width="0.0132%" height="23" fill="rgb(255,248,248)" fg:x="7729" fg:w="18"/><text x="5.9066%" y="171.50"></text></g><g><title>opcode::arithmetic (18 gates, 0.01%)</title><rect x="5.6566%" y="133" width="0.0132%" height="23" fill="rgb(255,248,248)" fg:x="7729" fg:w="18"/><text x="5.9066%" y="147.50"></text></g><g><title>runtime_bignum.nr:535:13::product_limbs.get(i).assert_max_bit_size(126) (31 gates, 0.02%)</title><rect x="5.6698%" y="157" width="0.0227%" height="23" fill="rgb(255,247,247)" fg:x="7747" fg:w="31"/><text x="5.9198%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (31 gates, 0.02%)</title><rect x="5.6698%" y="133" width="0.0227%" height="23" fill="rgb(255,247,247)" fg:x="7747" fg:w="31"/><text x="5.9198%" y="147.50"></text></g><g><title>opcode::blackbox::range (31 gates, 0.02%)</title><rect x="5.6698%" y="109" width="0.0227%" height="23" fill="rgb(255,247,247)" fg:x="7747" fg:w="31"/><text x="5.9198%" y="123.50"></text></g><g><title>main.nr:202:9::BigNum::evaluate_quadratic_expression(
            [[lambda]],
            [[false]],
            [[lambda]],
            [[false]],
            [x3, x2, x1],
            [true, true, true]
        ) (90 gates, 0.07%)</title><rect x="5.6273%" y="205" width="0.0659%" height="23" fill="rgb(255,246,246)" fg:x="7689" fg:w="90"/><text x="5.8773%" y="219.50"></text></g><g><title>lib.nr:241:9::Params::get_instance().evaluate_quadratic_expression(
            lhs_terms,
            lhs_flags,
            rhs_terms,
            rhs_flags,
            linear_terms,
            linear_flags
        ) (90 gates, 0.07%)</title><rect x="5.6273%" y="181" width="0.0659%" height="23" fill="rgb(255,246,246)" fg:x="7689" fg:w="90"/><text x="5.8773%" y="195.50"></text></g><g><title>runtime_bignum.nr:539:16::product_limbs.get(N + N - 2) == 0 (1 gates, 0.00%)</title><rect x="5.6925%" y="157" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="7778" fg:w="1"/><text x="5.9425%" y="171.50"></text></g><g><title>opcode::arithmetic (1 gates, 0.00%)</title><rect x="5.6925%" y="133" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="7778" fg:w="1"/><text x="5.9425%" y="147.50"></text></g><g><title>runtime_bignum.nr:255:13::self.limbs[i].assert_max_bit_size(120) (16 gates, 0.01%)</title><rect x="5.6932%" y="133" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="7779" fg:w="16"/><text x="5.9432%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (16 gates, 0.01%)</title><rect x="5.6932%" y="109" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="7779" fg:w="16"/><text x="5.9432%" y="123.50"></text></g><g><title>opcode::blackbox::range (16 gates, 0.01%)</title><rect x="5.6932%" y="85" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="7779" fg:w="16"/><text x="5.9432%" y="99.50"></text></g><g><title>runtime_bignum.nr:424:9::quotient.validate_quotient_in_range() (17 gates, 0.01%)</title><rect x="5.6932%" y="157" width="0.0124%" height="23" fill="rgb(255,248,248)" fg:x="7779" fg:w="17"/><text x="5.9432%" y="171.50"></text></g><g><title>runtime_bignum.nr:259:9::self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32) (1 gates, 0.00%)</title><rect x="5.7049%" y="133" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="7795" fg:w="1"/><text x="5.9549%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (1 gates, 0.00%)</title><rect x="5.7049%" y="109" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="7795" fg:w="1"/><text x="5.9549%" y="123.50"></text></g><g><title>opcode::blackbox::range (1 gates, 0.00%)</title><rect x="5.7049%" y="85" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="7795" fg:w="1"/><text x="5.9549%" y="99.50"></text></g><g><title>runtime_bignum.nr:481:25::std::as_witness(new_term) (16 gates, 0.01%)</title><rect x="5.7056%" y="157" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="7796" fg:w="16"/><text x="5.9556%" y="171.50"></text></g><g><title>opcode::arithmetic (16 gates, 0.01%)</title><rect x="5.7056%" y="133" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="7796" fg:w="16"/><text x="5.9556%" y="147.50"></text></g><g><title>runtime_bignum.nr:508:9::borrow_flags.get(0).assert_max_bit_size(1) (1 gates, 0.00%)</title><rect x="5.7173%" y="157" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="7812" fg:w="1"/><text x="5.9673%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (1 gates, 0.00%)</title><rect x="5.7173%" y="133" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="7812" fg:w="1"/><text x="5.9673%" y="147.50"></text></g><g><title>opcode::blackbox::range (1 gates, 0.00%)</title><rect x="5.7173%" y="109" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="7812" fg:w="1"/><text x="5.9673%" y="123.50"></text></g><g><title>runtime_bignum.nr:511:13::borrow_flags.get(i).assert_max_bit_size(1) (5 gates, 0.00%)</title><rect x="5.7181%" y="157" width="0.0037%" height="23" fill="rgb(255,249,249)" fg:x="7813" fg:w="5"/><text x="5.9681%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (5 gates, 0.00%)</title><rect x="5.7181%" y="133" width="0.0037%" height="23" fill="rgb(255,249,249)" fg:x="7813" fg:w="5"/><text x="5.9681%" y="147.50"></text></g><g><title>opcode::blackbox::range (5 gates, 0.00%)</title><rect x="5.7181%" y="109" width="0.0037%" height="23" fill="rgb(255,249,249)" fg:x="7813" fg:w="5"/><text x="5.9681%" y="123.50"></text></g><g><title>runtime_bignum.nr:534:13::std::as_witness(product_limbs.get(i)) (16 gates, 0.01%)</title><rect x="5.7217%" y="157" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="7818" fg:w="16"/><text x="5.9717%" y="171.50"></text></g><g><title>opcode::arithmetic (16 gates, 0.01%)</title><rect x="5.7217%" y="133" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="7818" fg:w="16"/><text x="5.9717%" y="147.50"></text></g><g><title>runtime_bignum.nr:535:13::product_limbs.get(i).assert_max_bit_size(126) (32 gates, 0.02%)</title><rect x="5.7334%" y="157" width="0.0234%" height="23" fill="rgb(255,247,247)" fg:x="7834" fg:w="32"/><text x="5.9834%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (32 gates, 0.02%)</title><rect x="5.7334%" y="133" width="0.0234%" height="23" fill="rgb(255,247,247)" fg:x="7834" fg:w="32"/><text x="5.9834%" y="147.50"></text></g><g><title>opcode::blackbox::range (32 gates, 0.02%)</title><rect x="5.7334%" y="109" width="0.0234%" height="23" fill="rgb(255,247,247)" fg:x="7834" fg:w="32"/><text x="5.9834%" y="123.50"></text></g><g><title>main.nr:560:31::accumulator.incomplete_add_with_hint(T.get(scalar.base4_slices[0]), transcript[3 + 5]) (327 gates, 0.24%)</title><rect x="5.5183%" y="229" width="0.2393%" height="23" fill="rgb(255,242,242)" fg:x="7540" fg:w="327"/><text x="5.7683%" y="243.50"></text></g><g><title>main.nr:212:9::BigNum::evaluate_quadratic_expression(
            [[lambda]],
            [[false]],
            [[x3, x1]],
            [[false, true]],
            [y3, y1],
            [false, false]
        ) (88 gates, 0.06%)</title><rect x="5.6932%" y="205" width="0.0644%" height="23" fill="rgb(255,246,246)" fg:x="7779" fg:w="88"/><text x="5.9432%" y="219.50"></text></g><g><title>lib.nr:241:9::Params::get_instance().evaluate_quadratic_expression(
            lhs_terms,
            lhs_flags,
            rhs_terms,
            rhs_flags,
            linear_terms,
            linear_flags
        ) (88 gates, 0.06%)</title><rect x="5.6932%" y="181" width="0.0644%" height="23" fill="rgb(255,246,246)" fg:x="7779" fg:w="88"/><text x="5.9432%" y="195.50"></text></g><g><title>runtime_bignum.nr:539:16::product_limbs.get(N + N - 2) == 0 (1 gates, 0.00%)</title><rect x="5.7569%" y="157" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="7866" fg:w="1"/><text x="6.0069%" y="171.50"></text></g><g><title>opcode::arithmetic (1 gates, 0.00%)</title><rect x="5.7569%" y="133" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="7866" fg:w="1"/><text x="6.0069%" y="147.50"></text></g><g><title>opcode::arithmetic (21 gates, 0.02%)</title><rect x="5.7576%" y="181" width="0.0154%" height="23" fill="rgb(255,248,248)" fg:x="7867" fg:w="21"/><text x="6.0076%" y="195.50"></text></g><g><title>opcode::memory::init (4 gates, 0.00%)</title><rect x="5.7730%" y="181" width="0.0029%" height="23" fill="rgb(255,249,249)" fg:x="7888" fg:w="4"/><text x="6.0230%" y="195.50"></text></g><g><title>main.nr:104:23::self.x[idx] (35 gates, 0.03%)</title><rect x="5.7576%" y="205" width="0.0256%" height="23" fill="rgb(255,247,247)" fg:x="7867" fg:w="35"/><text x="6.0076%" y="219.50"></text></g><g><title>opcode::memory::op (10 gates, 0.01%)</title><rect x="5.7759%" y="181" width="0.0073%" height="23" fill="rgb(255,248,248)" fg:x="7892" fg:w="10"/><text x="6.0259%" y="195.50"></text></g><g><title>opcode::arithmetic (7 gates, 0.01%)</title><rect x="5.7832%" y="181" width="0.0051%" height="23" fill="rgb(255,248,248)" fg:x="7902" fg:w="7"/><text x="6.0332%" y="195.50"></text></g><g><title>opcode::memory::init (4 gates, 0.00%)</title><rect x="5.7883%" y="181" width="0.0029%" height="23" fill="rgb(255,249,249)" fg:x="7909" fg:w="4"/><text x="6.0383%" y="195.50"></text></g><g><title>main.nr:560:68::T.get(scalar.base4_slices[0]) (56 gates, 0.04%)</title><rect x="5.7576%" y="229" width="0.0410%" height="23" fill="rgb(255,247,247)" fg:x="7867" fg:w="56"/><text x="6.0076%" y="243.50"></text></g><g><title>main.nr:104:39::self.y[idx] (21 gates, 0.02%)</title><rect x="5.7832%" y="205" width="0.0154%" height="23" fill="rgb(255,248,248)" fg:x="7902" fg:w="21"/><text x="6.0332%" y="219.50"></text></g><g><title>opcode::memory::op (10 gates, 0.01%)</title><rect x="5.7913%" y="181" width="0.0073%" height="23" fill="rgb(255,248,248)" fg:x="7913" fg:w="10"/><text x="6.0413%" y="195.50"></text></g><g><title>runtime_bignum.nr:234:13::self.limbs[i].assert_max_bit_size(120) (1,008 gates, 0.74%)</title><rect x="5.7986%" y="157" width="0.7377%" height="23" fill="rgb(255,237,237)" fg:x="7923" fg:w="1008"/><text x="6.0486%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (1,008 gates, 0.74%)</title><rect x="5.7986%" y="133" width="0.7377%" height="23" fill="rgb(255,237,237)" fg:x="7923" fg:w="1008"/><text x="6.0486%" y="147.50"></text></g><g><title>opcode::blackbox::range (1,008 gates, 0.74%)</title><rect x="5.7986%" y="109" width="0.7377%" height="23" fill="rgb(255,237,237)" fg:x="7923" fg:w="1008"/><text x="6.0486%" y="123.50"></text></g><g><title>main.nr:500:9::x3.validate_in_range() (1,087 gates, 0.80%)</title><rect x="5.7986%" y="205" width="0.7955%" height="23" fill="rgb(255,236,236)" fg:x="7923" fg:w="1087"/><text x="6.0486%" y="219.50"></text></g><g><title>lib.nr:51:33::RuntimeBigNumTrait::validate_in_range(self) (1,087 gates, 0.80%)</title><rect x="5.7986%" y="181" width="0.7955%" height="23" fill="rgb(255,236,236)" fg:x="7923" fg:w="1087"/><text x="6.0486%" y="195.50"></text></g><g><title>runtime_bignum.nr:237:9::self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32) (79 gates, 0.06%)</title><rect x="6.5363%" y="157" width="0.0578%" height="23" fill="rgb(255,246,246)" fg:x="8931" fg:w="79"/><text x="6.7863%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (79 gates, 0.06%)</title><rect x="6.5363%" y="133" width="0.0578%" height="23" fill="rgb(255,246,246)" fg:x="8931" fg:w="79"/><text x="6.7863%" y="147.50"></text></g><g><title>opcode::blackbox::range (79 gates, 0.06%)</title><rect x="6.5363%" y="109" width="0.0578%" height="23" fill="rgb(255,246,246)" fg:x="8931" fg:w="79"/><text x="6.7863%" y="123.50"></text></g><g><title>runtime_bignum.nr:234:13::self.limbs[i].assert_max_bit_size(120) (976 gates, 0.71%)</title><rect x="6.5941%" y="157" width="0.7143%" height="23" fill="rgb(255,237,237)" fg:x="9010" fg:w="976"/><text x="6.8441%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (976 gates, 0.71%)</title><rect x="6.5941%" y="133" width="0.7143%" height="23" fill="rgb(255,237,237)" fg:x="9010" fg:w="976"/><text x="6.8441%" y="147.50"></text></g><g><title>opcode::blackbox::range (976 gates, 0.71%)</title><rect x="6.5941%" y="109" width="0.7143%" height="23" fill="rgb(255,237,237)" fg:x="9010" fg:w="976"/><text x="6.8441%" y="123.50"></text></g><g><title>main.nr:501:9::y3.validate_in_range() (1,054 gates, 0.77%)</title><rect x="6.5941%" y="205" width="0.7714%" height="23" fill="rgb(255,236,236)" fg:x="9010" fg:w="1054"/><text x="6.8441%" y="219.50"></text></g><g><title>lib.nr:51:33::RuntimeBigNumTrait::validate_in_range(self) (1,054 gates, 0.77%)</title><rect x="6.5941%" y="181" width="0.7714%" height="23" fill="rgb(255,236,236)" fg:x="9010" fg:w="1054"/><text x="6.8441%" y="195.50"></text></g><g><title>runtime_bignum.nr:237:9::self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32) (78 gates, 0.06%)</title><rect x="7.3084%" y="157" width="0.0571%" height="23" fill="rgb(255,246,246)" fg:x="9986" fg:w="78"/><text x="7.5584%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (78 gates, 0.06%)</title><rect x="7.3084%" y="133" width="0.0571%" height="23" fill="rgb(255,246,246)" fg:x="9986" fg:w="78"/><text x="7.5584%" y="147.50"></text></g><g><title>opcode::blackbox::range (78 gates, 0.06%)</title><rect x="7.3084%" y="109" width="0.0571%" height="23" fill="rgb(255,246,246)" fg:x="9986" fg:w="78"/><text x="7.5584%" y="123.50"></text></g><g><title>runtime_bignum.nr:234:13::self.limbs[i].assert_max_bit_size(120) (1,008 gates, 0.74%)</title><rect x="7.3655%" y="157" width="0.7377%" height="23" fill="rgb(255,237,237)" fg:x="10064" fg:w="1008"/><text x="7.6155%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (1,008 gates, 0.74%)</title><rect x="7.3655%" y="133" width="0.7377%" height="23" fill="rgb(255,237,237)" fg:x="10064" fg:w="1008"/><text x="7.6155%" y="147.50"></text></g><g><title>opcode::blackbox::range (1,008 gates, 0.74%)</title><rect x="7.3655%" y="109" width="0.7377%" height="23" fill="rgb(255,237,237)" fg:x="10064" fg:w="1008"/><text x="7.6155%" y="123.50"></text></g><g><title>main.nr:502:9::lambda.validate_in_range() (1,150 gates, 0.84%)</title><rect x="7.3655%" y="205" width="0.8416%" height="23" fill="rgb(255,236,236)" fg:x="10064" fg:w="1150"/><text x="7.6155%" y="219.50"></text></g><g><title>lib.nr:51:33::RuntimeBigNumTrait::validate_in_range(self) (1,150 gates, 0.84%)</title><rect x="7.3655%" y="181" width="0.8416%" height="23" fill="rgb(255,236,236)" fg:x="10064" fg:w="1150"/><text x="7.6155%" y="195.50"></text></g><g><title>runtime_bignum.nr:237:9::self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32) (142 gates, 0.10%)</title><rect x="8.1032%" y="157" width="0.1039%" height="23" fill="rgb(255,245,245)" fg:x="11072" fg:w="142"/><text x="8.3532%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (142 gates, 0.10%)</title><rect x="8.1032%" y="133" width="0.1039%" height="23" fill="rgb(255,245,245)" fg:x="11072" fg:w="142"/><text x="8.3532%" y="147.50"></text></g><g><title>opcode::blackbox::range (142 gates, 0.10%)</title><rect x="8.1032%" y="109" width="0.1039%" height="23" fill="rgb(255,245,245)" fg:x="11072" fg:w="142"/><text x="8.3532%" y="123.50"></text></g><g><title>runtime_bignum.nr:255:13::self.limbs[i].assert_max_bit_size(120) (977 gates, 0.72%)</title><rect x="8.2071%" y="133" width="0.7150%" height="23" fill="rgb(255,237,237)" fg:x="11214" fg:w="977"/><text x="8.4571%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (977 gates, 0.72%)</title><rect x="8.2071%" y="109" width="0.7150%" height="23" fill="rgb(255,237,237)" fg:x="11214" fg:w="977"/><text x="8.4571%" y="123.50"></text></g><g><title>opcode::blackbox::range (977 gates, 0.72%)</title><rect x="8.2071%" y="85" width="0.7150%" height="23" fill="rgb(255,237,237)" fg:x="11214" fg:w="977"/><text x="8.4571%" y="99.50"></text></g><g><title>runtime_bignum.nr:424:9::quotient.validate_quotient_in_range() (1,055 gates, 0.77%)</title><rect x="8.2071%" y="157" width="0.7721%" height="23" fill="rgb(255,236,236)" fg:x="11214" fg:w="1055"/><text x="8.4571%" y="171.50"></text></g><g><title>runtime_bignum.nr:259:9::self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32) (78 gates, 0.06%)</title><rect x="8.9222%" y="133" width="0.0571%" height="23" fill="rgb(255,246,246)" fg:x="12191" fg:w="78"/><text x="9.1722%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (78 gates, 0.06%)</title><rect x="8.9222%" y="109" width="0.0571%" height="23" fill="rgb(255,246,246)" fg:x="12191" fg:w="78"/><text x="9.1722%" y="123.50"></text></g><g><title>opcode::blackbox::range (78 gates, 0.06%)</title><rect x="8.9222%" y="85" width="0.0571%" height="23" fill="rgb(255,246,246)" fg:x="12191" fg:w="78"/><text x="9.1722%" y="99.50"></text></g><g><title>runtime_bignum.nr:481:25::std::as_witness(new_term) (1,008 gates, 0.74%)</title><rect x="8.9793%" y="157" width="0.7377%" height="23" fill="rgb(255,237,237)" fg:x="12269" fg:w="1008"/><text x="9.2293%" y="171.50"></text></g><g><title>opcode::arithmetic (1,008 gates, 0.74%)</title><rect x="8.9793%" y="133" width="0.7377%" height="23" fill="rgb(255,237,237)" fg:x="12269" fg:w="1008"/><text x="9.2293%" y="147.50"></text></g><g><title>runtime_bignum.nr:508:9::borrow_flags.get(0).assert_max_bit_size(1) (63 gates, 0.05%)</title><rect x="9.7170%" y="157" width="0.0461%" height="23" fill="rgb(255,246,246)" fg:x="13277" fg:w="63"/><text x="9.9670%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (63 gates, 0.05%)</title><rect x="9.7170%" y="133" width="0.0461%" height="23" fill="rgb(255,246,246)" fg:x="13277" fg:w="63"/><text x="9.9670%" y="147.50"></text></g><g><title>opcode::blackbox::range (63 gates, 0.05%)</title><rect x="9.7170%" y="109" width="0.0461%" height="23" fill="rgb(255,246,246)" fg:x="13277" fg:w="63"/><text x="9.9670%" y="123.50"></text></g><g><title>runtime_bignum.nr:511:13::borrow_flags.get(i).assert_max_bit_size(1) (315 gates, 0.23%)</title><rect x="9.7631%" y="157" width="0.2305%" height="23" fill="rgb(255,242,242)" fg:x="13340" fg:w="315"/><text x="10.0131%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (315 gates, 0.23%)</title><rect x="9.7631%" y="133" width="0.2305%" height="23" fill="rgb(255,242,242)" fg:x="13340" fg:w="315"/><text x="10.0131%" y="147.50"></text></g><g><title>opcode::blackbox::range (315 gates, 0.23%)</title><rect x="9.7631%" y="109" width="0.2305%" height="23" fill="rgb(255,242,242)" fg:x="13340" fg:w="315"/><text x="10.0131%" y="123.50"></text></g><g><title>runtime_bignum.nr:534:13::std::as_witness(product_limbs.get(i)) (2,772 gates, 2.03%)</title><rect x="9.9936%" y="157" width="2.0287%" height="23" fill="rgb(255,228,228)" fg:x="13655" fg:w="2772"/><text x="10.2436%" y="171.50">r..</text></g><g><title>opcode::arithmetic (2,772 gates, 2.03%)</title><rect x="9.9936%" y="133" width="2.0287%" height="23" fill="rgb(255,228,228)" fg:x="13655" fg:w="2772"/><text x="10.2436%" y="147.50">o..</text></g><g><title>runtime_bignum.nr:535:13::product_limbs.get(i).assert_max_bit_size(126) (1,953 gates, 1.43%)</title><rect x="12.0224%" y="157" width="1.4293%" height="23" fill="rgb(255,232,232)" fg:x="16427" fg:w="1953"/><text x="12.2724%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (1,953 gates, 1.43%)</title><rect x="12.0224%" y="133" width="1.4293%" height="23" fill="rgb(255,232,232)" fg:x="16427" fg:w="1953"/><text x="12.2724%" y="147.50"></text></g><g><title>opcode::blackbox::range (1,953 gates, 1.43%)</title><rect x="12.0224%" y="109" width="1.4293%" height="23" fill="rgb(255,232,232)" fg:x="16427" fg:w="1953"/><text x="12.2724%" y="123.50"></text></g><g><title>main.nr:507:9::BigNum::evaluate_quadratic_expression(
            [[x1, x1, x1], [y1, y1, BigNum::new()]],
            [[false, false, false], [false, false, false]],
            [[x1], [lambda]],
            [[false], [true]],
            [CurveParams::a()],
            [false]
        ) (7,355 gates, 5.38%)</title><rect x="8.2071%" y="205" width="5.3829%" height="23" fill="rgb(255,215,215)" fg:x="11214" fg:w="7355"/><text x="8.4571%" y="219.50">main.nr..</text></g><g><title>lib.nr:241:9::Params::get_instance().evaluate_quadratic_expression(
            lhs_terms,
            lhs_flags,
            rhs_terms,
            rhs_flags,
            linear_terms,
            linear_flags
        ) (7,355 gates, 5.38%)</title><rect x="8.2071%" y="181" width="5.3829%" height="23" fill="rgb(255,215,215)" fg:x="11214" fg:w="7355"/><text x="8.4571%" y="195.50">lib.nr:..</text></g><g><title>runtime_bignum.nr:539:16::product_limbs.get(N + N - 2) == 0 (189 gates, 0.14%)</title><rect x="13.4517%" y="157" width="0.1383%" height="23" fill="rgb(255,244,244)" fg:x="18380" fg:w="189"/><text x="13.7017%" y="171.50"></text></g><g><title>opcode::arithmetic (189 gates, 0.14%)</title><rect x="13.4517%" y="133" width="0.1383%" height="23" fill="rgb(255,244,244)" fg:x="18380" fg:w="189"/><text x="13.7017%" y="147.50"></text></g><g><title>runtime_bignum.nr:255:13::self.limbs[i].assert_max_bit_size(120) (1,008 gates, 0.74%)</title><rect x="13.5900%" y="133" width="0.7377%" height="23" fill="rgb(255,237,237)" fg:x="18569" fg:w="1008"/><text x="13.8400%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (1,008 gates, 0.74%)</title><rect x="13.5900%" y="109" width="0.7377%" height="23" fill="rgb(255,237,237)" fg:x="18569" fg:w="1008"/><text x="13.8400%" y="123.50"></text></g><g><title>opcode::blackbox::range (1,008 gates, 0.74%)</title><rect x="13.5900%" y="85" width="0.7377%" height="23" fill="rgb(255,237,237)" fg:x="18569" fg:w="1008"/><text x="13.8400%" y="99.50"></text></g><g><title>runtime_bignum.nr:424:9::quotient.validate_quotient_in_range() (1,150 gates, 0.84%)</title><rect x="13.5900%" y="157" width="0.8416%" height="23" fill="rgb(255,236,236)" fg:x="18569" fg:w="1150"/><text x="13.8400%" y="171.50"></text></g><g><title>runtime_bignum.nr:259:9::self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32) (142 gates, 0.10%)</title><rect x="14.3277%" y="133" width="0.1039%" height="23" fill="rgb(255,245,245)" fg:x="19577" fg:w="142"/><text x="14.5777%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (142 gates, 0.10%)</title><rect x="14.3277%" y="109" width="0.1039%" height="23" fill="rgb(255,245,245)" fg:x="19577" fg:w="142"/><text x="14.5777%" y="123.50"></text></g><g><title>opcode::blackbox::range (142 gates, 0.10%)</title><rect x="14.3277%" y="85" width="0.1039%" height="23" fill="rgb(255,245,245)" fg:x="19577" fg:w="142"/><text x="14.5777%" y="99.50"></text></g><g><title>runtime_bignum.nr:481:25::std::as_witness(new_term) (1,008 gates, 0.74%)</title><rect x="14.4317%" y="157" width="0.7377%" height="23" fill="rgb(255,237,237)" fg:x="19719" fg:w="1008"/><text x="14.6817%" y="171.50"></text></g><g><title>opcode::arithmetic (1,008 gates, 0.74%)</title><rect x="14.4317%" y="133" width="0.7377%" height="23" fill="rgb(255,237,237)" fg:x="19719" fg:w="1008"/><text x="14.6817%" y="147.50"></text></g><g><title>runtime_bignum.nr:508:9::borrow_flags.get(0).assert_max_bit_size(1) (63 gates, 0.05%)</title><rect x="15.1694%" y="157" width="0.0461%" height="23" fill="rgb(255,246,246)" fg:x="20727" fg:w="63"/><text x="15.4194%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (63 gates, 0.05%)</title><rect x="15.1694%" y="133" width="0.0461%" height="23" fill="rgb(255,246,246)" fg:x="20727" fg:w="63"/><text x="15.4194%" y="147.50"></text></g><g><title>opcode::blackbox::range (63 gates, 0.05%)</title><rect x="15.1694%" y="109" width="0.0461%" height="23" fill="rgb(255,246,246)" fg:x="20727" fg:w="63"/><text x="15.4194%" y="123.50"></text></g><g><title>runtime_bignum.nr:511:13::borrow_flags.get(i).assert_max_bit_size(1) (315 gates, 0.23%)</title><rect x="15.2155%" y="157" width="0.2305%" height="23" fill="rgb(255,242,242)" fg:x="20790" fg:w="315"/><text x="15.4655%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (315 gates, 0.23%)</title><rect x="15.2155%" y="133" width="0.2305%" height="23" fill="rgb(255,242,242)" fg:x="20790" fg:w="315"/><text x="15.4655%" y="147.50"></text></g><g><title>opcode::blackbox::range (315 gates, 0.23%)</title><rect x="15.2155%" y="109" width="0.2305%" height="23" fill="rgb(255,242,242)" fg:x="20790" fg:w="315"/><text x="15.4655%" y="123.50"></text></g><g><title>runtime_bignum.nr:534:13::std::as_witness(product_limbs.get(i)) (1,134 gates, 0.83%)</title><rect x="15.4460%" y="157" width="0.8299%" height="23" fill="rgb(255,236,236)" fg:x="21105" fg:w="1134"/><text x="15.6960%" y="171.50"></text></g><g><title>opcode::arithmetic (1,134 gates, 0.83%)</title><rect x="15.4460%" y="133" width="0.8299%" height="23" fill="rgb(255,236,236)" fg:x="21105" fg:w="1134"/><text x="15.6960%" y="147.50"></text></g><g><title>runtime_bignum.nr:535:13::product_limbs.get(i).assert_max_bit_size(126) (1,953 gates, 1.43%)</title><rect x="16.2760%" y="157" width="1.4293%" height="23" fill="rgb(255,232,232)" fg:x="22239" fg:w="1953"/><text x="16.5260%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (1,953 gates, 1.43%)</title><rect x="16.2760%" y="133" width="1.4293%" height="23" fill="rgb(255,232,232)" fg:x="22239" fg:w="1953"/><text x="16.5260%" y="147.50"></text></g><g><title>opcode::blackbox::range (1,953 gates, 1.43%)</title><rect x="16.2760%" y="109" width="1.4293%" height="23" fill="rgb(255,232,232)" fg:x="22239" fg:w="1953"/><text x="16.5260%" y="123.50"></text></g><g><title>main.nr:517:9::BigNum::evaluate_quadratic_expression(
            [[lambda]],
            [[false]],
            [[lambda]],
            [[false]],
            [x3, x1, x1],
            [true, true, true]
        ) (5,686 gates, 4.16%)</title><rect x="13.5900%" y="205" width="4.1614%" height="23" fill="rgb(255,219,219)" fg:x="18569" fg:w="5686"/><text x="13.8400%" y="219.50">main...</text></g><g><title>lib.nr:241:9::Params::get_instance().evaluate_quadratic_expression(
            lhs_terms,
            lhs_flags,
            rhs_terms,
            rhs_flags,
            linear_terms,
            linear_flags
        ) (5,686 gates, 4.16%)</title><rect x="13.5900%" y="181" width="4.1614%" height="23" fill="rgb(255,219,219)" fg:x="18569" fg:w="5686"/><text x="13.8400%" y="195.50">lib.n..</text></g><g><title>runtime_bignum.nr:539:16::product_limbs.get(N + N - 2) == 0 (63 gates, 0.05%)</title><rect x="17.7053%" y="157" width="0.0461%" height="23" fill="rgb(255,246,246)" fg:x="24192" fg:w="63"/><text x="17.9553%" y="171.50"></text></g><g><title>opcode::arithmetic (63 gates, 0.05%)</title><rect x="17.7053%" y="133" width="0.0461%" height="23" fill="rgb(255,246,246)" fg:x="24192" fg:w="63"/><text x="17.9553%" y="147.50"></text></g><g><title>runtime_bignum.nr:255:13::self.limbs[i].assert_max_bit_size(120) (976 gates, 0.71%)</title><rect x="17.7514%" y="133" width="0.7143%" height="23" fill="rgb(255,237,237)" fg:x="24255" fg:w="976"/><text x="18.0014%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (976 gates, 0.71%)</title><rect x="17.7514%" y="109" width="0.7143%" height="23" fill="rgb(255,237,237)" fg:x="24255" fg:w="976"/><text x="18.0014%" y="123.50"></text></g><g><title>opcode::blackbox::range (976 gates, 0.71%)</title><rect x="17.7514%" y="85" width="0.7143%" height="23" fill="rgb(255,237,237)" fg:x="24255" fg:w="976"/><text x="18.0014%" y="99.50"></text></g><g><title>runtime_bignum.nr:424:9::quotient.validate_quotient_in_range() (1,055 gates, 0.77%)</title><rect x="17.7514%" y="157" width="0.7721%" height="23" fill="rgb(255,236,236)" fg:x="24255" fg:w="1055"/><text x="18.0014%" y="171.50"></text></g><g><title>runtime_bignum.nr:259:9::self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32) (79 gates, 0.06%)</title><rect x="18.4657%" y="133" width="0.0578%" height="23" fill="rgb(255,246,246)" fg:x="25231" fg:w="79"/><text x="18.7157%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (79 gates, 0.06%)</title><rect x="18.4657%" y="109" width="0.0578%" height="23" fill="rgb(255,246,246)" fg:x="25231" fg:w="79"/><text x="18.7157%" y="123.50"></text></g><g><title>opcode::blackbox::range (79 gates, 0.06%)</title><rect x="18.4657%" y="85" width="0.0578%" height="23" fill="rgb(255,246,246)" fg:x="25231" fg:w="79"/><text x="18.7157%" y="99.50"></text></g><g><title>runtime_bignum.nr:481:25::std::as_witness(new_term) (4,032 gates, 2.95%)</title><rect x="18.5235%" y="157" width="2.9509%" height="23" fill="rgb(255,224,224)" fg:x="25310" fg:w="4032"/><text x="18.7735%" y="171.50">run..</text></g><g><title>opcode::arithmetic (4,032 gates, 2.95%)</title><rect x="18.5235%" y="133" width="2.9509%" height="23" fill="rgb(255,224,224)" fg:x="25310" fg:w="4032"/><text x="18.7735%" y="147.50">opc..</text></g><g><title>runtime_bignum.nr:508:9::borrow_flags.get(0).assert_max_bit_size(1) (63 gates, 0.05%)</title><rect x="21.4744%" y="157" width="0.0461%" height="23" fill="rgb(255,246,246)" fg:x="29342" fg:w="63"/><text x="21.7244%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (63 gates, 0.05%)</title><rect x="21.4744%" y="133" width="0.0461%" height="23" fill="rgb(255,246,246)" fg:x="29342" fg:w="63"/><text x="21.7244%" y="147.50"></text></g><g><title>opcode::blackbox::range (63 gates, 0.05%)</title><rect x="21.4744%" y="109" width="0.0461%" height="23" fill="rgb(255,246,246)" fg:x="29342" fg:w="63"/><text x="21.7244%" y="123.50"></text></g><g><title>runtime_bignum.nr:511:13::borrow_flags.get(i).assert_max_bit_size(1) (315 gates, 0.23%)</title><rect x="21.5205%" y="157" width="0.2305%" height="23" fill="rgb(255,242,242)" fg:x="29405" fg:w="315"/><text x="21.7705%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (315 gates, 0.23%)</title><rect x="21.5205%" y="133" width="0.2305%" height="23" fill="rgb(255,242,242)" fg:x="29405" fg:w="315"/><text x="21.7705%" y="147.50"></text></g><g><title>opcode::blackbox::range (315 gates, 0.23%)</title><rect x="21.5205%" y="109" width="0.2305%" height="23" fill="rgb(255,242,242)" fg:x="29405" fg:w="315"/><text x="21.7705%" y="123.50"></text></g><g><title>runtime_bignum.nr:534:13::std::as_witness(product_limbs.get(i)) (1,134 gates, 0.83%)</title><rect x="21.7511%" y="157" width="0.8299%" height="23" fill="rgb(255,236,236)" fg:x="29720" fg:w="1134"/><text x="22.0011%" y="171.50"></text></g><g><title>opcode::arithmetic (1,134 gates, 0.83%)</title><rect x="21.7511%" y="133" width="0.8299%" height="23" fill="rgb(255,236,236)" fg:x="29720" fg:w="1134"/><text x="22.0011%" y="147.50"></text></g><g><title>runtime_bignum.nr:535:13::product_limbs.get(i).assert_max_bit_size(126) (2,016 gates, 1.48%)</title><rect x="22.5810%" y="157" width="1.4754%" height="23" fill="rgb(255,231,231)" fg:x="30854" fg:w="2016"/><text x="22.8310%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (2,016 gates, 1.48%)</title><rect x="22.5810%" y="133" width="1.4754%" height="23" fill="rgb(255,231,231)" fg:x="30854" fg:w="2016"/><text x="22.8310%" y="147.50"></text></g><g><title>opcode::blackbox::range (2,016 gates, 1.48%)</title><rect x="22.5810%" y="109" width="1.4754%" height="23" fill="rgb(255,231,231)" fg:x="30854" fg:w="2016"/><text x="22.8310%" y="123.50"></text></g><g><title>main.nr:564:27::accumulator.double_with_hint(transcript[4 + 5 * i]) (25,010 gates, 18.30%)</title><rect x="5.7986%" y="229" width="18.3040%" height="23" fill="rgb(255,185,185)" fg:x="7923" fg:w="25010"/><text x="6.0486%" y="243.50">main.nr:564:27::accumulator.d..</text></g><g><title>main.nr:527:9::BigNum::evaluate_quadratic_expression(
            [[lambda]],
            [[false]],
            [[x3, x1]],
            [[false, true]],
            [y3, y1],
            [false, false]
        ) (8,678 gates, 6.35%)</title><rect x="17.7514%" y="205" width="6.3511%" height="23" fill="rgb(255,212,212)" fg:x="24255" fg:w="8678"/><text x="18.0014%" y="219.50">main.nr:..</text></g><g><title>lib.nr:241:9::Params::get_instance().evaluate_quadratic_expression(
            lhs_terms,
            lhs_flags,
            rhs_terms,
            rhs_flags,
            linear_terms,
            linear_flags
        ) (8,678 gates, 6.35%)</title><rect x="17.7514%" y="181" width="6.3511%" height="23" fill="rgb(255,212,212)" fg:x="24255" fg:w="8678"/><text x="18.0014%" y="195.50">lib.nr:2..</text></g><g><title>runtime_bignum.nr:539:16::product_limbs.get(N + N - 2) == 0 (63 gates, 0.05%)</title><rect x="24.0564%" y="157" width="0.0461%" height="23" fill="rgb(255,246,246)" fg:x="32870" fg:w="63"/><text x="24.3064%" y="171.50"></text></g><g><title>opcode::arithmetic (63 gates, 0.05%)</title><rect x="24.0564%" y="133" width="0.0461%" height="23" fill="rgb(255,246,246)" fg:x="32870" fg:w="63"/><text x="24.3064%" y="147.50"></text></g><g><title>runtime_bignum.nr:234:13::self.limbs[i].assert_max_bit_size(120) (1,008 gates, 0.74%)</title><rect x="24.1025%" y="157" width="0.7377%" height="23" fill="rgb(255,237,237)" fg:x="32933" fg:w="1008"/><text x="24.3525%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (1,008 gates, 0.74%)</title><rect x="24.1025%" y="133" width="0.7377%" height="23" fill="rgb(255,237,237)" fg:x="32933" fg:w="1008"/><text x="24.3525%" y="147.50"></text></g><g><title>opcode::blackbox::range (1,008 gates, 0.74%)</title><rect x="24.1025%" y="109" width="0.7377%" height="23" fill="rgb(255,237,237)" fg:x="32933" fg:w="1008"/><text x="24.3525%" y="123.50"></text></g><g><title>main.nr:500:9::x3.validate_in_range() (1,087 gates, 0.80%)</title><rect x="24.1025%" y="205" width="0.7955%" height="23" fill="rgb(255,236,236)" fg:x="32933" fg:w="1087"/><text x="24.3525%" y="219.50"></text></g><g><title>lib.nr:51:33::RuntimeBigNumTrait::validate_in_range(self) (1,087 gates, 0.80%)</title><rect x="24.1025%" y="181" width="0.7955%" height="23" fill="rgb(255,236,236)" fg:x="32933" fg:w="1087"/><text x="24.3525%" y="195.50"></text></g><g><title>runtime_bignum.nr:237:9::self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32) (79 gates, 0.06%)</title><rect x="24.8403%" y="157" width="0.0578%" height="23" fill="rgb(255,246,246)" fg:x="33941" fg:w="79"/><text x="25.0903%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (79 gates, 0.06%)</title><rect x="24.8403%" y="133" width="0.0578%" height="23" fill="rgb(255,246,246)" fg:x="33941" fg:w="79"/><text x="25.0903%" y="147.50"></text></g><g><title>opcode::blackbox::range (79 gates, 0.06%)</title><rect x="24.8403%" y="109" width="0.0578%" height="23" fill="rgb(255,246,246)" fg:x="33941" fg:w="79"/><text x="25.0903%" y="123.50"></text></g><g><title>runtime_bignum.nr:234:13::self.limbs[i].assert_max_bit_size(120) (977 gates, 0.72%)</title><rect x="24.8981%" y="157" width="0.7150%" height="23" fill="rgb(255,237,237)" fg:x="34020" fg:w="977"/><text x="25.1481%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (977 gates, 0.72%)</title><rect x="24.8981%" y="133" width="0.7150%" height="23" fill="rgb(255,237,237)" fg:x="34020" fg:w="977"/><text x="25.1481%" y="147.50"></text></g><g><title>opcode::blackbox::range (977 gates, 0.72%)</title><rect x="24.8981%" y="109" width="0.7150%" height="23" fill="rgb(255,237,237)" fg:x="34020" fg:w="977"/><text x="25.1481%" y="123.50"></text></g><g><title>main.nr:501:9::y3.validate_in_range() (1,056 gates, 0.77%)</title><rect x="24.8981%" y="205" width="0.7729%" height="23" fill="rgb(255,236,236)" fg:x="34020" fg:w="1056"/><text x="25.1481%" y="219.50"></text></g><g><title>lib.nr:51:33::RuntimeBigNumTrait::validate_in_range(self) (1,056 gates, 0.77%)</title><rect x="24.8981%" y="181" width="0.7729%" height="23" fill="rgb(255,236,236)" fg:x="34020" fg:w="1056"/><text x="25.1481%" y="195.50"></text></g><g><title>runtime_bignum.nr:237:9::self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32) (79 gates, 0.06%)</title><rect x="25.6131%" y="157" width="0.0578%" height="23" fill="rgb(255,246,246)" fg:x="34997" fg:w="79"/><text x="25.8631%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (79 gates, 0.06%)</title><rect x="25.6131%" y="133" width="0.0578%" height="23" fill="rgb(255,246,246)" fg:x="34997" fg:w="79"/><text x="25.8631%" y="147.50"></text></g><g><title>opcode::blackbox::range (79 gates, 0.06%)</title><rect x="25.6131%" y="109" width="0.0578%" height="23" fill="rgb(255,246,246)" fg:x="34997" fg:w="79"/><text x="25.8631%" y="123.50"></text></g><g><title>runtime_bignum.nr:234:13::self.limbs[i].assert_max_bit_size(120) (1,008 gates, 0.74%)</title><rect x="25.6709%" y="157" width="0.7377%" height="23" fill="rgb(255,237,237)" fg:x="35076" fg:w="1008"/><text x="25.9209%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (1,008 gates, 0.74%)</title><rect x="25.6709%" y="133" width="0.7377%" height="23" fill="rgb(255,237,237)" fg:x="35076" fg:w="1008"/><text x="25.9209%" y="147.50"></text></g><g><title>opcode::blackbox::range (1,008 gates, 0.74%)</title><rect x="25.6709%" y="109" width="0.7377%" height="23" fill="rgb(255,237,237)" fg:x="35076" fg:w="1008"/><text x="25.9209%" y="123.50"></text></g><g><title>main.nr:502:9::lambda.validate_in_range() (1,149 gates, 0.84%)</title><rect x="25.6709%" y="205" width="0.8409%" height="23" fill="rgb(255,236,236)" fg:x="35076" fg:w="1149"/><text x="25.9209%" y="219.50"></text></g><g><title>lib.nr:51:33::RuntimeBigNumTrait::validate_in_range(self) (1,149 gates, 0.84%)</title><rect x="25.6709%" y="181" width="0.8409%" height="23" fill="rgb(255,236,236)" fg:x="35076" fg:w="1149"/><text x="25.9209%" y="195.50"></text></g><g><title>runtime_bignum.nr:237:9::self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32) (141 gates, 0.10%)</title><rect x="26.4087%" y="157" width="0.1032%" height="23" fill="rgb(255,245,245)" fg:x="36084" fg:w="141"/><text x="26.6587%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (141 gates, 0.10%)</title><rect x="26.4087%" y="133" width="0.1032%" height="23" fill="rgb(255,245,245)" fg:x="36084" fg:w="141"/><text x="26.6587%" y="147.50"></text></g><g><title>opcode::blackbox::range (141 gates, 0.10%)</title><rect x="26.4087%" y="109" width="0.1032%" height="23" fill="rgb(255,245,245)" fg:x="36084" fg:w="141"/><text x="26.6587%" y="123.50"></text></g><g><title>runtime_bignum.nr:255:13::self.limbs[i].assert_max_bit_size(120) (976 gates, 0.71%)</title><rect x="26.5119%" y="133" width="0.7143%" height="23" fill="rgb(255,237,237)" fg:x="36225" fg:w="976"/><text x="26.7619%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (976 gates, 0.71%)</title><rect x="26.5119%" y="109" width="0.7143%" height="23" fill="rgb(255,237,237)" fg:x="36225" fg:w="976"/><text x="26.7619%" y="123.50"></text></g><g><title>opcode::blackbox::range (976 gates, 0.71%)</title><rect x="26.5119%" y="85" width="0.7143%" height="23" fill="rgb(255,237,237)" fg:x="36225" fg:w="976"/><text x="26.7619%" y="99.50"></text></g><g><title>runtime_bignum.nr:424:9::quotient.validate_quotient_in_range() (1,055 gates, 0.77%)</title><rect x="26.5119%" y="157" width="0.7721%" height="23" fill="rgb(255,236,236)" fg:x="36225" fg:w="1055"/><text x="26.7619%" y="171.50"></text></g><g><title>runtime_bignum.nr:259:9::self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32) (79 gates, 0.06%)</title><rect x="27.2262%" y="133" width="0.0578%" height="23" fill="rgb(255,246,246)" fg:x="37201" fg:w="79"/><text x="27.4762%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (79 gates, 0.06%)</title><rect x="27.2262%" y="109" width="0.0578%" height="23" fill="rgb(255,246,246)" fg:x="37201" fg:w="79"/><text x="27.4762%" y="123.50"></text></g><g><title>opcode::blackbox::range (79 gates, 0.06%)</title><rect x="27.2262%" y="85" width="0.0578%" height="23" fill="rgb(255,246,246)" fg:x="37201" fg:w="79"/><text x="27.4762%" y="99.50"></text></g><g><title>runtime_bignum.nr:481:25::std::as_witness(new_term) (1,008 gates, 0.74%)</title><rect x="27.2840%" y="157" width="0.7377%" height="23" fill="rgb(255,237,237)" fg:x="37280" fg:w="1008"/><text x="27.5340%" y="171.50"></text></g><g><title>opcode::arithmetic (1,008 gates, 0.74%)</title><rect x="27.2840%" y="133" width="0.7377%" height="23" fill="rgb(255,237,237)" fg:x="37280" fg:w="1008"/><text x="27.5340%" y="147.50"></text></g><g><title>runtime_bignum.nr:508:9::borrow_flags.get(0).assert_max_bit_size(1) (63 gates, 0.05%)</title><rect x="28.0217%" y="157" width="0.0461%" height="23" fill="rgb(255,246,246)" fg:x="38288" fg:w="63"/><text x="28.2717%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (63 gates, 0.05%)</title><rect x="28.0217%" y="133" width="0.0461%" height="23" fill="rgb(255,246,246)" fg:x="38288" fg:w="63"/><text x="28.2717%" y="147.50"></text></g><g><title>opcode::blackbox::range (63 gates, 0.05%)</title><rect x="28.0217%" y="109" width="0.0461%" height="23" fill="rgb(255,246,246)" fg:x="38288" fg:w="63"/><text x="28.2717%" y="123.50"></text></g><g><title>runtime_bignum.nr:511:13::borrow_flags.get(i).assert_max_bit_size(1) (315 gates, 0.23%)</title><rect x="28.0678%" y="157" width="0.2305%" height="23" fill="rgb(255,242,242)" fg:x="38351" fg:w="315"/><text x="28.3178%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (315 gates, 0.23%)</title><rect x="28.0678%" y="133" width="0.2305%" height="23" fill="rgb(255,242,242)" fg:x="38351" fg:w="315"/><text x="28.3178%" y="147.50"></text></g><g><title>opcode::blackbox::range (315 gates, 0.23%)</title><rect x="28.0678%" y="109" width="0.2305%" height="23" fill="rgb(255,242,242)" fg:x="38351" fg:w="315"/><text x="28.3178%" y="123.50"></text></g><g><title>runtime_bignum.nr:534:13::std::as_witness(product_limbs.get(i)) (2,772 gates, 2.03%)</title><rect x="28.2983%" y="157" width="2.0287%" height="23" fill="rgb(255,228,228)" fg:x="38666" fg:w="2772"/><text x="28.5483%" y="171.50">r..</text></g><g><title>opcode::arithmetic (2,772 gates, 2.03%)</title><rect x="28.2983%" y="133" width="2.0287%" height="23" fill="rgb(255,228,228)" fg:x="38666" fg:w="2772"/><text x="28.5483%" y="147.50">o..</text></g><g><title>runtime_bignum.nr:535:13::product_limbs.get(i).assert_max_bit_size(126) (1,953 gates, 1.43%)</title><rect x="30.3271%" y="157" width="1.4293%" height="23" fill="rgb(255,232,232)" fg:x="41438" fg:w="1953"/><text x="30.5771%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (1,953 gates, 1.43%)</title><rect x="30.3271%" y="133" width="1.4293%" height="23" fill="rgb(255,232,232)" fg:x="41438" fg:w="1953"/><text x="30.5771%" y="147.50"></text></g><g><title>opcode::blackbox::range (1,953 gates, 1.43%)</title><rect x="30.3271%" y="109" width="1.4293%" height="23" fill="rgb(255,232,232)" fg:x="41438" fg:w="1953"/><text x="30.5771%" y="123.50"></text></g><g><title>main.nr:507:9::BigNum::evaluate_quadratic_expression(
            [[x1, x1, x1], [y1, y1, BigNum::new()]],
            [[false, false, false], [false, false, false]],
            [[x1], [lambda]],
            [[false], [true]],
            [CurveParams::a()],
            [false]
        ) (7,355 gates, 5.38%)</title><rect x="26.5119%" y="205" width="5.3829%" height="23" fill="rgb(255,215,215)" fg:x="36225" fg:w="7355"/><text x="26.7619%" y="219.50">main.nr..</text></g><g><title>lib.nr:241:9::Params::get_instance().evaluate_quadratic_expression(
            lhs_terms,
            lhs_flags,
            rhs_terms,
            rhs_flags,
            linear_terms,
            linear_flags
        ) (7,355 gates, 5.38%)</title><rect x="26.5119%" y="181" width="5.3829%" height="23" fill="rgb(255,215,215)" fg:x="36225" fg:w="7355"/><text x="26.7619%" y="195.50">lib.nr:..</text></g><g><title>runtime_bignum.nr:539:16::product_limbs.get(N + N - 2) == 0 (189 gates, 0.14%)</title><rect x="31.7564%" y="157" width="0.1383%" height="23" fill="rgb(255,244,244)" fg:x="43391" fg:w="189"/><text x="32.0064%" y="171.50"></text></g><g><title>opcode::arithmetic (189 gates, 0.14%)</title><rect x="31.7564%" y="133" width="0.1383%" height="23" fill="rgb(255,244,244)" fg:x="43391" fg:w="189"/><text x="32.0064%" y="147.50"></text></g><g><title>runtime_bignum.nr:255:13::self.limbs[i].assert_max_bit_size(120) (1,008 gates, 0.74%)</title><rect x="31.8947%" y="133" width="0.7377%" height="23" fill="rgb(255,237,237)" fg:x="43580" fg:w="1008"/><text x="32.1447%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (1,008 gates, 0.74%)</title><rect x="31.8947%" y="109" width="0.7377%" height="23" fill="rgb(255,237,237)" fg:x="43580" fg:w="1008"/><text x="32.1447%" y="123.50"></text></g><g><title>opcode::blackbox::range (1,008 gates, 0.74%)</title><rect x="31.8947%" y="85" width="0.7377%" height="23" fill="rgb(255,237,237)" fg:x="43580" fg:w="1008"/><text x="32.1447%" y="99.50"></text></g><g><title>runtime_bignum.nr:424:9::quotient.validate_quotient_in_range() (1,149 gates, 0.84%)</title><rect x="31.8947%" y="157" width="0.8409%" height="23" fill="rgb(255,236,236)" fg:x="43580" fg:w="1149"/><text x="32.1447%" y="171.50"></text></g><g><title>runtime_bignum.nr:259:9::self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32) (141 gates, 0.10%)</title><rect x="32.6324%" y="133" width="0.1032%" height="23" fill="rgb(255,245,245)" fg:x="44588" fg:w="141"/><text x="32.8824%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (141 gates, 0.10%)</title><rect x="32.6324%" y="109" width="0.1032%" height="23" fill="rgb(255,245,245)" fg:x="44588" fg:w="141"/><text x="32.8824%" y="123.50"></text></g><g><title>opcode::blackbox::range (141 gates, 0.10%)</title><rect x="32.6324%" y="85" width="0.1032%" height="23" fill="rgb(255,245,245)" fg:x="44588" fg:w="141"/><text x="32.8824%" y="99.50"></text></g><g><title>runtime_bignum.nr:481:25::std::as_witness(new_term) (1,008 gates, 0.74%)</title><rect x="32.7356%" y="157" width="0.7377%" height="23" fill="rgb(255,237,237)" fg:x="44729" fg:w="1008"/><text x="32.9856%" y="171.50"></text></g><g><title>opcode::arithmetic (1,008 gates, 0.74%)</title><rect x="32.7356%" y="133" width="0.7377%" height="23" fill="rgb(255,237,237)" fg:x="44729" fg:w="1008"/><text x="32.9856%" y="147.50"></text></g><g><title>runtime_bignum.nr:508:9::borrow_flags.get(0).assert_max_bit_size(1) (63 gates, 0.05%)</title><rect x="33.4734%" y="157" width="0.0461%" height="23" fill="rgb(255,246,246)" fg:x="45737" fg:w="63"/><text x="33.7234%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (63 gates, 0.05%)</title><rect x="33.4734%" y="133" width="0.0461%" height="23" fill="rgb(255,246,246)" fg:x="45737" fg:w="63"/><text x="33.7234%" y="147.50"></text></g><g><title>opcode::blackbox::range (63 gates, 0.05%)</title><rect x="33.4734%" y="109" width="0.0461%" height="23" fill="rgb(255,246,246)" fg:x="45737" fg:w="63"/><text x="33.7234%" y="123.50"></text></g><g><title>runtime_bignum.nr:511:13::borrow_flags.get(i).assert_max_bit_size(1) (315 gates, 0.23%)</title><rect x="33.5195%" y="157" width="0.2305%" height="23" fill="rgb(255,242,242)" fg:x="45800" fg:w="315"/><text x="33.7695%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (315 gates, 0.23%)</title><rect x="33.5195%" y="133" width="0.2305%" height="23" fill="rgb(255,242,242)" fg:x="45800" fg:w="315"/><text x="33.7695%" y="147.50"></text></g><g><title>opcode::blackbox::range (315 gates, 0.23%)</title><rect x="33.5195%" y="109" width="0.2305%" height="23" fill="rgb(255,242,242)" fg:x="45800" fg:w="315"/><text x="33.7695%" y="123.50"></text></g><g><title>runtime_bignum.nr:534:13::std::as_witness(product_limbs.get(i)) (1,134 gates, 0.83%)</title><rect x="33.7500%" y="157" width="0.8299%" height="23" fill="rgb(255,236,236)" fg:x="46115" fg:w="1134"/><text x="34.0000%" y="171.50"></text></g><g><title>opcode::arithmetic (1,134 gates, 0.83%)</title><rect x="33.7500%" y="133" width="0.8299%" height="23" fill="rgb(255,236,236)" fg:x="46115" fg:w="1134"/><text x="34.0000%" y="147.50"></text></g><g><title>runtime_bignum.nr:535:13::product_limbs.get(i).assert_max_bit_size(126) (1,953 gates, 1.43%)</title><rect x="34.5799%" y="157" width="1.4293%" height="23" fill="rgb(255,232,232)" fg:x="47249" fg:w="1953"/><text x="34.8299%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (1,953 gates, 1.43%)</title><rect x="34.5799%" y="133" width="1.4293%" height="23" fill="rgb(255,232,232)" fg:x="47249" fg:w="1953"/><text x="34.8299%" y="147.50"></text></g><g><title>opcode::blackbox::range (1,953 gates, 1.43%)</title><rect x="34.5799%" y="109" width="1.4293%" height="23" fill="rgb(255,232,232)" fg:x="47249" fg:w="1953"/><text x="34.8299%" y="123.50"></text></g><g><title>main.nr:517:9::BigNum::evaluate_quadratic_expression(
            [[lambda]],
            [[false]],
            [[lambda]],
            [[false]],
            [x3, x1, x1],
            [true, true, true]
        ) (5,685 gates, 4.16%)</title><rect x="31.8947%" y="205" width="4.1607%" height="23" fill="rgb(255,219,219)" fg:x="43580" fg:w="5685"/><text x="32.1447%" y="219.50">main...</text></g><g><title>lib.nr:241:9::Params::get_instance().evaluate_quadratic_expression(
            lhs_terms,
            lhs_flags,
            rhs_terms,
            rhs_flags,
            linear_terms,
            linear_flags
        ) (5,685 gates, 4.16%)</title><rect x="31.8947%" y="181" width="4.1607%" height="23" fill="rgb(255,219,219)" fg:x="43580" fg:w="5685"/><text x="32.1447%" y="195.50">lib.n..</text></g><g><title>runtime_bignum.nr:539:16::product_limbs.get(N + N - 2) == 0 (63 gates, 0.05%)</title><rect x="36.0093%" y="157" width="0.0461%" height="23" fill="rgb(255,246,246)" fg:x="49202" fg:w="63"/><text x="36.2593%" y="171.50"></text></g><g><title>opcode::arithmetic (63 gates, 0.05%)</title><rect x="36.0093%" y="133" width="0.0461%" height="23" fill="rgb(255,246,246)" fg:x="49202" fg:w="63"/><text x="36.2593%" y="147.50"></text></g><g><title>runtime_bignum.nr:255:13::self.limbs[i].assert_max_bit_size(120) (977 gates, 0.72%)</title><rect x="36.0554%" y="133" width="0.7150%" height="23" fill="rgb(255,237,237)" fg:x="49265" fg:w="977"/><text x="36.3054%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (977 gates, 0.72%)</title><rect x="36.0554%" y="109" width="0.7150%" height="23" fill="rgb(255,237,237)" fg:x="49265" fg:w="977"/><text x="36.3054%" y="123.50"></text></g><g><title>opcode::blackbox::range (977 gates, 0.72%)</title><rect x="36.0554%" y="85" width="0.7150%" height="23" fill="rgb(255,237,237)" fg:x="49265" fg:w="977"/><text x="36.3054%" y="99.50"></text></g><g><title>runtime_bignum.nr:424:9::quotient.validate_quotient_in_range() (1,056 gates, 0.77%)</title><rect x="36.0554%" y="157" width="0.7729%" height="23" fill="rgb(255,236,236)" fg:x="49265" fg:w="1056"/><text x="36.3054%" y="171.50"></text></g><g><title>runtime_bignum.nr:259:9::self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32) (79 gates, 0.06%)</title><rect x="36.7704%" y="133" width="0.0578%" height="23" fill="rgb(255,246,246)" fg:x="50242" fg:w="79"/><text x="37.0204%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (79 gates, 0.06%)</title><rect x="36.7704%" y="109" width="0.0578%" height="23" fill="rgb(255,246,246)" fg:x="50242" fg:w="79"/><text x="37.0204%" y="123.50"></text></g><g><title>opcode::blackbox::range (79 gates, 0.06%)</title><rect x="36.7704%" y="85" width="0.0578%" height="23" fill="rgb(255,246,246)" fg:x="50242" fg:w="79"/><text x="37.0204%" y="99.50"></text></g><g><title>runtime_bignum.nr:481:25::std::as_witness(new_term) (4,032 gates, 2.95%)</title><rect x="36.8282%" y="157" width="2.9509%" height="23" fill="rgb(255,224,224)" fg:x="50321" fg:w="4032"/><text x="37.0782%" y="171.50">run..</text></g><g><title>opcode::arithmetic (4,032 gates, 2.95%)</title><rect x="36.8282%" y="133" width="2.9509%" height="23" fill="rgb(255,224,224)" fg:x="50321" fg:w="4032"/><text x="37.0782%" y="147.50">opc..</text></g><g><title>runtime_bignum.nr:508:9::borrow_flags.get(0).assert_max_bit_size(1) (63 gates, 0.05%)</title><rect x="39.7791%" y="157" width="0.0461%" height="23" fill="rgb(255,246,246)" fg:x="54353" fg:w="63"/><text x="40.0291%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (63 gates, 0.05%)</title><rect x="39.7791%" y="133" width="0.0461%" height="23" fill="rgb(255,246,246)" fg:x="54353" fg:w="63"/><text x="40.0291%" y="147.50"></text></g><g><title>opcode::blackbox::range (63 gates, 0.05%)</title><rect x="39.7791%" y="109" width="0.0461%" height="23" fill="rgb(255,246,246)" fg:x="54353" fg:w="63"/><text x="40.0291%" y="123.50"></text></g><g><title>runtime_bignum.nr:511:13::borrow_flags.get(i).assert_max_bit_size(1) (315 gates, 0.23%)</title><rect x="39.8252%" y="157" width="0.2305%" height="23" fill="rgb(255,242,242)" fg:x="54416" fg:w="315"/><text x="40.0752%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (315 gates, 0.23%)</title><rect x="39.8252%" y="133" width="0.2305%" height="23" fill="rgb(255,242,242)" fg:x="54416" fg:w="315"/><text x="40.0752%" y="147.50"></text></g><g><title>opcode::blackbox::range (315 gates, 0.23%)</title><rect x="39.8252%" y="109" width="0.2305%" height="23" fill="rgb(255,242,242)" fg:x="54416" fg:w="315"/><text x="40.0752%" y="123.50"></text></g><g><title>runtime_bignum.nr:534:13::std::as_witness(product_limbs.get(i)) (1,134 gates, 0.83%)</title><rect x="40.0558%" y="157" width="0.8299%" height="23" fill="rgb(255,236,236)" fg:x="54731" fg:w="1134"/><text x="40.3058%" y="171.50"></text></g><g><title>opcode::arithmetic (1,134 gates, 0.83%)</title><rect x="40.0558%" y="133" width="0.8299%" height="23" fill="rgb(255,236,236)" fg:x="54731" fg:w="1134"/><text x="40.3058%" y="147.50"></text></g><g><title>runtime_bignum.nr:535:13::product_limbs.get(i).assert_max_bit_size(126) (2,016 gates, 1.48%)</title><rect x="40.8857%" y="157" width="1.4754%" height="23" fill="rgb(255,231,231)" fg:x="55865" fg:w="2016"/><text x="41.1357%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (2,016 gates, 1.48%)</title><rect x="40.8857%" y="133" width="1.4754%" height="23" fill="rgb(255,231,231)" fg:x="55865" fg:w="2016"/><text x="41.1357%" y="147.50"></text></g><g><title>opcode::blackbox::range (2,016 gates, 1.48%)</title><rect x="40.8857%" y="109" width="1.4754%" height="23" fill="rgb(255,231,231)" fg:x="55865" fg:w="2016"/><text x="41.1357%" y="123.50"></text></g><g><title>main.nr:565:27::accumulator.double_with_hint(transcript[5 + 5 * i]) (25,011 gates, 18.30%)</title><rect x="24.1025%" y="229" width="18.3047%" height="23" fill="rgb(255,185,185)" fg:x="32933" fg:w="25011"/><text x="24.3525%" y="243.50">main.nr:565:27::accumulator.d..</text></g><g><title>main.nr:527:9::BigNum::evaluate_quadratic_expression(
            [[lambda]],
            [[false]],
            [[x3, x1]],
            [[false, true]],
            [y3, y1],
            [false, false]
        ) (8,679 gates, 6.35%)</title><rect x="36.0554%" y="205" width="6.3519%" height="23" fill="rgb(255,212,212)" fg:x="49265" fg:w="8679"/><text x="36.3054%" y="219.50">main.nr:..</text></g><g><title>lib.nr:241:9::Params::get_instance().evaluate_quadratic_expression(
            lhs_terms,
            lhs_flags,
            rhs_terms,
            rhs_flags,
            linear_terms,
            linear_flags
        ) (8,679 gates, 6.35%)</title><rect x="36.0554%" y="181" width="6.3519%" height="23" fill="rgb(255,212,212)" fg:x="49265" fg:w="8679"/><text x="36.3054%" y="195.50">lib.nr:2..</text></g><g><title>runtime_bignum.nr:539:16::product_limbs.get(N + N - 2) == 0 (63 gates, 0.05%)</title><rect x="42.3611%" y="157" width="0.0461%" height="23" fill="rgb(255,246,246)" fg:x="57881" fg:w="63"/><text x="42.6111%" y="171.50"></text></g><g><title>opcode::arithmetic (63 gates, 0.05%)</title><rect x="42.3611%" y="133" width="0.0461%" height="23" fill="rgb(255,246,246)" fg:x="57881" fg:w="63"/><text x="42.6111%" y="147.50"></text></g><g><title>runtime_bignum.nr:234:13::self.limbs[i].assert_max_bit_size(120) (1,008 gates, 0.74%)</title><rect x="42.4073%" y="157" width="0.7377%" height="23" fill="rgb(255,237,237)" fg:x="57944" fg:w="1008"/><text x="42.6573%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (1,008 gates, 0.74%)</title><rect x="42.4073%" y="133" width="0.7377%" height="23" fill="rgb(255,237,237)" fg:x="57944" fg:w="1008"/><text x="42.6573%" y="147.50"></text></g><g><title>opcode::blackbox::range (1,008 gates, 0.74%)</title><rect x="42.4073%" y="109" width="0.7377%" height="23" fill="rgb(255,237,237)" fg:x="57944" fg:w="1008"/><text x="42.6573%" y="123.50"></text></g><g><title>main.nr:500:9::x3.validate_in_range() (1,087 gates, 0.80%)</title><rect x="42.4073%" y="205" width="0.7955%" height="23" fill="rgb(255,236,236)" fg:x="57944" fg:w="1087"/><text x="42.6573%" y="219.50"></text></g><g><title>lib.nr:51:33::RuntimeBigNumTrait::validate_in_range(self) (1,087 gates, 0.80%)</title><rect x="42.4073%" y="181" width="0.7955%" height="23" fill="rgb(255,236,236)" fg:x="57944" fg:w="1087"/><text x="42.6573%" y="195.50"></text></g><g><title>runtime_bignum.nr:237:9::self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32) (79 gates, 0.06%)</title><rect x="43.1450%" y="157" width="0.0578%" height="23" fill="rgb(255,246,246)" fg:x="58952" fg:w="79"/><text x="43.3950%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (79 gates, 0.06%)</title><rect x="43.1450%" y="133" width="0.0578%" height="23" fill="rgb(255,246,246)" fg:x="58952" fg:w="79"/><text x="43.3950%" y="147.50"></text></g><g><title>opcode::blackbox::range (79 gates, 0.06%)</title><rect x="43.1450%" y="109" width="0.0578%" height="23" fill="rgb(255,246,246)" fg:x="58952" fg:w="79"/><text x="43.3950%" y="123.50"></text></g><g><title>runtime_bignum.nr:234:13::self.limbs[i].assert_max_bit_size(120) (976 gates, 0.71%)</title><rect x="43.2028%" y="157" width="0.7143%" height="23" fill="rgb(255,237,237)" fg:x="59031" fg:w="976"/><text x="43.4528%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (976 gates, 0.71%)</title><rect x="43.2028%" y="133" width="0.7143%" height="23" fill="rgb(255,237,237)" fg:x="59031" fg:w="976"/><text x="43.4528%" y="147.50"></text></g><g><title>opcode::blackbox::range (976 gates, 0.71%)</title><rect x="43.2028%" y="109" width="0.7143%" height="23" fill="rgb(255,237,237)" fg:x="59031" fg:w="976"/><text x="43.4528%" y="123.50"></text></g><g><title>main.nr:501:9::y3.validate_in_range() (1,055 gates, 0.77%)</title><rect x="43.2028%" y="205" width="0.7721%" height="23" fill="rgb(255,236,236)" fg:x="59031" fg:w="1055"/><text x="43.4528%" y="219.50"></text></g><g><title>lib.nr:51:33::RuntimeBigNumTrait::validate_in_range(self) (1,055 gates, 0.77%)</title><rect x="43.2028%" y="181" width="0.7721%" height="23" fill="rgb(255,236,236)" fg:x="59031" fg:w="1055"/><text x="43.4528%" y="195.50"></text></g><g><title>runtime_bignum.nr:237:9::self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32) (79 gates, 0.06%)</title><rect x="43.9171%" y="157" width="0.0578%" height="23" fill="rgb(255,246,246)" fg:x="60007" fg:w="79"/><text x="44.1671%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (79 gates, 0.06%)</title><rect x="43.9171%" y="133" width="0.0578%" height="23" fill="rgb(255,246,246)" fg:x="60007" fg:w="79"/><text x="44.1671%" y="147.50"></text></g><g><title>opcode::blackbox::range (79 gates, 0.06%)</title><rect x="43.9171%" y="109" width="0.0578%" height="23" fill="rgb(255,246,246)" fg:x="60007" fg:w="79"/><text x="44.1671%" y="123.50"></text></g><g><title>runtime_bignum.nr:234:13::self.limbs[i].assert_max_bit_size(120) (1,008 gates, 0.74%)</title><rect x="43.9749%" y="157" width="0.7377%" height="23" fill="rgb(255,237,237)" fg:x="60086" fg:w="1008"/><text x="44.2249%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (1,008 gates, 0.74%)</title><rect x="43.9749%" y="133" width="0.7377%" height="23" fill="rgb(255,237,237)" fg:x="60086" fg:w="1008"/><text x="44.2249%" y="147.50"></text></g><g><title>opcode::blackbox::range (1,008 gates, 0.74%)</title><rect x="43.9749%" y="109" width="0.7377%" height="23" fill="rgb(255,237,237)" fg:x="60086" fg:w="1008"/><text x="44.2249%" y="123.50"></text></g><g><title>main.nr:502:9::lambda.validate_in_range() (1,150 gates, 0.84%)</title><rect x="43.9749%" y="205" width="0.8416%" height="23" fill="rgb(255,236,236)" fg:x="60086" fg:w="1150"/><text x="44.2249%" y="219.50"></text></g><g><title>lib.nr:51:33::RuntimeBigNumTrait::validate_in_range(self) (1,150 gates, 0.84%)</title><rect x="43.9749%" y="181" width="0.8416%" height="23" fill="rgb(255,236,236)" fg:x="60086" fg:w="1150"/><text x="44.2249%" y="195.50"></text></g><g><title>runtime_bignum.nr:237:9::self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32) (142 gates, 0.10%)</title><rect x="44.7126%" y="157" width="0.1039%" height="23" fill="rgb(255,245,245)" fg:x="61094" fg:w="142"/><text x="44.9626%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (142 gates, 0.10%)</title><rect x="44.7126%" y="133" width="0.1039%" height="23" fill="rgb(255,245,245)" fg:x="61094" fg:w="142"/><text x="44.9626%" y="147.50"></text></g><g><title>opcode::blackbox::range (142 gates, 0.10%)</title><rect x="44.7126%" y="109" width="0.1039%" height="23" fill="rgb(255,245,245)" fg:x="61094" fg:w="142"/><text x="44.9626%" y="123.50"></text></g><g><title>runtime_bignum.nr:255:13::self.limbs[i].assert_max_bit_size(120) (977 gates, 0.72%)</title><rect x="44.8166%" y="133" width="0.7150%" height="23" fill="rgb(255,237,237)" fg:x="61236" fg:w="977"/><text x="45.0666%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (977 gates, 0.72%)</title><rect x="44.8166%" y="109" width="0.7150%" height="23" fill="rgb(255,237,237)" fg:x="61236" fg:w="977"/><text x="45.0666%" y="123.50"></text></g><g><title>opcode::blackbox::range (977 gates, 0.72%)</title><rect x="44.8166%" y="85" width="0.7150%" height="23" fill="rgb(255,237,237)" fg:x="61236" fg:w="977"/><text x="45.0666%" y="99.50"></text></g><g><title>runtime_bignum.nr:424:9::quotient.validate_quotient_in_range() (1,056 gates, 0.77%)</title><rect x="44.8166%" y="157" width="0.7729%" height="23" fill="rgb(255,236,236)" fg:x="61236" fg:w="1056"/><text x="45.0666%" y="171.50"></text></g><g><title>runtime_bignum.nr:259:9::self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32) (79 gates, 0.06%)</title><rect x="45.5316%" y="133" width="0.0578%" height="23" fill="rgb(255,246,246)" fg:x="62213" fg:w="79"/><text x="45.7816%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (79 gates, 0.06%)</title><rect x="45.5316%" y="109" width="0.0578%" height="23" fill="rgb(255,246,246)" fg:x="62213" fg:w="79"/><text x="45.7816%" y="123.50"></text></g><g><title>opcode::blackbox::range (79 gates, 0.06%)</title><rect x="45.5316%" y="85" width="0.0578%" height="23" fill="rgb(255,246,246)" fg:x="62213" fg:w="79"/><text x="45.7816%" y="99.50"></text></g><g><title>runtime_bignum.nr:481:25::std::as_witness(new_term) (1,008 gates, 0.74%)</title><rect x="45.5894%" y="157" width="0.7377%" height="23" fill="rgb(255,237,237)" fg:x="62292" fg:w="1008"/><text x="45.8394%" y="171.50"></text></g><g><title>opcode::arithmetic (1,008 gates, 0.74%)</title><rect x="45.5894%" y="133" width="0.7377%" height="23" fill="rgb(255,237,237)" fg:x="62292" fg:w="1008"/><text x="45.8394%" y="147.50"></text></g><g><title>runtime_bignum.nr:508:9::borrow_flags.get(0).assert_max_bit_size(1) (63 gates, 0.05%)</title><rect x="46.3271%" y="157" width="0.0461%" height="23" fill="rgb(255,246,246)" fg:x="63300" fg:w="63"/><text x="46.5771%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (63 gates, 0.05%)</title><rect x="46.3271%" y="133" width="0.0461%" height="23" fill="rgb(255,246,246)" fg:x="63300" fg:w="63"/><text x="46.5771%" y="147.50"></text></g><g><title>opcode::blackbox::range (63 gates, 0.05%)</title><rect x="46.3271%" y="109" width="0.0461%" height="23" fill="rgb(255,246,246)" fg:x="63300" fg:w="63"/><text x="46.5771%" y="123.50"></text></g><g><title>runtime_bignum.nr:511:13::borrow_flags.get(i).assert_max_bit_size(1) (315 gates, 0.23%)</title><rect x="46.3732%" y="157" width="0.2305%" height="23" fill="rgb(255,242,242)" fg:x="63363" fg:w="315"/><text x="46.6232%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (315 gates, 0.23%)</title><rect x="46.3732%" y="133" width="0.2305%" height="23" fill="rgb(255,242,242)" fg:x="63363" fg:w="315"/><text x="46.6232%" y="147.50"></text></g><g><title>opcode::blackbox::range (315 gates, 0.23%)</title><rect x="46.3732%" y="109" width="0.2305%" height="23" fill="rgb(255,242,242)" fg:x="63363" fg:w="315"/><text x="46.6232%" y="123.50"></text></g><g><title>runtime_bignum.nr:534:13::std::as_witness(product_limbs.get(i)) (2,772 gates, 2.03%)</title><rect x="46.6038%" y="157" width="2.0287%" height="23" fill="rgb(255,228,228)" fg:x="63678" fg:w="2772"/><text x="46.8538%" y="171.50">r..</text></g><g><title>opcode::arithmetic (2,772 gates, 2.03%)</title><rect x="46.6038%" y="133" width="2.0287%" height="23" fill="rgb(255,228,228)" fg:x="63678" fg:w="2772"/><text x="46.8538%" y="147.50">o..</text></g><g><title>runtime_bignum.nr:535:13::product_limbs.get(i).assert_max_bit_size(126) (1,953 gates, 1.43%)</title><rect x="48.6325%" y="157" width="1.4293%" height="23" fill="rgb(255,232,232)" fg:x="66450" fg:w="1953"/><text x="48.8825%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (1,953 gates, 1.43%)</title><rect x="48.6325%" y="133" width="1.4293%" height="23" fill="rgb(255,232,232)" fg:x="66450" fg:w="1953"/><text x="48.8825%" y="147.50"></text></g><g><title>opcode::blackbox::range (1,953 gates, 1.43%)</title><rect x="48.6325%" y="109" width="1.4293%" height="23" fill="rgb(255,232,232)" fg:x="66450" fg:w="1953"/><text x="48.8825%" y="123.50"></text></g><g><title>main.nr:507:9::BigNum::evaluate_quadratic_expression(
            [[x1, x1, x1], [y1, y1, BigNum::new()]],
            [[false, false, false], [false, false, false]],
            [[x1], [lambda]],
            [[false], [true]],
            [CurveParams::a()],
            [false]
        ) (7,356 gates, 5.38%)</title><rect x="44.8166%" y="205" width="5.3836%" height="23" fill="rgb(255,215,215)" fg:x="61236" fg:w="7356"/><text x="45.0666%" y="219.50">main.nr..</text></g><g><title>lib.nr:241:9::Params::get_instance().evaluate_quadratic_expression(
            lhs_terms,
            lhs_flags,
            rhs_terms,
            rhs_flags,
            linear_terms,
            linear_flags
        ) (7,356 gates, 5.38%)</title><rect x="44.8166%" y="181" width="5.3836%" height="23" fill="rgb(255,215,215)" fg:x="61236" fg:w="7356"/><text x="45.0666%" y="195.50">lib.nr:..</text></g><g><title>runtime_bignum.nr:539:16::product_limbs.get(N + N - 2) == 0 (189 gates, 0.14%)</title><rect x="50.0618%" y="157" width="0.1383%" height="23" fill="rgb(255,244,244)" fg:x="68403" fg:w="189"/><text x="50.3118%" y="171.50"></text></g><g><title>opcode::arithmetic (189 gates, 0.14%)</title><rect x="50.0618%" y="133" width="0.1383%" height="23" fill="rgb(255,244,244)" fg:x="68403" fg:w="189"/><text x="50.3118%" y="147.50"></text></g><g><title>runtime_bignum.nr:255:13::self.limbs[i].assert_max_bit_size(120) (1,008 gates, 0.74%)</title><rect x="50.2002%" y="133" width="0.7377%" height="23" fill="rgb(255,237,237)" fg:x="68592" fg:w="1008"/><text x="50.4502%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (1,008 gates, 0.74%)</title><rect x="50.2002%" y="109" width="0.7377%" height="23" fill="rgb(255,237,237)" fg:x="68592" fg:w="1008"/><text x="50.4502%" y="123.50"></text></g><g><title>opcode::blackbox::range (1,008 gates, 0.74%)</title><rect x="50.2002%" y="85" width="0.7377%" height="23" fill="rgb(255,237,237)" fg:x="68592" fg:w="1008"/><text x="50.4502%" y="99.50"></text></g><g><title>runtime_bignum.nr:424:9::quotient.validate_quotient_in_range() (1,150 gates, 0.84%)</title><rect x="50.2002%" y="157" width="0.8416%" height="23" fill="rgb(255,236,236)" fg:x="68592" fg:w="1150"/><text x="50.4502%" y="171.50"></text></g><g><title>runtime_bignum.nr:259:9::self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32) (142 gates, 0.10%)</title><rect x="50.9379%" y="133" width="0.1039%" height="23" fill="rgb(255,245,245)" fg:x="69600" fg:w="142"/><text x="51.1879%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (142 gates, 0.10%)</title><rect x="50.9379%" y="109" width="0.1039%" height="23" fill="rgb(255,245,245)" fg:x="69600" fg:w="142"/><text x="51.1879%" y="123.50"></text></g><g><title>opcode::blackbox::range (142 gates, 0.10%)</title><rect x="50.9379%" y="85" width="0.1039%" height="23" fill="rgb(255,245,245)" fg:x="69600" fg:w="142"/><text x="51.1879%" y="99.50"></text></g><g><title>runtime_bignum.nr:481:25::std::as_witness(new_term) (1,008 gates, 0.74%)</title><rect x="51.0418%" y="157" width="0.7377%" height="23" fill="rgb(255,237,237)" fg:x="69742" fg:w="1008"/><text x="51.2918%" y="171.50"></text></g><g><title>opcode::arithmetic (1,008 gates, 0.74%)</title><rect x="51.0418%" y="133" width="0.7377%" height="23" fill="rgb(255,237,237)" fg:x="69742" fg:w="1008"/><text x="51.2918%" y="147.50"></text></g><g><title>runtime_bignum.nr:508:9::borrow_flags.get(0).assert_max_bit_size(1) (63 gates, 0.05%)</title><rect x="51.7795%" y="157" width="0.0461%" height="23" fill="rgb(255,246,246)" fg:x="70750" fg:w="63"/><text x="52.0295%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (63 gates, 0.05%)</title><rect x="51.7795%" y="133" width="0.0461%" height="23" fill="rgb(255,246,246)" fg:x="70750" fg:w="63"/><text x="52.0295%" y="147.50"></text></g><g><title>opcode::blackbox::range (63 gates, 0.05%)</title><rect x="51.7795%" y="109" width="0.0461%" height="23" fill="rgb(255,246,246)" fg:x="70750" fg:w="63"/><text x="52.0295%" y="123.50"></text></g><g><title>runtime_bignum.nr:511:13::borrow_flags.get(i).assert_max_bit_size(1) (315 gates, 0.23%)</title><rect x="51.8256%" y="157" width="0.2305%" height="23" fill="rgb(255,242,242)" fg:x="70813" fg:w="315"/><text x="52.0756%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (315 gates, 0.23%)</title><rect x="51.8256%" y="133" width="0.2305%" height="23" fill="rgb(255,242,242)" fg:x="70813" fg:w="315"/><text x="52.0756%" y="147.50"></text></g><g><title>opcode::blackbox::range (315 gates, 0.23%)</title><rect x="51.8256%" y="109" width="0.2305%" height="23" fill="rgb(255,242,242)" fg:x="70813" fg:w="315"/><text x="52.0756%" y="123.50"></text></g><g><title>runtime_bignum.nr:534:13::std::as_witness(product_limbs.get(i)) (1,134 gates, 0.83%)</title><rect x="52.0562%" y="157" width="0.8299%" height="23" fill="rgb(255,236,236)" fg:x="71128" fg:w="1134"/><text x="52.3062%" y="171.50"></text></g><g><title>opcode::arithmetic (1,134 gates, 0.83%)</title><rect x="52.0562%" y="133" width="0.8299%" height="23" fill="rgb(255,236,236)" fg:x="71128" fg:w="1134"/><text x="52.3062%" y="147.50"></text></g><g><title>runtime_bignum.nr:535:13::product_limbs.get(i).assert_max_bit_size(126) (1,953 gates, 1.43%)</title><rect x="52.8861%" y="157" width="1.4293%" height="23" fill="rgb(255,232,232)" fg:x="72262" fg:w="1953"/><text x="53.1361%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (1,953 gates, 1.43%)</title><rect x="52.8861%" y="133" width="1.4293%" height="23" fill="rgb(255,232,232)" fg:x="72262" fg:w="1953"/><text x="53.1361%" y="147.50"></text></g><g><title>opcode::blackbox::range (1,953 gates, 1.43%)</title><rect x="52.8861%" y="109" width="1.4293%" height="23" fill="rgb(255,232,232)" fg:x="72262" fg:w="1953"/><text x="53.1361%" y="123.50"></text></g><g><title>main.nr:517:9::BigNum::evaluate_quadratic_expression(
            [[lambda]],
            [[false]],
            [[lambda]],
            [[false]],
            [x3, x1, x1],
            [true, true, true]
        ) (5,686 gates, 4.16%)</title><rect x="50.2002%" y="205" width="4.1614%" height="23" fill="rgb(255,219,219)" fg:x="68592" fg:w="5686"/><text x="50.4502%" y="219.50">main...</text></g><g><title>lib.nr:241:9::Params::get_instance().evaluate_quadratic_expression(
            lhs_terms,
            lhs_flags,
            rhs_terms,
            rhs_flags,
            linear_terms,
            linear_flags
        ) (5,686 gates, 4.16%)</title><rect x="50.2002%" y="181" width="4.1614%" height="23" fill="rgb(255,219,219)" fg:x="68592" fg:w="5686"/><text x="50.4502%" y="195.50">lib.n..</text></g><g><title>runtime_bignum.nr:539:16::product_limbs.get(N + N - 2) == 0 (63 gates, 0.05%)</title><rect x="54.3154%" y="157" width="0.0461%" height="23" fill="rgb(255,246,246)" fg:x="74215" fg:w="63"/><text x="54.5654%" y="171.50"></text></g><g><title>opcode::arithmetic (63 gates, 0.05%)</title><rect x="54.3154%" y="133" width="0.0461%" height="23" fill="rgb(255,246,246)" fg:x="74215" fg:w="63"/><text x="54.5654%" y="147.50"></text></g><g><title>runtime_bignum.nr:255:13::self.limbs[i].assert_max_bit_size(120) (976 gates, 0.71%)</title><rect x="54.3616%" y="133" width="0.7143%" height="23" fill="rgb(255,237,237)" fg:x="74278" fg:w="976"/><text x="54.6116%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (976 gates, 0.71%)</title><rect x="54.3616%" y="109" width="0.7143%" height="23" fill="rgb(255,237,237)" fg:x="74278" fg:w="976"/><text x="54.6116%" y="123.50"></text></g><g><title>opcode::blackbox::range (976 gates, 0.71%)</title><rect x="54.3616%" y="85" width="0.7143%" height="23" fill="rgb(255,237,237)" fg:x="74278" fg:w="976"/><text x="54.6116%" y="99.50"></text></g><g><title>runtime_bignum.nr:424:9::quotient.validate_quotient_in_range() (1,054 gates, 0.77%)</title><rect x="54.3616%" y="157" width="0.7714%" height="23" fill="rgb(255,236,236)" fg:x="74278" fg:w="1054"/><text x="54.6116%" y="171.50"></text></g><g><title>runtime_bignum.nr:259:9::self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32) (78 gates, 0.06%)</title><rect x="55.0759%" y="133" width="0.0571%" height="23" fill="rgb(255,246,246)" fg:x="75254" fg:w="78"/><text x="55.3259%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (78 gates, 0.06%)</title><rect x="55.0759%" y="109" width="0.0571%" height="23" fill="rgb(255,246,246)" fg:x="75254" fg:w="78"/><text x="55.3259%" y="123.50"></text></g><g><title>opcode::blackbox::range (78 gates, 0.06%)</title><rect x="55.0759%" y="85" width="0.0571%" height="23" fill="rgb(255,246,246)" fg:x="75254" fg:w="78"/><text x="55.3259%" y="99.50"></text></g><g><title>runtime_bignum.nr:481:25::std::as_witness(new_term) (4,032 gates, 2.95%)</title><rect x="55.1329%" y="157" width="2.9509%" height="23" fill="rgb(255,224,224)" fg:x="75332" fg:w="4032"/><text x="55.3829%" y="171.50">run..</text></g><g><title>opcode::arithmetic (4,032 gates, 2.95%)</title><rect x="55.1329%" y="133" width="2.9509%" height="23" fill="rgb(255,224,224)" fg:x="75332" fg:w="4032"/><text x="55.3829%" y="147.50">opc..</text></g><g><title>runtime_bignum.nr:508:9::borrow_flags.get(0).assert_max_bit_size(1) (63 gates, 0.05%)</title><rect x="58.0838%" y="157" width="0.0461%" height="23" fill="rgb(255,246,246)" fg:x="79364" fg:w="63"/><text x="58.3338%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (63 gates, 0.05%)</title><rect x="58.0838%" y="133" width="0.0461%" height="23" fill="rgb(255,246,246)" fg:x="79364" fg:w="63"/><text x="58.3338%" y="147.50"></text></g><g><title>opcode::blackbox::range (63 gates, 0.05%)</title><rect x="58.0838%" y="109" width="0.0461%" height="23" fill="rgb(255,246,246)" fg:x="79364" fg:w="63"/><text x="58.3338%" y="123.50"></text></g><g><title>runtime_bignum.nr:511:13::borrow_flags.get(i).assert_max_bit_size(1) (315 gates, 0.23%)</title><rect x="58.1299%" y="157" width="0.2305%" height="23" fill="rgb(255,242,242)" fg:x="79427" fg:w="315"/><text x="58.3799%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (315 gates, 0.23%)</title><rect x="58.1299%" y="133" width="0.2305%" height="23" fill="rgb(255,242,242)" fg:x="79427" fg:w="315"/><text x="58.3799%" y="147.50"></text></g><g><title>opcode::blackbox::range (315 gates, 0.23%)</title><rect x="58.1299%" y="109" width="0.2305%" height="23" fill="rgb(255,242,242)" fg:x="79427" fg:w="315"/><text x="58.3799%" y="123.50"></text></g><g><title>runtime_bignum.nr:534:13::std::as_witness(product_limbs.get(i)) (1,134 gates, 0.83%)</title><rect x="58.3605%" y="157" width="0.8299%" height="23" fill="rgb(255,236,236)" fg:x="79742" fg:w="1134"/><text x="58.6105%" y="171.50"></text></g><g><title>opcode::arithmetic (1,134 gates, 0.83%)</title><rect x="58.3605%" y="133" width="0.8299%" height="23" fill="rgb(255,236,236)" fg:x="79742" fg:w="1134"/><text x="58.6105%" y="147.50"></text></g><g><title>runtime_bignum.nr:535:13::product_limbs.get(i).assert_max_bit_size(126) (2,016 gates, 1.48%)</title><rect x="59.1904%" y="157" width="1.4754%" height="23" fill="rgb(255,231,231)" fg:x="80876" fg:w="2016"/><text x="59.4404%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (2,016 gates, 1.48%)</title><rect x="59.1904%" y="133" width="1.4754%" height="23" fill="rgb(255,231,231)" fg:x="80876" fg:w="2016"/><text x="59.4404%" y="147.50"></text></g><g><title>opcode::blackbox::range (2,016 gates, 1.48%)</title><rect x="59.1904%" y="109" width="1.4754%" height="23" fill="rgb(255,231,231)" fg:x="80876" fg:w="2016"/><text x="59.4404%" y="123.50"></text></g><g><title>main.nr:566:27::accumulator.double_with_hint(transcript[6 + 5 * i]) (25,011 gates, 18.30%)</title><rect x="42.4073%" y="229" width="18.3047%" height="23" fill="rgb(255,185,185)" fg:x="57944" fg:w="25011"/><text x="42.6573%" y="243.50">main.nr:566:27::accumulator.d..</text></g><g><title>main.nr:527:9::BigNum::evaluate_quadratic_expression(
            [[lambda]],
            [[false]],
            [[x3, x1]],
            [[false, true]],
            [y3, y1],
            [false, false]
        ) (8,677 gates, 6.35%)</title><rect x="54.3616%" y="205" width="6.3504%" height="23" fill="rgb(255,212,212)" fg:x="74278" fg:w="8677"/><text x="54.6116%" y="219.50">main.nr:..</text></g><g><title>lib.nr:241:9::Params::get_instance().evaluate_quadratic_expression(
            lhs_terms,
            lhs_flags,
            rhs_terms,
            rhs_flags,
            linear_terms,
            linear_flags
        ) (8,677 gates, 6.35%)</title><rect x="54.3616%" y="181" width="6.3504%" height="23" fill="rgb(255,212,212)" fg:x="74278" fg:w="8677"/><text x="54.6116%" y="195.50">lib.nr:2..</text></g><g><title>runtime_bignum.nr:539:16::product_limbs.get(N + N - 2) == 0 (63 gates, 0.05%)</title><rect x="60.6659%" y="157" width="0.0461%" height="23" fill="rgb(255,246,246)" fg:x="82892" fg:w="63"/><text x="60.9159%" y="171.50"></text></g><g><title>opcode::arithmetic (63 gates, 0.05%)</title><rect x="60.6659%" y="133" width="0.0461%" height="23" fill="rgb(255,246,246)" fg:x="82892" fg:w="63"/><text x="60.9159%" y="147.50"></text></g><g><title>runtime_bignum.nr:234:13::self.limbs[i].assert_max_bit_size(120) (1,008 gates, 0.74%)</title><rect x="60.7120%" y="157" width="0.7377%" height="23" fill="rgb(255,237,237)" fg:x="82955" fg:w="1008"/><text x="60.9620%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (1,008 gates, 0.74%)</title><rect x="60.7120%" y="133" width="0.7377%" height="23" fill="rgb(255,237,237)" fg:x="82955" fg:w="1008"/><text x="60.9620%" y="147.50"></text></g><g><title>opcode::blackbox::range (1,008 gates, 0.74%)</title><rect x="60.7120%" y="109" width="0.7377%" height="23" fill="rgb(255,237,237)" fg:x="82955" fg:w="1008"/><text x="60.9620%" y="123.50"></text></g><g><title>main.nr:500:9::x3.validate_in_range() (1,086 gates, 0.79%)</title><rect x="60.7120%" y="205" width="0.7948%" height="23" fill="rgb(255,236,236)" fg:x="82955" fg:w="1086"/><text x="60.9620%" y="219.50"></text></g><g><title>lib.nr:51:33::RuntimeBigNumTrait::validate_in_range(self) (1,086 gates, 0.79%)</title><rect x="60.7120%" y="181" width="0.7948%" height="23" fill="rgb(255,236,236)" fg:x="82955" fg:w="1086"/><text x="60.9620%" y="195.50"></text></g><g><title>runtime_bignum.nr:237:9::self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32) (78 gates, 0.06%)</title><rect x="61.4497%" y="157" width="0.0571%" height="23" fill="rgb(255,246,246)" fg:x="83963" fg:w="78"/><text x="61.6997%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (78 gates, 0.06%)</title><rect x="61.4497%" y="133" width="0.0571%" height="23" fill="rgb(255,246,246)" fg:x="83963" fg:w="78"/><text x="61.6997%" y="147.50"></text></g><g><title>opcode::blackbox::range (78 gates, 0.06%)</title><rect x="61.4497%" y="109" width="0.0571%" height="23" fill="rgb(255,246,246)" fg:x="83963" fg:w="78"/><text x="61.6997%" y="123.50"></text></g><g><title>runtime_bignum.nr:234:13::self.limbs[i].assert_max_bit_size(120) (977 gates, 0.72%)</title><rect x="61.5068%" y="157" width="0.7150%" height="23" fill="rgb(255,237,237)" fg:x="84041" fg:w="977"/><text x="61.7568%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (977 gates, 0.72%)</title><rect x="61.5068%" y="133" width="0.7150%" height="23" fill="rgb(255,237,237)" fg:x="84041" fg:w="977"/><text x="61.7568%" y="147.50"></text></g><g><title>opcode::blackbox::range (977 gates, 0.72%)</title><rect x="61.5068%" y="109" width="0.7150%" height="23" fill="rgb(255,237,237)" fg:x="84041" fg:w="977"/><text x="61.7568%" y="123.50"></text></g><g><title>main.nr:501:9::y3.validate_in_range() (1,056 gates, 0.77%)</title><rect x="61.5068%" y="205" width="0.7729%" height="23" fill="rgb(255,236,236)" fg:x="84041" fg:w="1056"/><text x="61.7568%" y="219.50"></text></g><g><title>lib.nr:51:33::RuntimeBigNumTrait::validate_in_range(self) (1,056 gates, 0.77%)</title><rect x="61.5068%" y="181" width="0.7729%" height="23" fill="rgb(255,236,236)" fg:x="84041" fg:w="1056"/><text x="61.7568%" y="195.50"></text></g><g><title>runtime_bignum.nr:237:9::self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32) (79 gates, 0.06%)</title><rect x="62.2218%" y="157" width="0.0578%" height="23" fill="rgb(255,246,246)" fg:x="85018" fg:w="79"/><text x="62.4718%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (79 gates, 0.06%)</title><rect x="62.2218%" y="133" width="0.0578%" height="23" fill="rgb(255,246,246)" fg:x="85018" fg:w="79"/><text x="62.4718%" y="147.50"></text></g><g><title>opcode::blackbox::range (79 gates, 0.06%)</title><rect x="62.2218%" y="109" width="0.0578%" height="23" fill="rgb(255,246,246)" fg:x="85018" fg:w="79"/><text x="62.4718%" y="123.50"></text></g><g><title>runtime_bignum.nr:234:13::self.limbs[i].assert_max_bit_size(120) (1,008 gates, 0.74%)</title><rect x="62.2796%" y="157" width="0.7377%" height="23" fill="rgb(255,237,237)" fg:x="85097" fg:w="1008"/><text x="62.5296%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (1,008 gates, 0.74%)</title><rect x="62.2796%" y="133" width="0.7377%" height="23" fill="rgb(255,237,237)" fg:x="85097" fg:w="1008"/><text x="62.5296%" y="147.50"></text></g><g><title>opcode::blackbox::range (1,008 gates, 0.74%)</title><rect x="62.2796%" y="109" width="0.7377%" height="23" fill="rgb(255,237,237)" fg:x="85097" fg:w="1008"/><text x="62.5296%" y="123.50"></text></g><g><title>main.nr:502:9::lambda.validate_in_range() (1,150 gates, 0.84%)</title><rect x="62.2796%" y="205" width="0.8416%" height="23" fill="rgb(255,236,236)" fg:x="85097" fg:w="1150"/><text x="62.5296%" y="219.50"></text></g><g><title>lib.nr:51:33::RuntimeBigNumTrait::validate_in_range(self) (1,150 gates, 0.84%)</title><rect x="62.2796%" y="181" width="0.8416%" height="23" fill="rgb(255,236,236)" fg:x="85097" fg:w="1150"/><text x="62.5296%" y="195.50"></text></g><g><title>runtime_bignum.nr:237:9::self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32) (142 gates, 0.10%)</title><rect x="63.0173%" y="157" width="0.1039%" height="23" fill="rgb(255,245,245)" fg:x="86105" fg:w="142"/><text x="63.2673%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (142 gates, 0.10%)</title><rect x="63.0173%" y="133" width="0.1039%" height="23" fill="rgb(255,245,245)" fg:x="86105" fg:w="142"/><text x="63.2673%" y="147.50"></text></g><g><title>opcode::blackbox::range (142 gates, 0.10%)</title><rect x="63.0173%" y="109" width="0.1039%" height="23" fill="rgb(255,245,245)" fg:x="86105" fg:w="142"/><text x="63.2673%" y="123.50"></text></g><g><title>runtime_bignum.nr:255:13::self.limbs[i].assert_max_bit_size(120) (976 gates, 0.71%)</title><rect x="63.1213%" y="133" width="0.7143%" height="23" fill="rgb(255,237,237)" fg:x="86247" fg:w="976"/><text x="63.3713%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (976 gates, 0.71%)</title><rect x="63.1213%" y="109" width="0.7143%" height="23" fill="rgb(255,237,237)" fg:x="86247" fg:w="976"/><text x="63.3713%" y="123.50"></text></g><g><title>opcode::blackbox::range (976 gates, 0.71%)</title><rect x="63.1213%" y="85" width="0.7143%" height="23" fill="rgb(255,237,237)" fg:x="86247" fg:w="976"/><text x="63.3713%" y="99.50"></text></g><g><title>runtime_bignum.nr:424:9::quotient.validate_quotient_in_range() (1,055 gates, 0.77%)</title><rect x="63.1213%" y="157" width="0.7721%" height="23" fill="rgb(255,236,236)" fg:x="86247" fg:w="1055"/><text x="63.3713%" y="171.50"></text></g><g><title>runtime_bignum.nr:259:9::self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32) (79 gates, 0.06%)</title><rect x="63.8356%" y="133" width="0.0578%" height="23" fill="rgb(255,246,246)" fg:x="87223" fg:w="79"/><text x="64.0856%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (79 gates, 0.06%)</title><rect x="63.8356%" y="109" width="0.0578%" height="23" fill="rgb(255,246,246)" fg:x="87223" fg:w="79"/><text x="64.0856%" y="123.50"></text></g><g><title>opcode::blackbox::range (79 gates, 0.06%)</title><rect x="63.8356%" y="85" width="0.0578%" height="23" fill="rgb(255,246,246)" fg:x="87223" fg:w="79"/><text x="64.0856%" y="99.50"></text></g><g><title>runtime_bignum.nr:481:25::std::as_witness(new_term) (1,008 gates, 0.74%)</title><rect x="63.8934%" y="157" width="0.7377%" height="23" fill="rgb(255,237,237)" fg:x="87302" fg:w="1008"/><text x="64.1434%" y="171.50"></text></g><g><title>opcode::arithmetic (1,008 gates, 0.74%)</title><rect x="63.8934%" y="133" width="0.7377%" height="23" fill="rgb(255,237,237)" fg:x="87302" fg:w="1008"/><text x="64.1434%" y="147.50"></text></g><g><title>runtime_bignum.nr:508:9::borrow_flags.get(0).assert_max_bit_size(1) (63 gates, 0.05%)</title><rect x="64.6311%" y="157" width="0.0461%" height="23" fill="rgb(255,246,246)" fg:x="88310" fg:w="63"/><text x="64.8811%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (63 gates, 0.05%)</title><rect x="64.6311%" y="133" width="0.0461%" height="23" fill="rgb(255,246,246)" fg:x="88310" fg:w="63"/><text x="64.8811%" y="147.50"></text></g><g><title>opcode::blackbox::range (63 gates, 0.05%)</title><rect x="64.6311%" y="109" width="0.0461%" height="23" fill="rgb(255,246,246)" fg:x="88310" fg:w="63"/><text x="64.8811%" y="123.50"></text></g><g><title>runtime_bignum.nr:511:13::borrow_flags.get(i).assert_max_bit_size(1) (315 gates, 0.23%)</title><rect x="64.6772%" y="157" width="0.2305%" height="23" fill="rgb(255,242,242)" fg:x="88373" fg:w="315"/><text x="64.9272%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (315 gates, 0.23%)</title><rect x="64.6772%" y="133" width="0.2305%" height="23" fill="rgb(255,242,242)" fg:x="88373" fg:w="315"/><text x="64.9272%" y="147.50"></text></g><g><title>opcode::blackbox::range (315 gates, 0.23%)</title><rect x="64.6772%" y="109" width="0.2305%" height="23" fill="rgb(255,242,242)" fg:x="88373" fg:w="315"/><text x="64.9272%" y="123.50"></text></g><g><title>runtime_bignum.nr:534:13::std::as_witness(product_limbs.get(i)) (2,772 gates, 2.03%)</title><rect x="64.9077%" y="157" width="2.0287%" height="23" fill="rgb(255,228,228)" fg:x="88688" fg:w="2772"/><text x="65.1577%" y="171.50">r..</text></g><g><title>opcode::arithmetic (2,772 gates, 2.03%)</title><rect x="64.9077%" y="133" width="2.0287%" height="23" fill="rgb(255,228,228)" fg:x="88688" fg:w="2772"/><text x="65.1577%" y="147.50">o..</text></g><g><title>runtime_bignum.nr:535:13::product_limbs.get(i).assert_max_bit_size(126) (1,953 gates, 1.43%)</title><rect x="66.9365%" y="157" width="1.4293%" height="23" fill="rgb(255,232,232)" fg:x="91460" fg:w="1953"/><text x="67.1865%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (1,953 gates, 1.43%)</title><rect x="66.9365%" y="133" width="1.4293%" height="23" fill="rgb(255,232,232)" fg:x="91460" fg:w="1953"/><text x="67.1865%" y="147.50"></text></g><g><title>opcode::blackbox::range (1,953 gates, 1.43%)</title><rect x="66.9365%" y="109" width="1.4293%" height="23" fill="rgb(255,232,232)" fg:x="91460" fg:w="1953"/><text x="67.1865%" y="123.50"></text></g><g><title>main.nr:507:9::BigNum::evaluate_quadratic_expression(
            [[x1, x1, x1], [y1, y1, BigNum::new()]],
            [[false, false, false], [false, false, false]],
            [[x1], [lambda]],
            [[false], [true]],
            [CurveParams::a()],
            [false]
        ) (7,355 gates, 5.38%)</title><rect x="63.1213%" y="205" width="5.3829%" height="23" fill="rgb(255,215,215)" fg:x="86247" fg:w="7355"/><text x="63.3713%" y="219.50">main.nr..</text></g><g><title>lib.nr:241:9::Params::get_instance().evaluate_quadratic_expression(
            lhs_terms,
            lhs_flags,
            rhs_terms,
            rhs_flags,
            linear_terms,
            linear_flags
        ) (7,355 gates, 5.38%)</title><rect x="63.1213%" y="181" width="5.3829%" height="23" fill="rgb(255,215,215)" fg:x="86247" fg:w="7355"/><text x="63.3713%" y="195.50">lib.nr:..</text></g><g><title>runtime_bignum.nr:539:16::product_limbs.get(N + N - 2) == 0 (189 gates, 0.14%)</title><rect x="68.3658%" y="157" width="0.1383%" height="23" fill="rgb(255,244,244)" fg:x="93413" fg:w="189"/><text x="68.6158%" y="171.50"></text></g><g><title>opcode::arithmetic (189 gates, 0.14%)</title><rect x="68.3658%" y="133" width="0.1383%" height="23" fill="rgb(255,244,244)" fg:x="93413" fg:w="189"/><text x="68.6158%" y="147.50"></text></g><g><title>runtime_bignum.nr:255:13::self.limbs[i].assert_max_bit_size(120) (1,008 gates, 0.74%)</title><rect x="68.5041%" y="133" width="0.7377%" height="23" fill="rgb(255,237,237)" fg:x="93602" fg:w="1008"/><text x="68.7541%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (1,008 gates, 0.74%)</title><rect x="68.5041%" y="109" width="0.7377%" height="23" fill="rgb(255,237,237)" fg:x="93602" fg:w="1008"/><text x="68.7541%" y="123.50"></text></g><g><title>opcode::blackbox::range (1,008 gates, 0.74%)</title><rect x="68.5041%" y="85" width="0.7377%" height="23" fill="rgb(255,237,237)" fg:x="93602" fg:w="1008"/><text x="68.7541%" y="99.50"></text></g><g><title>runtime_bignum.nr:424:9::quotient.validate_quotient_in_range() (1,150 gates, 0.84%)</title><rect x="68.5041%" y="157" width="0.8416%" height="23" fill="rgb(255,236,236)" fg:x="93602" fg:w="1150"/><text x="68.7541%" y="171.50"></text></g><g><title>runtime_bignum.nr:259:9::self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32) (142 gates, 0.10%)</title><rect x="69.2419%" y="133" width="0.1039%" height="23" fill="rgb(255,245,245)" fg:x="94610" fg:w="142"/><text x="69.4919%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (142 gates, 0.10%)</title><rect x="69.2419%" y="109" width="0.1039%" height="23" fill="rgb(255,245,245)" fg:x="94610" fg:w="142"/><text x="69.4919%" y="123.50"></text></g><g><title>opcode::blackbox::range (142 gates, 0.10%)</title><rect x="69.2419%" y="85" width="0.1039%" height="23" fill="rgb(255,245,245)" fg:x="94610" fg:w="142"/><text x="69.4919%" y="99.50"></text></g><g><title>runtime_bignum.nr:481:25::std::as_witness(new_term) (1,008 gates, 0.74%)</title><rect x="69.3458%" y="157" width="0.7377%" height="23" fill="rgb(255,237,237)" fg:x="94752" fg:w="1008"/><text x="69.5958%" y="171.50"></text></g><g><title>opcode::arithmetic (1,008 gates, 0.74%)</title><rect x="69.3458%" y="133" width="0.7377%" height="23" fill="rgb(255,237,237)" fg:x="94752" fg:w="1008"/><text x="69.5958%" y="147.50"></text></g><g><title>runtime_bignum.nr:508:9::borrow_flags.get(0).assert_max_bit_size(1) (63 gates, 0.05%)</title><rect x="70.0835%" y="157" width="0.0461%" height="23" fill="rgb(255,246,246)" fg:x="95760" fg:w="63"/><text x="70.3335%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (63 gates, 0.05%)</title><rect x="70.0835%" y="133" width="0.0461%" height="23" fill="rgb(255,246,246)" fg:x="95760" fg:w="63"/><text x="70.3335%" y="147.50"></text></g><g><title>opcode::blackbox::range (63 gates, 0.05%)</title><rect x="70.0835%" y="109" width="0.0461%" height="23" fill="rgb(255,246,246)" fg:x="95760" fg:w="63"/><text x="70.3335%" y="123.50"></text></g><g><title>runtime_bignum.nr:511:13::borrow_flags.get(i).assert_max_bit_size(1) (315 gates, 0.23%)</title><rect x="70.1296%" y="157" width="0.2305%" height="23" fill="rgb(255,242,242)" fg:x="95823" fg:w="315"/><text x="70.3796%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (315 gates, 0.23%)</title><rect x="70.1296%" y="133" width="0.2305%" height="23" fill="rgb(255,242,242)" fg:x="95823" fg:w="315"/><text x="70.3796%" y="147.50"></text></g><g><title>opcode::blackbox::range (315 gates, 0.23%)</title><rect x="70.1296%" y="109" width="0.2305%" height="23" fill="rgb(255,242,242)" fg:x="95823" fg:w="315"/><text x="70.3796%" y="123.50"></text></g><g><title>runtime_bignum.nr:534:13::std::as_witness(product_limbs.get(i)) (1,134 gates, 0.83%)</title><rect x="70.3602%" y="157" width="0.8299%" height="23" fill="rgb(255,236,236)" fg:x="96138" fg:w="1134"/><text x="70.6102%" y="171.50"></text></g><g><title>opcode::arithmetic (1,134 gates, 0.83%)</title><rect x="70.3602%" y="133" width="0.8299%" height="23" fill="rgb(255,236,236)" fg:x="96138" fg:w="1134"/><text x="70.6102%" y="147.50"></text></g><g><title>runtime_bignum.nr:535:13::product_limbs.get(i).assert_max_bit_size(126) (1,953 gates, 1.43%)</title><rect x="71.1901%" y="157" width="1.4293%" height="23" fill="rgb(255,232,232)" fg:x="97272" fg:w="1953"/><text x="71.4401%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (1,953 gates, 1.43%)</title><rect x="71.1901%" y="133" width="1.4293%" height="23" fill="rgb(255,232,232)" fg:x="97272" fg:w="1953"/><text x="71.4401%" y="147.50"></text></g><g><title>opcode::blackbox::range (1,953 gates, 1.43%)</title><rect x="71.1901%" y="109" width="1.4293%" height="23" fill="rgb(255,232,232)" fg:x="97272" fg:w="1953"/><text x="71.4401%" y="123.50"></text></g><g><title>main.nr:517:9::BigNum::evaluate_quadratic_expression(
            [[lambda]],
            [[false]],
            [[lambda]],
            [[false]],
            [x3, x1, x1],
            [true, true, true]
        ) (5,686 gates, 4.16%)</title><rect x="68.5041%" y="205" width="4.1614%" height="23" fill="rgb(255,219,219)" fg:x="93602" fg:w="5686"/><text x="68.7541%" y="219.50">main...</text></g><g><title>lib.nr:241:9::Params::get_instance().evaluate_quadratic_expression(
            lhs_terms,
            lhs_flags,
            rhs_terms,
            rhs_flags,
            linear_terms,
            linear_flags
        ) (5,686 gates, 4.16%)</title><rect x="68.5041%" y="181" width="4.1614%" height="23" fill="rgb(255,219,219)" fg:x="93602" fg:w="5686"/><text x="68.7541%" y="195.50">lib.n..</text></g><g><title>runtime_bignum.nr:539:16::product_limbs.get(N + N - 2) == 0 (63 gates, 0.05%)</title><rect x="72.6194%" y="157" width="0.0461%" height="23" fill="rgb(255,246,246)" fg:x="99225" fg:w="63"/><text x="72.8694%" y="171.50"></text></g><g><title>opcode::arithmetic (63 gates, 0.05%)</title><rect x="72.6194%" y="133" width="0.0461%" height="23" fill="rgb(255,246,246)" fg:x="99225" fg:w="63"/><text x="72.8694%" y="147.50"></text></g><g><title>runtime_bignum.nr:255:13::self.limbs[i].assert_max_bit_size(120) (977 gates, 0.72%)</title><rect x="72.6655%" y="133" width="0.7150%" height="23" fill="rgb(255,237,237)" fg:x="99288" fg:w="977"/><text x="72.9155%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (977 gates, 0.72%)</title><rect x="72.6655%" y="109" width="0.7150%" height="23" fill="rgb(255,237,237)" fg:x="99288" fg:w="977"/><text x="72.9155%" y="123.50"></text></g><g><title>opcode::blackbox::range (977 gates, 0.72%)</title><rect x="72.6655%" y="85" width="0.7150%" height="23" fill="rgb(255,237,237)" fg:x="99288" fg:w="977"/><text x="72.9155%" y="99.50"></text></g><g><title>runtime_bignum.nr:424:9::quotient.validate_quotient_in_range() (1,056 gates, 0.77%)</title><rect x="72.6655%" y="157" width="0.7729%" height="23" fill="rgb(255,236,236)" fg:x="99288" fg:w="1056"/><text x="72.9155%" y="171.50"></text></g><g><title>runtime_bignum.nr:259:9::self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32) (79 gates, 0.06%)</title><rect x="73.3806%" y="133" width="0.0578%" height="23" fill="rgb(255,246,246)" fg:x="100265" fg:w="79"/><text x="73.6306%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (79 gates, 0.06%)</title><rect x="73.3806%" y="109" width="0.0578%" height="23" fill="rgb(255,246,246)" fg:x="100265" fg:w="79"/><text x="73.6306%" y="123.50"></text></g><g><title>opcode::blackbox::range (79 gates, 0.06%)</title><rect x="73.3806%" y="85" width="0.0578%" height="23" fill="rgb(255,246,246)" fg:x="100265" fg:w="79"/><text x="73.6306%" y="99.50"></text></g><g><title>runtime_bignum.nr:481:25::std::as_witness(new_term) (4,032 gates, 2.95%)</title><rect x="73.4384%" y="157" width="2.9509%" height="23" fill="rgb(255,224,224)" fg:x="100344" fg:w="4032"/><text x="73.6884%" y="171.50">run..</text></g><g><title>opcode::arithmetic (4,032 gates, 2.95%)</title><rect x="73.4384%" y="133" width="2.9509%" height="23" fill="rgb(255,224,224)" fg:x="100344" fg:w="4032"/><text x="73.6884%" y="147.50">opc..</text></g><g><title>runtime_bignum.nr:508:9::borrow_flags.get(0).assert_max_bit_size(1) (63 gates, 0.05%)</title><rect x="76.3893%" y="157" width="0.0461%" height="23" fill="rgb(255,246,246)" fg:x="104376" fg:w="63"/><text x="76.6393%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (63 gates, 0.05%)</title><rect x="76.3893%" y="133" width="0.0461%" height="23" fill="rgb(255,246,246)" fg:x="104376" fg:w="63"/><text x="76.6393%" y="147.50"></text></g><g><title>opcode::blackbox::range (63 gates, 0.05%)</title><rect x="76.3893%" y="109" width="0.0461%" height="23" fill="rgb(255,246,246)" fg:x="104376" fg:w="63"/><text x="76.6393%" y="123.50"></text></g><g><title>runtime_bignum.nr:511:13::borrow_flags.get(i).assert_max_bit_size(1) (315 gates, 0.23%)</title><rect x="76.4354%" y="157" width="0.2305%" height="23" fill="rgb(255,242,242)" fg:x="104439" fg:w="315"/><text x="76.6854%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (315 gates, 0.23%)</title><rect x="76.4354%" y="133" width="0.2305%" height="23" fill="rgb(255,242,242)" fg:x="104439" fg:w="315"/><text x="76.6854%" y="147.50"></text></g><g><title>opcode::blackbox::range (315 gates, 0.23%)</title><rect x="76.4354%" y="109" width="0.2305%" height="23" fill="rgb(255,242,242)" fg:x="104439" fg:w="315"/><text x="76.6854%" y="123.50"></text></g><g><title>runtime_bignum.nr:534:13::std::as_witness(product_limbs.get(i)) (1,134 gates, 0.83%)</title><rect x="76.6659%" y="157" width="0.8299%" height="23" fill="rgb(255,236,236)" fg:x="104754" fg:w="1134"/><text x="76.9159%" y="171.50"></text></g><g><title>opcode::arithmetic (1,134 gates, 0.83%)</title><rect x="76.6659%" y="133" width="0.8299%" height="23" fill="rgb(255,236,236)" fg:x="104754" fg:w="1134"/><text x="76.9159%" y="147.50"></text></g><g><title>runtime_bignum.nr:535:13::product_limbs.get(i).assert_max_bit_size(126) (2,016 gates, 1.48%)</title><rect x="77.4958%" y="157" width="1.4754%" height="23" fill="rgb(255,231,231)" fg:x="105888" fg:w="2016"/><text x="77.7458%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (2,016 gates, 1.48%)</title><rect x="77.4958%" y="133" width="1.4754%" height="23" fill="rgb(255,231,231)" fg:x="105888" fg:w="2016"/><text x="77.7458%" y="147.50"></text></g><g><title>opcode::blackbox::range (2,016 gates, 1.48%)</title><rect x="77.4958%" y="109" width="1.4754%" height="23" fill="rgb(255,231,231)" fg:x="105888" fg:w="2016"/><text x="77.7458%" y="123.50"></text></g><g><title>main.nr:567:27::accumulator.double_with_hint(transcript[7 + 5 * i]) (25,012 gates, 18.31%)</title><rect x="60.7120%" y="229" width="18.3054%" height="23" fill="rgb(255,185,185)" fg:x="82955" fg:w="25012"/><text x="60.9620%" y="243.50">main.nr:567:27::accumulator.d..</text></g><g><title>main.nr:527:9::BigNum::evaluate_quadratic_expression(
            [[lambda]],
            [[false]],
            [[x3, x1]],
            [[false, true]],
            [y3, y1],
            [false, false]
        ) (8,679 gates, 6.35%)</title><rect x="72.6655%" y="205" width="6.3519%" height="23" fill="rgb(255,212,212)" fg:x="99288" fg:w="8679"/><text x="72.9155%" y="219.50">main.nr:..</text></g><g><title>lib.nr:241:9::Params::get_instance().evaluate_quadratic_expression(
            lhs_terms,
            lhs_flags,
            rhs_terms,
            rhs_flags,
            linear_terms,
            linear_flags
        ) (8,679 gates, 6.35%)</title><rect x="72.6655%" y="181" width="6.3519%" height="23" fill="rgb(255,212,212)" fg:x="99288" fg:w="8679"/><text x="72.9155%" y="195.50">lib.nr:2..</text></g><g><title>runtime_bignum.nr:539:16::product_limbs.get(N + N - 2) == 0 (63 gates, 0.05%)</title><rect x="78.9713%" y="157" width="0.0461%" height="23" fill="rgb(255,246,246)" fg:x="107904" fg:w="63"/><text x="79.2213%" y="171.50"></text></g><g><title>opcode::arithmetic (63 gates, 0.05%)</title><rect x="78.9713%" y="133" width="0.0461%" height="23" fill="rgb(255,246,246)" fg:x="107904" fg:w="63"/><text x="79.2213%" y="147.50"></text></g><g><title>runtime_bignum.nr:234:13::self.limbs[i].assert_max_bit_size(120) (1,008 gates, 0.74%)</title><rect x="79.0174%" y="157" width="0.7377%" height="23" fill="rgb(255,237,237)" fg:x="107967" fg:w="1008"/><text x="79.2674%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (1,008 gates, 0.74%)</title><rect x="79.0174%" y="133" width="0.7377%" height="23" fill="rgb(255,237,237)" fg:x="107967" fg:w="1008"/><text x="79.2674%" y="147.50"></text></g><g><title>opcode::blackbox::range (1,008 gates, 0.74%)</title><rect x="79.0174%" y="109" width="0.7377%" height="23" fill="rgb(255,237,237)" fg:x="107967" fg:w="1008"/><text x="79.2674%" y="123.50"></text></g><g><title>main.nr:184:9::x3.validate_in_range() (1,087 gates, 0.80%)</title><rect x="79.0174%" y="205" width="0.7955%" height="23" fill="rgb(255,236,236)" fg:x="107967" fg:w="1087"/><text x="79.2674%" y="219.50"></text></g><g><title>lib.nr:51:33::RuntimeBigNumTrait::validate_in_range(self) (1,087 gates, 0.80%)</title><rect x="79.0174%" y="181" width="0.7955%" height="23" fill="rgb(255,236,236)" fg:x="107967" fg:w="1087"/><text x="79.2674%" y="195.50"></text></g><g><title>runtime_bignum.nr:237:9::self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32) (79 gates, 0.06%)</title><rect x="79.7551%" y="157" width="0.0578%" height="23" fill="rgb(255,246,246)" fg:x="108975" fg:w="79"/><text x="80.0051%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (79 gates, 0.06%)</title><rect x="79.7551%" y="133" width="0.0578%" height="23" fill="rgb(255,246,246)" fg:x="108975" fg:w="79"/><text x="80.0051%" y="147.50"></text></g><g><title>opcode::blackbox::range (79 gates, 0.06%)</title><rect x="79.7551%" y="109" width="0.0578%" height="23" fill="rgb(255,246,246)" fg:x="108975" fg:w="79"/><text x="80.0051%" y="123.50"></text></g><g><title>runtime_bignum.nr:234:13::self.limbs[i].assert_max_bit_size(120) (976 gates, 0.71%)</title><rect x="79.8129%" y="157" width="0.7143%" height="23" fill="rgb(255,237,237)" fg:x="109054" fg:w="976"/><text x="80.0629%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (976 gates, 0.71%)</title><rect x="79.8129%" y="133" width="0.7143%" height="23" fill="rgb(255,237,237)" fg:x="109054" fg:w="976"/><text x="80.0629%" y="147.50"></text></g><g><title>opcode::blackbox::range (976 gates, 0.71%)</title><rect x="79.8129%" y="109" width="0.7143%" height="23" fill="rgb(255,237,237)" fg:x="109054" fg:w="976"/><text x="80.0629%" y="123.50"></text></g><g><title>main.nr:185:9::y3.validate_in_range() (1,054 gates, 0.77%)</title><rect x="79.8129%" y="205" width="0.7714%" height="23" fill="rgb(255,236,236)" fg:x="109054" fg:w="1054"/><text x="80.0629%" y="219.50"></text></g><g><title>lib.nr:51:33::RuntimeBigNumTrait::validate_in_range(self) (1,054 gates, 0.77%)</title><rect x="79.8129%" y="181" width="0.7714%" height="23" fill="rgb(255,236,236)" fg:x="109054" fg:w="1054"/><text x="80.0629%" y="195.50"></text></g><g><title>runtime_bignum.nr:237:9::self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32) (78 gates, 0.06%)</title><rect x="80.5272%" y="157" width="0.0571%" height="23" fill="rgb(255,246,246)" fg:x="110030" fg:w="78"/><text x="80.7772%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (78 gates, 0.06%)</title><rect x="80.5272%" y="133" width="0.0571%" height="23" fill="rgb(255,246,246)" fg:x="110030" fg:w="78"/><text x="80.7772%" y="147.50"></text></g><g><title>opcode::blackbox::range (78 gates, 0.06%)</title><rect x="80.5272%" y="109" width="0.0571%" height="23" fill="rgb(255,246,246)" fg:x="110030" fg:w="78"/><text x="80.7772%" y="123.50"></text></g><g><title>runtime_bignum.nr:234:13::self.limbs[i].assert_max_bit_size(120) (1,008 gates, 0.74%)</title><rect x="80.5843%" y="157" width="0.7377%" height="23" fill="rgb(255,237,237)" fg:x="110108" fg:w="1008"/><text x="80.8343%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (1,008 gates, 0.74%)</title><rect x="80.5843%" y="133" width="0.7377%" height="23" fill="rgb(255,237,237)" fg:x="110108" fg:w="1008"/><text x="80.8343%" y="147.50"></text></g><g><title>opcode::blackbox::range (1,008 gates, 0.74%)</title><rect x="80.5843%" y="109" width="0.7377%" height="23" fill="rgb(255,237,237)" fg:x="110108" fg:w="1008"/><text x="80.8343%" y="123.50"></text></g><g><title>main.nr:186:9::lambda.validate_in_range() (1,150 gates, 0.84%)</title><rect x="80.5843%" y="205" width="0.8416%" height="23" fill="rgb(255,236,236)" fg:x="110108" fg:w="1150"/><text x="80.8343%" y="219.50"></text></g><g><title>lib.nr:51:33::RuntimeBigNumTrait::validate_in_range(self) (1,150 gates, 0.84%)</title><rect x="80.5843%" y="181" width="0.8416%" height="23" fill="rgb(255,236,236)" fg:x="110108" fg:w="1150"/><text x="80.8343%" y="195.50"></text></g><g><title>runtime_bignum.nr:237:9::self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32) (142 gates, 0.10%)</title><rect x="81.3220%" y="157" width="0.1039%" height="23" fill="rgb(255,245,245)" fg:x="111116" fg:w="142"/><text x="81.5720%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (142 gates, 0.10%)</title><rect x="81.3220%" y="133" width="0.1039%" height="23" fill="rgb(255,245,245)" fg:x="111116" fg:w="142"/><text x="81.5720%" y="147.50"></text></g><g><title>opcode::blackbox::range (142 gates, 0.10%)</title><rect x="81.3220%" y="109" width="0.1039%" height="23" fill="rgb(255,245,245)" fg:x="111116" fg:w="142"/><text x="81.5720%" y="123.50"></text></g><g><title>runtime_bignum.nr:588:26::diff * (diff + modulus_mod_n) * (diff - modulus_mod_n) (126 gates, 0.09%)</title><rect x="81.4260%" y="157" width="0.0922%" height="23" fill="rgb(255,245,245)" fg:x="111258" fg:w="126"/><text x="81.6760%" y="171.50"></text></g><g><title>opcode::arithmetic (126 gates, 0.09%)</title><rect x="81.4260%" y="133" width="0.0922%" height="23" fill="rgb(255,245,245)" fg:x="111258" fg:w="126"/><text x="81.6760%" y="147.50"></text></g><g><title>runtime_bignum.nr:588:26::diff * (diff + modulus_mod_n) (315 gates, 0.23%)</title><rect x="81.5182%" y="157" width="0.2305%" height="23" fill="rgb(255,242,242)" fg:x="111384" fg:w="315"/><text x="81.7682%" y="171.50"></text></g><g><title>opcode::arithmetic (315 gates, 0.23%)</title><rect x="81.5182%" y="133" width="0.2305%" height="23" fill="rgb(255,242,242)" fg:x="111384" fg:w="315"/><text x="81.7682%" y="147.50"></text></g><g><title>main.nr:189:9::x1.assert_is_not_equal(x2) (693 gates, 0.51%)</title><rect x="81.4260%" y="205" width="0.5072%" height="23" fill="rgb(255,239,239)" fg:x="111258" fg:w="693"/><text x="81.6760%" y="219.50"></text></g><g><title>lib.nr:264:9::Params::get_instance().assert_is_not_equal(self, other) (693 gates, 0.51%)</title><rect x="81.4260%" y="181" width="0.5072%" height="23" fill="rgb(255,239,239)" fg:x="111258" fg:w="693"/><text x="81.6760%" y="195.50"></text></g><g><title>runtime_bignum.nr:589:16::target != 0 (252 gates, 0.18%)</title><rect x="81.7487%" y="157" width="0.1844%" height="23" fill="rgb(255,243,243)" fg:x="111699" fg:w="252"/><text x="81.9987%" y="171.50"></text></g><g><title>opcode::arithmetic (252 gates, 0.18%)</title><rect x="81.7487%" y="133" width="0.1844%" height="23" fill="rgb(255,243,243)" fg:x="111699" fg:w="252"/><text x="81.9987%" y="147.50"></text></g><g><title>runtime_bignum.nr:255:13::self.limbs[i].assert_max_bit_size(120) (977 gates, 0.72%)</title><rect x="81.9332%" y="133" width="0.7150%" height="23" fill="rgb(255,237,237)" fg:x="111951" fg:w="977"/><text x="82.1832%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (977 gates, 0.72%)</title><rect x="81.9332%" y="109" width="0.7150%" height="23" fill="rgb(255,237,237)" fg:x="111951" fg:w="977"/><text x="82.1832%" y="123.50"></text></g><g><title>opcode::blackbox::range (977 gates, 0.72%)</title><rect x="81.9332%" y="85" width="0.7150%" height="23" fill="rgb(255,237,237)" fg:x="111951" fg:w="977"/><text x="82.1832%" y="99.50"></text></g><g><title>runtime_bignum.nr:424:9::quotient.validate_quotient_in_range() (1,055 gates, 0.77%)</title><rect x="81.9332%" y="157" width="0.7721%" height="23" fill="rgb(255,236,236)" fg:x="111951" fg:w="1055"/><text x="82.1832%" y="171.50"></text></g><g><title>runtime_bignum.nr:259:9::self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32) (78 gates, 0.06%)</title><rect x="82.6482%" y="133" width="0.0571%" height="23" fill="rgb(255,246,246)" fg:x="112928" fg:w="78"/><text x="82.8982%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (78 gates, 0.06%)</title><rect x="82.6482%" y="109" width="0.0571%" height="23" fill="rgb(255,246,246)" fg:x="112928" fg:w="78"/><text x="82.8982%" y="123.50"></text></g><g><title>opcode::blackbox::range (78 gates, 0.06%)</title><rect x="82.6482%" y="85" width="0.0571%" height="23" fill="rgb(255,246,246)" fg:x="112928" fg:w="78"/><text x="82.8982%" y="99.50"></text></g><g><title>runtime_bignum.nr:481:25::std::as_witness(new_term) (4,032 gates, 2.95%)</title><rect x="82.7053%" y="157" width="2.9509%" height="23" fill="rgb(255,224,224)" fg:x="113006" fg:w="4032"/><text x="82.9553%" y="171.50">run..</text></g><g><title>opcode::arithmetic (4,032 gates, 2.95%)</title><rect x="82.7053%" y="133" width="2.9509%" height="23" fill="rgb(255,224,224)" fg:x="113006" fg:w="4032"/><text x="82.9553%" y="147.50">opc..</text></g><g><title>runtime_bignum.nr:508:9::borrow_flags.get(0).assert_max_bit_size(1) (63 gates, 0.05%)</title><rect x="85.6562%" y="157" width="0.0461%" height="23" fill="rgb(255,246,246)" fg:x="117038" fg:w="63"/><text x="85.9062%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (63 gates, 0.05%)</title><rect x="85.6562%" y="133" width="0.0461%" height="23" fill="rgb(255,246,246)" fg:x="117038" fg:w="63"/><text x="85.9062%" y="147.50"></text></g><g><title>opcode::blackbox::range (63 gates, 0.05%)</title><rect x="85.6562%" y="109" width="0.0461%" height="23" fill="rgb(255,246,246)" fg:x="117038" fg:w="63"/><text x="85.9062%" y="123.50"></text></g><g><title>runtime_bignum.nr:511:13::borrow_flags.get(i).assert_max_bit_size(1) (315 gates, 0.23%)</title><rect x="85.7023%" y="157" width="0.2305%" height="23" fill="rgb(255,242,242)" fg:x="117101" fg:w="315"/><text x="85.9523%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (315 gates, 0.23%)</title><rect x="85.7023%" y="133" width="0.2305%" height="23" fill="rgb(255,242,242)" fg:x="117101" fg:w="315"/><text x="85.9523%" y="147.50"></text></g><g><title>opcode::blackbox::range (315 gates, 0.23%)</title><rect x="85.7023%" y="109" width="0.2305%" height="23" fill="rgb(255,242,242)" fg:x="117101" fg:w="315"/><text x="85.9523%" y="123.50"></text></g><g><title>runtime_bignum.nr:534:13::std::as_witness(product_limbs.get(i)) (1,134 gates, 0.83%)</title><rect x="85.9328%" y="157" width="0.8299%" height="23" fill="rgb(255,236,236)" fg:x="117416" fg:w="1134"/><text x="86.1828%" y="171.50"></text></g><g><title>opcode::arithmetic (1,134 gates, 0.83%)</title><rect x="85.9328%" y="133" width="0.8299%" height="23" fill="rgb(255,236,236)" fg:x="117416" fg:w="1134"/><text x="86.1828%" y="147.50"></text></g><g><title>runtime_bignum.nr:535:13::product_limbs.get(i).assert_max_bit_size(126) (1,953 gates, 1.43%)</title><rect x="86.7627%" y="157" width="1.4293%" height="23" fill="rgb(255,232,232)" fg:x="118550" fg:w="1953"/><text x="87.0127%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (1,953 gates, 1.43%)</title><rect x="86.7627%" y="133" width="1.4293%" height="23" fill="rgb(255,232,232)" fg:x="118550" fg:w="1953"/><text x="87.0127%" y="147.50"></text></g><g><title>opcode::blackbox::range (1,953 gates, 1.43%)</title><rect x="86.7627%" y="109" width="1.4293%" height="23" fill="rgb(255,232,232)" fg:x="118550" fg:w="1953"/><text x="87.0127%" y="123.50"></text></g><g><title>main.nr:192:9::BigNum::evaluate_quadratic_expression(
            [[lambda]],
            [[false]],
            [[x2, x1]],
            [[false, true]],
            [y2, y1],
            [true, false]
        ) (8,615 gates, 6.31%)</title><rect x="81.9332%" y="205" width="6.3050%" height="23" fill="rgb(255,212,212)" fg:x="111951" fg:w="8615"/><text x="82.1832%" y="219.50">main.nr:..</text></g><g><title>lib.nr:241:9::Params::get_instance().evaluate_quadratic_expression(
            lhs_terms,
            lhs_flags,
            rhs_terms,
            rhs_flags,
            linear_terms,
            linear_flags
        ) (8,615 gates, 6.31%)</title><rect x="81.9332%" y="181" width="6.3050%" height="23" fill="rgb(255,212,212)" fg:x="111951" fg:w="8615"/><text x="82.1832%" y="195.50">lib.nr:2..</text></g><g><title>runtime_bignum.nr:539:16::product_limbs.get(N + N - 2) == 0 (63 gates, 0.05%)</title><rect x="88.1921%" y="157" width="0.0461%" height="23" fill="rgb(255,246,246)" fg:x="120503" fg:w="63"/><text x="88.4421%" y="171.50"></text></g><g><title>opcode::arithmetic (63 gates, 0.05%)</title><rect x="88.1921%" y="133" width="0.0461%" height="23" fill="rgb(255,246,246)" fg:x="120503" fg:w="63"/><text x="88.4421%" y="147.50"></text></g><g><title>runtime_bignum.nr:255:13::self.limbs[i].assert_max_bit_size(120) (1,008 gates, 0.74%)</title><rect x="88.2382%" y="133" width="0.7377%" height="23" fill="rgb(255,237,237)" fg:x="120566" fg:w="1008"/><text x="88.4882%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (1,008 gates, 0.74%)</title><rect x="88.2382%" y="109" width="0.7377%" height="23" fill="rgb(255,237,237)" fg:x="120566" fg:w="1008"/><text x="88.4882%" y="123.50"></text></g><g><title>opcode::blackbox::range (1,008 gates, 0.74%)</title><rect x="88.2382%" y="85" width="0.7377%" height="23" fill="rgb(255,237,237)" fg:x="120566" fg:w="1008"/><text x="88.4882%" y="99.50"></text></g><g><title>runtime_bignum.nr:424:9::quotient.validate_quotient_in_range() (1,150 gates, 0.84%)</title><rect x="88.2382%" y="157" width="0.8416%" height="23" fill="rgb(255,236,236)" fg:x="120566" fg:w="1150"/><text x="88.4882%" y="171.50"></text></g><g><title>runtime_bignum.nr:259:9::self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32) (142 gates, 0.10%)</title><rect x="88.9759%" y="133" width="0.1039%" height="23" fill="rgb(255,245,245)" fg:x="121574" fg:w="142"/><text x="89.2259%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (142 gates, 0.10%)</title><rect x="88.9759%" y="109" width="0.1039%" height="23" fill="rgb(255,245,245)" fg:x="121574" fg:w="142"/><text x="89.2259%" y="123.50"></text></g><g><title>opcode::blackbox::range (142 gates, 0.10%)</title><rect x="88.9759%" y="85" width="0.1039%" height="23" fill="rgb(255,245,245)" fg:x="121574" fg:w="142"/><text x="89.2259%" y="99.50"></text></g><g><title>runtime_bignum.nr:481:25::std::as_witness(new_term) (1,008 gates, 0.74%)</title><rect x="89.0798%" y="157" width="0.7377%" height="23" fill="rgb(255,237,237)" fg:x="121716" fg:w="1008"/><text x="89.3298%" y="171.50"></text></g><g><title>opcode::arithmetic (1,008 gates, 0.74%)</title><rect x="89.0798%" y="133" width="0.7377%" height="23" fill="rgb(255,237,237)" fg:x="121716" fg:w="1008"/><text x="89.3298%" y="147.50"></text></g><g><title>runtime_bignum.nr:508:9::borrow_flags.get(0).assert_max_bit_size(1) (63 gates, 0.05%)</title><rect x="89.8175%" y="157" width="0.0461%" height="23" fill="rgb(255,246,246)" fg:x="122724" fg:w="63"/><text x="90.0675%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (63 gates, 0.05%)</title><rect x="89.8175%" y="133" width="0.0461%" height="23" fill="rgb(255,246,246)" fg:x="122724" fg:w="63"/><text x="90.0675%" y="147.50"></text></g><g><title>opcode::blackbox::range (63 gates, 0.05%)</title><rect x="89.8175%" y="109" width="0.0461%" height="23" fill="rgb(255,246,246)" fg:x="122724" fg:w="63"/><text x="90.0675%" y="123.50"></text></g><g><title>runtime_bignum.nr:511:13::borrow_flags.get(i).assert_max_bit_size(1) (315 gates, 0.23%)</title><rect x="89.8637%" y="157" width="0.2305%" height="23" fill="rgb(255,242,242)" fg:x="122787" fg:w="315"/><text x="90.1137%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (315 gates, 0.23%)</title><rect x="89.8637%" y="133" width="0.2305%" height="23" fill="rgb(255,242,242)" fg:x="122787" fg:w="315"/><text x="90.1137%" y="147.50"></text></g><g><title>opcode::blackbox::range (315 gates, 0.23%)</title><rect x="89.8637%" y="109" width="0.2305%" height="23" fill="rgb(255,242,242)" fg:x="122787" fg:w="315"/><text x="90.1137%" y="123.50"></text></g><g><title>runtime_bignum.nr:534:13::std::as_witness(product_limbs.get(i)) (1,260 gates, 0.92%)</title><rect x="90.0942%" y="157" width="0.9222%" height="23" fill="rgb(255,235,235)" fg:x="123102" fg:w="1260"/><text x="90.3442%" y="171.50"></text></g><g><title>opcode::arithmetic (1,260 gates, 0.92%)</title><rect x="90.0942%" y="133" width="0.9222%" height="23" fill="rgb(255,235,235)" fg:x="123102" fg:w="1260"/><text x="90.3442%" y="147.50"></text></g><g><title>runtime_bignum.nr:535:13::product_limbs.get(i).assert_max_bit_size(126) (1,953 gates, 1.43%)</title><rect x="91.0163%" y="157" width="1.4293%" height="23" fill="rgb(255,232,232)" fg:x="124362" fg:w="1953"/><text x="91.2663%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (1,953 gates, 1.43%)</title><rect x="91.0163%" y="133" width="1.4293%" height="23" fill="rgb(255,232,232)" fg:x="124362" fg:w="1953"/><text x="91.2663%" y="147.50"></text></g><g><title>opcode::blackbox::range (1,953 gates, 1.43%)</title><rect x="91.0163%" y="109" width="1.4293%" height="23" fill="rgb(255,232,232)" fg:x="124362" fg:w="1953"/><text x="91.2663%" y="123.50"></text></g><g><title>main.nr:202:9::BigNum::evaluate_quadratic_expression(
            [[lambda]],
            [[false]],
            [[lambda]],
            [[false]],
            [x3, x2, x1],
            [true, true, true]
        ) (5,812 gates, 4.25%)</title><rect x="88.2382%" y="205" width="4.2536%" height="23" fill="rgb(255,219,219)" fg:x="120566" fg:w="5812"/><text x="88.4882%" y="219.50">main...</text></g><g><title>lib.nr:241:9::Params::get_instance().evaluate_quadratic_expression(
            lhs_terms,
            lhs_flags,
            rhs_terms,
            rhs_flags,
            linear_terms,
            linear_flags
        ) (5,812 gates, 4.25%)</title><rect x="88.2382%" y="181" width="4.2536%" height="23" fill="rgb(255,219,219)" fg:x="120566" fg:w="5812"/><text x="88.4882%" y="195.50">lib.n..</text></g><g><title>runtime_bignum.nr:539:16::product_limbs.get(N + N - 2) == 0 (63 gates, 0.05%)</title><rect x="92.4457%" y="157" width="0.0461%" height="23" fill="rgb(255,246,246)" fg:x="126315" fg:w="63"/><text x="92.6957%" y="171.50"></text></g><g><title>opcode::arithmetic (63 gates, 0.05%)</title><rect x="92.4457%" y="133" width="0.0461%" height="23" fill="rgb(255,246,246)" fg:x="126315" fg:w="63"/><text x="92.6957%" y="147.50"></text></g><g><title>runtime_bignum.nr:255:13::self.limbs[i].assert_max_bit_size(120) (976 gates, 0.71%)</title><rect x="92.4918%" y="133" width="0.7143%" height="23" fill="rgb(255,237,237)" fg:x="126378" fg:w="976"/><text x="92.7418%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (976 gates, 0.71%)</title><rect x="92.4918%" y="109" width="0.7143%" height="23" fill="rgb(255,237,237)" fg:x="126378" fg:w="976"/><text x="92.7418%" y="123.50"></text></g><g><title>opcode::blackbox::range (976 gates, 0.71%)</title><rect x="92.4918%" y="85" width="0.7143%" height="23" fill="rgb(255,237,237)" fg:x="126378" fg:w="976"/><text x="92.7418%" y="99.50"></text></g><g><title>runtime_bignum.nr:424:9::quotient.validate_quotient_in_range() (1,055 gates, 0.77%)</title><rect x="92.4918%" y="157" width="0.7721%" height="23" fill="rgb(255,236,236)" fg:x="126378" fg:w="1055"/><text x="92.7418%" y="171.50"></text></g><g><title>runtime_bignum.nr:259:9::self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32) (79 gates, 0.06%)</title><rect x="93.2061%" y="133" width="0.0578%" height="23" fill="rgb(255,246,246)" fg:x="127354" fg:w="79"/><text x="93.4561%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (79 gates, 0.06%)</title><rect x="93.2061%" y="109" width="0.0578%" height="23" fill="rgb(255,246,246)" fg:x="127354" fg:w="79"/><text x="93.4561%" y="123.50"></text></g><g><title>opcode::blackbox::range (79 gates, 0.06%)</title><rect x="93.2061%" y="85" width="0.0578%" height="23" fill="rgb(255,246,246)" fg:x="127354" fg:w="79"/><text x="93.4561%" y="99.50"></text></g><g><title>runtime_bignum.nr:481:25::std::as_witness(new_term) (3,024 gates, 2.21%)</title><rect x="93.2639%" y="157" width="2.2132%" height="23" fill="rgb(255,227,227)" fg:x="127433" fg:w="3024"/><text x="93.5139%" y="171.50">r..</text></g><g><title>opcode::arithmetic (3,024 gates, 2.21%)</title><rect x="93.2639%" y="133" width="2.2132%" height="23" fill="rgb(255,227,227)" fg:x="127433" fg:w="3024"/><text x="93.5139%" y="147.50">o..</text></g><g><title>runtime_bignum.nr:508:9::borrow_flags.get(0).assert_max_bit_size(1) (63 gates, 0.05%)</title><rect x="95.4771%" y="157" width="0.0461%" height="23" fill="rgb(255,246,246)" fg:x="130457" fg:w="63"/><text x="95.7271%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (63 gates, 0.05%)</title><rect x="95.4771%" y="133" width="0.0461%" height="23" fill="rgb(255,246,246)" fg:x="130457" fg:w="63"/><text x="95.7271%" y="147.50"></text></g><g><title>opcode::blackbox::range (63 gates, 0.05%)</title><rect x="95.4771%" y="109" width="0.0461%" height="23" fill="rgb(255,246,246)" fg:x="130457" fg:w="63"/><text x="95.7271%" y="123.50"></text></g><g><title>runtime_bignum.nr:511:13::borrow_flags.get(i).assert_max_bit_size(1) (315 gates, 0.23%)</title><rect x="95.5232%" y="157" width="0.2305%" height="23" fill="rgb(255,242,242)" fg:x="130520" fg:w="315"/><text x="95.7732%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (315 gates, 0.23%)</title><rect x="95.5232%" y="133" width="0.2305%" height="23" fill="rgb(255,242,242)" fg:x="130520" fg:w="315"/><text x="95.7732%" y="147.50"></text></g><g><title>opcode::blackbox::range (315 gates, 0.23%)</title><rect x="95.5232%" y="109" width="0.2305%" height="23" fill="rgb(255,242,242)" fg:x="130520" fg:w="315"/><text x="95.7732%" y="123.50"></text></g><g><title>runtime_bignum.nr:534:13::std::as_witness(product_limbs.get(i)) (1,134 gates, 0.83%)</title><rect x="95.7537%" y="157" width="0.8299%" height="23" fill="rgb(255,236,236)" fg:x="130835" fg:w="1134"/><text x="96.0037%" y="171.50"></text></g><g><title>opcode::arithmetic (1,134 gates, 0.83%)</title><rect x="95.7537%" y="133" width="0.8299%" height="23" fill="rgb(255,236,236)" fg:x="130835" fg:w="1134"/><text x="96.0037%" y="147.50"></text></g><g><title>runtime_bignum.nr:535:13::product_limbs.get(i).assert_max_bit_size(126) (2,016 gates, 1.48%)</title><rect x="96.5836%" y="157" width="1.4754%" height="23" fill="rgb(255,231,231)" fg:x="131969" fg:w="2016"/><text x="96.8336%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (2,016 gates, 1.48%)</title><rect x="96.5836%" y="133" width="1.4754%" height="23" fill="rgb(255,231,231)" fg:x="131969" fg:w="2016"/><text x="96.8336%" y="147.50"></text></g><g><title>opcode::blackbox::range (2,016 gates, 1.48%)</title><rect x="96.5836%" y="109" width="1.4754%" height="23" fill="rgb(255,231,231)" fg:x="131969" fg:w="2016"/><text x="96.8336%" y="123.50"></text></g><g><title>main.nr:568:27::accumulator.incomplete_add_with_hint(T.get(scalar.base4_slices[i]), transcript[8 + 5 * i]) (26,081 gates, 19.09%)</title><rect x="79.0174%" y="229" width="19.0878%" height="23" fill="rgb(255,184,184)" fg:x="107967" fg:w="26081"/><text x="79.2674%" y="243.50">main.nr:568:27::accumulator.in..</text></g><g><title>main.nr:212:9::BigNum::evaluate_quadratic_expression(
            [[lambda]],
            [[false]],
            [[x3, x1]],
            [[false, true]],
            [y3, y1],
            [false, false]
        ) (7,670 gates, 5.61%)</title><rect x="92.4918%" y="205" width="5.6134%" height="23" fill="rgb(255,214,214)" fg:x="126378" fg:w="7670"/><text x="92.7418%" y="219.50">main.nr..</text></g><g><title>lib.nr:241:9::Params::get_instance().evaluate_quadratic_expression(
            lhs_terms,
            lhs_flags,
            rhs_terms,
            rhs_flags,
            linear_terms,
            linear_flags
        ) (7,670 gates, 5.61%)</title><rect x="92.4918%" y="181" width="5.6134%" height="23" fill="rgb(255,214,214)" fg:x="126378" fg:w="7670"/><text x="92.7418%" y="195.50">lib.nr:..</text></g><g><title>runtime_bignum.nr:539:16::product_limbs.get(N + N - 2) == 0 (63 gates, 0.05%)</title><rect x="98.0591%" y="157" width="0.0461%" height="23" fill="rgb(255,246,246)" fg:x="133985" fg:w="63"/><text x="98.3091%" y="171.50"></text></g><g><title>opcode::arithmetic (63 gates, 0.05%)</title><rect x="98.0591%" y="133" width="0.0461%" height="23" fill="rgb(255,246,246)" fg:x="133985" fg:w="63"/><text x="98.3091%" y="147.50"></text></g><g><title>opcode::arithmetic (189 gates, 0.14%)</title><rect x="98.1052%" y="181" width="0.1383%" height="23" fill="rgb(255,244,244)" fg:x="134048" fg:w="189"/><text x="98.3552%" y="195.50"></text></g><g><title>main.nr:104:23::self.x[idx] (819 gates, 0.60%)</title><rect x="98.1052%" y="205" width="0.5994%" height="23" fill="rgb(255,238,238)" fg:x="134048" fg:w="819"/><text x="98.3552%" y="219.50"></text></g><g><title>opcode::memory::op (630 gates, 0.46%)</title><rect x="98.2435%" y="181" width="0.4611%" height="23" fill="rgb(255,239,239)" fg:x="134237" fg:w="630"/><text x="98.4935%" y="195.50"></text></g><g><title>opcode::arithmetic (189 gates, 0.14%)</title><rect x="98.7046%" y="181" width="0.1383%" height="23" fill="rgb(255,244,244)" fg:x="134867" fg:w="189"/><text x="98.9546%" y="195.50"></text></g><g><title>main.nr:568:64::T.get(scalar.base4_slices[i]) (1,638 gates, 1.20%)</title><rect x="98.1052%" y="229" width="1.1988%" height="23" fill="rgb(255,233,233)" fg:x="134048" fg:w="1638"/><text x="98.3552%" y="243.50"></text></g><g><title>main.nr:104:39::self.y[idx] (819 gates, 0.60%)</title><rect x="98.7046%" y="205" width="0.5994%" height="23" fill="rgb(255,238,238)" fg:x="134867" fg:w="819"/><text x="98.9546%" y="219.50"></text></g><g><title>opcode::memory::op (630 gates, 0.46%)</title><rect x="98.8429%" y="181" width="0.4611%" height="23" fill="rgb(255,239,239)" fg:x="135056" fg:w="630"/><text x="99.0929%" y="195.50"></text></g><g><title>runtime_bignum.nr:588:26::diff * (diff + modulus_mod_n) * (diff - modulus_mod_n) (2 gates, 0.00%)</title><rect x="99.3040%" y="157" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="135686" fg:w="2"/><text x="99.5540%" y="171.50"></text></g><g><title>opcode::arithmetic (2 gates, 0.00%)</title><rect x="99.3040%" y="133" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="135686" fg:w="2"/><text x="99.5540%" y="147.50"></text></g><g><title>runtime_bignum.nr:588:26::diff * (diff + modulus_mod_n) (3 gates, 0.00%)</title><rect x="99.3055%" y="157" width="0.0022%" height="23" fill="rgb(255,249,249)" fg:x="135688" fg:w="3"/><text x="99.5555%" y="171.50"></text></g><g><title>opcode::arithmetic (3 gates, 0.00%)</title><rect x="99.3055%" y="133" width="0.0022%" height="23" fill="rgb(255,249,249)" fg:x="135688" fg:w="3"/><text x="99.5555%" y="147.50"></text></g><g><title>main.nr:451:9::x1.assert_is_not_equal(x2) (8 gates, 0.01%)</title><rect x="99.3040%" y="205" width="0.0059%" height="23" fill="rgb(255,248,248)" fg:x="135686" fg:w="8"/><text x="99.5540%" y="219.50"></text></g><g><title>lib.nr:264:9::Params::get_instance().assert_is_not_equal(self, other) (8 gates, 0.01%)</title><rect x="99.3040%" y="181" width="0.0059%" height="23" fill="rgb(255,248,248)" fg:x="135686" fg:w="8"/><text x="99.5540%" y="195.50"></text></g><g><title>runtime_bignum.nr:589:16::target != 0 (3 gates, 0.00%)</title><rect x="99.3077%" y="157" width="0.0022%" height="23" fill="rgb(255,249,249)" fg:x="135691" fg:w="3"/><text x="99.5577%" y="171.50"></text></g><g><title>opcode::arithmetic (3 gates, 0.00%)</title><rect x="99.3077%" y="133" width="0.0022%" height="23" fill="rgb(255,249,249)" fg:x="135691" fg:w="3"/><text x="99.5577%" y="147.50"></text></g><g><title>runtime_bignum.nr:481:25::std::as_witness(new_term) (16 gates, 0.01%)</title><rect x="99.3099%" y="157" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="135694" fg:w="16"/><text x="99.5599%" y="171.50"></text></g><g><title>opcode::arithmetic (16 gates, 0.01%)</title><rect x="99.3099%" y="133" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="135694" fg:w="16"/><text x="99.5599%" y="147.50"></text></g><g><title>main.nr:454:9::BigNum::evaluate_quadratic_expression(
            [[lambda]],
            [[false]],
            [[x2, x1]],
            [[false, true]],
            [y2, y1],
            [false, false]
        ) (27 gates, 0.02%)</title><rect x="99.3099%" y="205" width="0.0198%" height="23" fill="rgb(255,247,247)" fg:x="135694" fg:w="27"/><text x="99.5599%" y="219.50"></text></g><g><title>lib.nr:241:9::Params::get_instance().evaluate_quadratic_expression(
            lhs_terms,
            lhs_flags,
            rhs_terms,
            rhs_flags,
            linear_terms,
            linear_flags
        ) (27 gates, 0.02%)</title><rect x="99.3099%" y="181" width="0.0198%" height="23" fill="rgb(255,247,247)" fg:x="135694" fg:w="27"/><text x="99.5599%" y="195.50"></text></g><g><title>runtime_bignum.nr:534:13::std::as_witness(product_limbs.get(i)) (11 gates, 0.01%)</title><rect x="99.3216%" y="157" width="0.0081%" height="23" fill="rgb(255,248,248)" fg:x="135710" fg:w="11"/><text x="99.5716%" y="171.50"></text></g><g><title>opcode::arithmetic (11 gates, 0.01%)</title><rect x="99.3216%" y="133" width="0.0081%" height="23" fill="rgb(255,248,248)" fg:x="135710" fg:w="11"/><text x="99.5716%" y="147.50"></text></g><g><title>runtime_bignum.nr:481:25::std::as_witness(new_term) (16 gates, 0.01%)</title><rect x="99.3296%" y="157" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="135721" fg:w="16"/><text x="99.5796%" y="171.50"></text></g><g><title>opcode::arithmetic (16 gates, 0.01%)</title><rect x="99.3296%" y="133" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="135721" fg:w="16"/><text x="99.5796%" y="147.50"></text></g><g><title>main.nr:464:9::BigNum::evaluate_quadratic_expression(
            [[lambda]],
            [[false]],
            [[lambda]],
            [[false]],
            [x3, x2, x1],
            [true, true, true]
        ) (28 gates, 0.02%)</title><rect x="99.3296%" y="205" width="0.0205%" height="23" fill="rgb(255,247,247)" fg:x="135721" fg:w="28"/><text x="99.5796%" y="219.50"></text></g><g><title>lib.nr:241:9::Params::get_instance().evaluate_quadratic_expression(
            lhs_terms,
            lhs_flags,
            rhs_terms,
            rhs_flags,
            linear_terms,
            linear_flags
        ) (28 gates, 0.02%)</title><rect x="99.3296%" y="181" width="0.0205%" height="23" fill="rgb(255,247,247)" fg:x="135721" fg:w="28"/><text x="99.5796%" y="195.50"></text></g><g><title>runtime_bignum.nr:534:13::std::as_witness(product_limbs.get(i)) (12 gates, 0.01%)</title><rect x="99.3413%" y="157" width="0.0088%" height="23" fill="rgb(255,248,248)" fg:x="135737" fg:w="12"/><text x="99.5913%" y="171.50"></text></g><g><title>opcode::arithmetic (12 gates, 0.01%)</title><rect x="99.3413%" y="133" width="0.0088%" height="23" fill="rgb(255,248,248)" fg:x="135737" fg:w="12"/><text x="99.5913%" y="147.50"></text></g><g><title>runtime_bignum.nr:481:25::std::as_witness(new_term) (48 gates, 0.04%)</title><rect x="99.3501%" y="157" width="0.0351%" height="23" fill="rgb(255,247,247)" fg:x="135749" fg:w="48"/><text x="99.6001%" y="171.50"></text></g><g><title>opcode::arithmetic (48 gates, 0.04%)</title><rect x="99.3501%" y="133" width="0.0351%" height="23" fill="rgb(255,247,247)" fg:x="135749" fg:w="48"/><text x="99.6001%" y="147.50"></text></g><g><title>main.nr:574:27::accumulator.incomplete_subtract_with_hint(input, transcript[4 + 5 * NScalarSlices]) (123 gates, 0.09%)</title><rect x="99.3040%" y="229" width="0.0900%" height="23" fill="rgb(255,245,245)" fg:x="135686" fg:w="123"/><text x="99.5540%" y="243.50"></text></g><g><title>main.nr:474:9::BigNum::evaluate_quadratic_expression(
            [[lambda]],
            [[false]],
            [[x3, x1]],
            [[false, true]],
            [y3, y1],
            [false, false]
        ) (60 gates, 0.04%)</title><rect x="99.3501%" y="205" width="0.0439%" height="23" fill="rgb(255,246,246)" fg:x="135749" fg:w="60"/><text x="99.6001%" y="219.50"></text></g><g><title>lib.nr:241:9::Params::get_instance().evaluate_quadratic_expression(
            lhs_terms,
            lhs_flags,
            rhs_terms,
            rhs_flags,
            linear_terms,
            linear_flags
        ) (60 gates, 0.04%)</title><rect x="99.3501%" y="181" width="0.0439%" height="23" fill="rgb(255,246,246)" fg:x="135749" fg:w="60"/><text x="99.6001%" y="195.50"></text></g><g><title>runtime_bignum.nr:534:13::std::as_witness(product_limbs.get(i)) (12 gates, 0.01%)</title><rect x="99.3852%" y="157" width="0.0088%" height="23" fill="rgb(255,248,248)" fg:x="135797" fg:w="12"/><text x="99.6352%" y="171.50"></text></g><g><title>opcode::arithmetic (12 gates, 0.01%)</title><rect x="99.3852%" y="133" width="0.0088%" height="23" fill="rgb(255,248,248)" fg:x="135797" fg:w="12"/><text x="99.6352%" y="147.50"></text></g><g><title>runtime_bignum.nr:234:13::self.limbs[i].assert_max_bit_size(120) (16 gates, 0.01%)</title><rect x="99.3940%" y="157" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="135809" fg:w="16"/><text x="99.6440%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (16 gates, 0.01%)</title><rect x="99.3940%" y="133" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="135809" fg:w="16"/><text x="99.6440%" y="147.50"></text></g><g><title>opcode::blackbox::range (16 gates, 0.01%)</title><rect x="99.3940%" y="109" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="135809" fg:w="16"/><text x="99.6440%" y="123.50"></text></g><g><title>main.nr:339:9::x3.validate_in_range() (17 gates, 0.01%)</title><rect x="99.3940%" y="205" width="0.0124%" height="23" fill="rgb(255,248,248)" fg:x="135809" fg:w="17"/><text x="99.6440%" y="219.50"></text></g><g><title>lib.nr:51:33::RuntimeBigNumTrait::validate_in_range(self) (17 gates, 0.01%)</title><rect x="99.3940%" y="181" width="0.0124%" height="23" fill="rgb(255,248,248)" fg:x="135809" fg:w="17"/><text x="99.6440%" y="195.50"></text></g><g><title>runtime_bignum.nr:237:9::self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32) (1 gates, 0.00%)</title><rect x="99.4057%" y="157" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="135825" fg:w="1"/><text x="99.6557%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (1 gates, 0.00%)</title><rect x="99.4057%" y="133" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="135825" fg:w="1"/><text x="99.6557%" y="147.50"></text></g><g><title>opcode::blackbox::range (1 gates, 0.00%)</title><rect x="99.4057%" y="109" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="135825" fg:w="1"/><text x="99.6557%" y="123.50"></text></g><g><title>runtime_bignum.nr:234:13::self.limbs[i].assert_max_bit_size(120) (16 gates, 0.01%)</title><rect x="99.4065%" y="157" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="135826" fg:w="16"/><text x="99.6565%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (16 gates, 0.01%)</title><rect x="99.4065%" y="133" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="135826" fg:w="16"/><text x="99.6565%" y="147.50"></text></g><g><title>opcode::blackbox::range (16 gates, 0.01%)</title><rect x="99.4065%" y="109" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="135826" fg:w="16"/><text x="99.6565%" y="123.50"></text></g><g><title>main.nr:340:9::y3.validate_in_range() (18 gates, 0.01%)</title><rect x="99.4065%" y="205" width="0.0132%" height="23" fill="rgb(255,248,248)" fg:x="135826" fg:w="18"/><text x="99.6565%" y="219.50"></text></g><g><title>lib.nr:51:33::RuntimeBigNumTrait::validate_in_range(self) (18 gates, 0.01%)</title><rect x="99.4065%" y="181" width="0.0132%" height="23" fill="rgb(255,248,248)" fg:x="135826" fg:w="18"/><text x="99.6565%" y="195.50"></text></g><g><title>runtime_bignum.nr:237:9::self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32) (2 gates, 0.00%)</title><rect x="99.4182%" y="157" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="135842" fg:w="2"/><text x="99.6682%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (2 gates, 0.00%)</title><rect x="99.4182%" y="133" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="135842" fg:w="2"/><text x="99.6682%" y="147.50"></text></g><g><title>opcode::blackbox::range (2 gates, 0.00%)</title><rect x="99.4182%" y="109" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="135842" fg:w="2"/><text x="99.6682%" y="123.50"></text></g><g><title>runtime_bignum.nr:234:13::self.limbs[i].assert_max_bit_size(120) (16 gates, 0.01%)</title><rect x="99.4196%" y="157" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="135844" fg:w="16"/><text x="99.6696%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (16 gates, 0.01%)</title><rect x="99.4196%" y="133" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="135844" fg:w="16"/><text x="99.6696%" y="147.50"></text></g><g><title>opcode::blackbox::range (16 gates, 0.01%)</title><rect x="99.4196%" y="109" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="135844" fg:w="16"/><text x="99.6696%" y="123.50"></text></g><g><title>main.nr:341:9::lambda.validate_in_range() (18 gates, 0.01%)</title><rect x="99.4196%" y="205" width="0.0132%" height="23" fill="rgb(255,248,248)" fg:x="135844" fg:w="18"/><text x="99.6696%" y="219.50"></text></g><g><title>lib.nr:51:33::RuntimeBigNumTrait::validate_in_range(self) (18 gates, 0.01%)</title><rect x="99.4196%" y="181" width="0.0132%" height="23" fill="rgb(255,248,248)" fg:x="135844" fg:w="18"/><text x="99.6696%" y="195.50"></text></g><g><title>runtime_bignum.nr:237:9::self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32) (2 gates, 0.00%)</title><rect x="99.4313%" y="157" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="135860" fg:w="2"/><text x="99.6813%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (2 gates, 0.00%)</title><rect x="99.4313%" y="133" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="135860" fg:w="2"/><text x="99.6813%" y="147.50"></text></g><g><title>opcode::blackbox::range (2 gates, 0.00%)</title><rect x="99.4313%" y="109" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="135860" fg:w="2"/><text x="99.6813%" y="123.50"></text></g><g><title>runtime_bignum.nr:694:62::self.__sub_with_flags(lhs, rhs) (9 gates, 0.01%)</title><rect x="99.4328%" y="109" width="0.0066%" height="23" fill="rgb(255,248,248)" fg:x="135862" fg:w="9"/><text x="99.6828%" y="123.50"></text></g><g><title>opcode::blackbox::range (9 gates, 0.01%)</title><rect x="99.4328%" y="85" width="0.0066%" height="23" fill="rgb(255,248,248)" fg:x="135862" fg:w="9"/><text x="99.6828%" y="99.50"></text></g><g><title>runtime_bignum.nr:234:13::self.limbs[i].assert_max_bit_size(120) (15 gates, 0.01%)</title><rect x="99.4394%" y="85" width="0.0110%" height="23" fill="rgb(255,248,248)" fg:x="135871" fg:w="15"/><text x="99.6894%" y="99.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (15 gates, 0.01%)</title><rect x="99.4394%" y="61" width="0.0110%" height="23" fill="rgb(255,248,248)" fg:x="135871" fg:w="15"/><text x="99.6894%" y="75.50"></text></g><g><title>opcode::blackbox::range (15 gates, 0.01%)</title><rect x="99.4394%" y="37" width="0.0110%" height="23" fill="rgb(255,248,248)" fg:x="135871" fg:w="15"/><text x="99.6894%" y="51.50"></text></g><g><title>runtime_bignum.nr:695:9::result.validate_in_range() (16 gates, 0.01%)</title><rect x="99.4394%" y="109" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="135871" fg:w="16"/><text x="99.6894%" y="123.50"></text></g><g><title>runtime_bignum.nr:237:9::self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32) (1 gates, 0.00%)</title><rect x="99.4504%" y="85" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="135886" fg:w="1"/><text x="99.7004%" y="99.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (1 gates, 0.00%)</title><rect x="99.4504%" y="61" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="135886" fg:w="1"/><text x="99.7004%" y="75.50"></text></g><g><title>opcode::blackbox::range (1 gates, 0.00%)</title><rect x="99.4504%" y="37" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="135886" fg:w="1"/><text x="99.7004%" y="51.50"></text></g><g><title>runtime_bignum.nr:707:16::result_limb == 0 (2 gates, 0.00%)</title><rect x="99.4511%" y="109" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="135887" fg:w="2"/><text x="99.7011%" y="123.50"></text></g><g><title>opcode::arithmetic (2 gates, 0.00%)</title><rect x="99.4511%" y="85" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="135887" fg:w="2"/><text x="99.7011%" y="99.50"></text></g><g><title>runtime_bignum.nr:712:20::result_limb == 0 (6 gates, 0.00%)</title><rect x="99.4526%" y="109" width="0.0044%" height="23" fill="rgb(255,249,249)" fg:x="135889" fg:w="6"/><text x="99.7026%" y="123.50"></text></g><g><title>opcode::arithmetic (6 gates, 0.00%)</title><rect x="99.4526%" y="85" width="0.0044%" height="23" fill="rgb(255,249,249)" fg:x="135889" fg:w="6"/><text x="99.7026%" y="99.50"></text></g><g><title>runtime_bignum.nr:593:20::self.sub(lhs, rhs) (35 gates, 0.03%)</title><rect x="99.4328%" y="133" width="0.0256%" height="23" fill="rgb(255,247,247)" fg:x="135862" fg:w="35"/><text x="99.6828%" y="147.50"></text></g><g><title>runtime_bignum.nr:718:16::result_limb == 0 (2 gates, 0.00%)</title><rect x="99.4570%" y="109" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="135895" fg:w="2"/><text x="99.7070%" y="123.50"></text></g><g><title>opcode::arithmetic (2 gates, 0.00%)</title><rect x="99.4570%" y="85" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="135895" fg:w="2"/><text x="99.7070%" y="99.50"></text></g><g><title>runtime_bignum.nr:600:32::is_equal_modulus &amp; (diff.limbs[i] == self.modulus[i]) (2 gates, 0.00%)</title><rect x="99.4584%" y="133" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="135897" fg:w="2"/><text x="99.7084%" y="147.50"></text></g><g><title>opcode::arithmetic (2 gates, 0.00%)</title><rect x="99.4584%" y="109" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="135897" fg:w="2"/><text x="99.7084%" y="123.50"></text></g><g><title>runtime_bignum.nr:600:52::diff.limbs[i] == self.modulus[i] (12 gates, 0.01%)</title><rect x="99.4599%" y="133" width="0.0088%" height="23" fill="rgb(255,248,248)" fg:x="135899" fg:w="12"/><text x="99.7099%" y="147.50"></text></g><g><title>opcode::arithmetic (12 gates, 0.01%)</title><rect x="99.4599%" y="109" width="0.0088%" height="23" fill="rgb(255,248,248)" fg:x="135899" fg:w="12"/><text x="99.7099%" y="123.50"></text></g><g><title>runtime_bignum.nr:601:29::is_equal_zero &amp; (diff.limbs[i] == 0) (2 gates, 0.00%)</title><rect x="99.4687%" y="133" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="135911" fg:w="2"/><text x="99.7187%" y="147.50"></text></g><g><title>opcode::arithmetic (2 gates, 0.00%)</title><rect x="99.4687%" y="109" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="135911" fg:w="2"/><text x="99.7187%" y="123.50"></text></g><g><title>runtime_bignum.nr:601:46::diff.limbs[i] == 0 (8 gates, 0.01%)</title><rect x="99.4701%" y="133" width="0.0059%" height="23" fill="rgb(255,248,248)" fg:x="135913" fg:w="8"/><text x="99.7201%" y="147.50"></text></g><g><title>opcode::arithmetic (8 gates, 0.01%)</title><rect x="99.4701%" y="109" width="0.0059%" height="23" fill="rgb(255,248,248)" fg:x="135913" fg:w="8"/><text x="99.7201%" y="123.50"></text></g><g><title>main.nr:343:33::x2.eq(x1) (61 gates, 0.04%)</title><rect x="99.4328%" y="205" width="0.0446%" height="23" fill="rgb(255,246,246)" fg:x="135862" fg:w="61"/><text x="99.6828%" y="219.50"></text></g><g><title>lib.nr:59:40::self == other (61 gates, 0.04%)</title><rect x="99.4328%" y="181" width="0.0446%" height="23" fill="rgb(255,246,246)" fg:x="135862" fg:w="61"/><text x="99.6828%" y="195.50"></text></g><g><title>lib.nr:328:9::bn.eq(self, other) (61 gates, 0.04%)</title><rect x="99.4328%" y="157" width="0.0446%" height="23" fill="rgb(255,246,246)" fg:x="135862" fg:w="61"/><text x="99.6828%" y="171.50"></text></g><g><title>runtime_bignum.nr:603:9::is_equal_modulus | is_equal_zero (2 gates, 0.00%)</title><rect x="99.4760%" y="133" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="135921" fg:w="2"/><text x="99.7260%" y="147.50"></text></g><g><title>opcode::arithmetic (2 gates, 0.00%)</title><rect x="99.4760%" y="109" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="135921" fg:w="2"/><text x="99.7260%" y="123.50"></text></g><g><title>runtime_bignum.nr:694:62::self.__sub_with_flags(lhs, rhs) (9 gates, 0.01%)</title><rect x="99.4774%" y="109" width="0.0066%" height="23" fill="rgb(255,248,248)" fg:x="135923" fg:w="9"/><text x="99.7274%" y="123.50"></text></g><g><title>opcode::blackbox::range (9 gates, 0.01%)</title><rect x="99.4774%" y="85" width="0.0066%" height="23" fill="rgb(255,248,248)" fg:x="135923" fg:w="9"/><text x="99.7274%" y="99.50"></text></g><g><title>runtime_bignum.nr:234:13::self.limbs[i].assert_max_bit_size(120) (16 gates, 0.01%)</title><rect x="99.4840%" y="85" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="135932" fg:w="16"/><text x="99.7340%" y="99.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (16 gates, 0.01%)</title><rect x="99.4840%" y="61" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="135932" fg:w="16"/><text x="99.7340%" y="75.50"></text></g><g><title>opcode::blackbox::range (16 gates, 0.01%)</title><rect x="99.4840%" y="37" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="135932" fg:w="16"/><text x="99.7340%" y="51.50"></text></g><g><title>runtime_bignum.nr:695:9::result.validate_in_range() (17 gates, 0.01%)</title><rect x="99.4840%" y="109" width="0.0124%" height="23" fill="rgb(255,248,248)" fg:x="135932" fg:w="17"/><text x="99.7340%" y="123.50"></text></g><g><title>runtime_bignum.nr:237:9::self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32) (1 gates, 0.00%)</title><rect x="99.4957%" y="85" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="135948" fg:w="1"/><text x="99.7457%" y="99.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (1 gates, 0.00%)</title><rect x="99.4957%" y="61" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="135948" fg:w="1"/><text x="99.7457%" y="75.50"></text></g><g><title>opcode::blackbox::range (1 gates, 0.00%)</title><rect x="99.4957%" y="37" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="135948" fg:w="1"/><text x="99.7457%" y="51.50"></text></g><g><title>runtime_bignum.nr:707:16::result_limb == 0 (2 gates, 0.00%)</title><rect x="99.4965%" y="109" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="135949" fg:w="2"/><text x="99.7465%" y="123.50"></text></g><g><title>opcode::arithmetic (2 gates, 0.00%)</title><rect x="99.4965%" y="85" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="135949" fg:w="2"/><text x="99.7465%" y="99.50"></text></g><g><title>runtime_bignum.nr:712:20::result_limb == 0 (6 gates, 0.00%)</title><rect x="99.4979%" y="109" width="0.0044%" height="23" fill="rgb(255,249,249)" fg:x="135951" fg:w="6"/><text x="99.7479%" y="123.50"></text></g><g><title>opcode::arithmetic (6 gates, 0.00%)</title><rect x="99.4979%" y="85" width="0.0044%" height="23" fill="rgb(255,249,249)" fg:x="135951" fg:w="6"/><text x="99.7479%" y="99.50"></text></g><g><title>runtime_bignum.nr:593:20::self.sub(lhs, rhs) (36 gates, 0.03%)</title><rect x="99.4774%" y="133" width="0.0263%" height="23" fill="rgb(255,247,247)" fg:x="135923" fg:w="36"/><text x="99.7274%" y="147.50"></text></g><g><title>runtime_bignum.nr:718:16::result_limb == 0 (2 gates, 0.00%)</title><rect x="99.5023%" y="109" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="135957" fg:w="2"/><text x="99.7523%" y="123.50"></text></g><g><title>opcode::arithmetic (2 gates, 0.00%)</title><rect x="99.5023%" y="85" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="135957" fg:w="2"/><text x="99.7523%" y="99.50"></text></g><g><title>runtime_bignum.nr:600:32::is_equal_modulus &amp; (diff.limbs[i] == self.modulus[i]) (2 gates, 0.00%)</title><rect x="99.5038%" y="133" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="135959" fg:w="2"/><text x="99.7538%" y="147.50"></text></g><g><title>opcode::arithmetic (2 gates, 0.00%)</title><rect x="99.5038%" y="109" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="135959" fg:w="2"/><text x="99.7538%" y="123.50"></text></g><g><title>runtime_bignum.nr:600:52::diff.limbs[i] == self.modulus[i] (12 gates, 0.01%)</title><rect x="99.5053%" y="133" width="0.0088%" height="23" fill="rgb(255,248,248)" fg:x="135961" fg:w="12"/><text x="99.7553%" y="147.50"></text></g><g><title>opcode::arithmetic (12 gates, 0.01%)</title><rect x="99.5053%" y="109" width="0.0088%" height="23" fill="rgb(255,248,248)" fg:x="135961" fg:w="12"/><text x="99.7553%" y="123.50"></text></g><g><title>runtime_bignum.nr:601:29::is_equal_zero &amp; (diff.limbs[i] == 0) (2 gates, 0.00%)</title><rect x="99.5140%" y="133" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="135973" fg:w="2"/><text x="99.7640%" y="147.50"></text></g><g><title>opcode::arithmetic (2 gates, 0.00%)</title><rect x="99.5140%" y="109" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="135973" fg:w="2"/><text x="99.7640%" y="123.50"></text></g><g><title>runtime_bignum.nr:601:46::diff.limbs[i] == 0 (8 gates, 0.01%)</title><rect x="99.5155%" y="133" width="0.0059%" height="23" fill="rgb(255,248,248)" fg:x="135975" fg:w="8"/><text x="99.7655%" y="147.50"></text></g><g><title>opcode::arithmetic (8 gates, 0.01%)</title><rect x="99.5155%" y="109" width="0.0059%" height="23" fill="rgb(255,248,248)" fg:x="135975" fg:w="8"/><text x="99.7655%" y="123.50"></text></g><g><title>main.nr:344:33::y2.eq(y1) (62 gates, 0.05%)</title><rect x="99.4774%" y="205" width="0.0454%" height="23" fill="rgb(255,246,246)" fg:x="135923" fg:w="62"/><text x="99.7274%" y="219.50"></text></g><g><title>lib.nr:59:40::self == other (62 gates, 0.05%)</title><rect x="99.4774%" y="181" width="0.0454%" height="23" fill="rgb(255,246,246)" fg:x="135923" fg:w="62"/><text x="99.7274%" y="195.50"></text></g><g><title>lib.nr:328:9::bn.eq(self, other) (62 gates, 0.05%)</title><rect x="99.4774%" y="157" width="0.0454%" height="23" fill="rgb(255,246,246)" fg:x="135923" fg:w="62"/><text x="99.7274%" y="171.50"></text></g><g><title>runtime_bignum.nr:603:9::is_equal_modulus | is_equal_zero (2 gates, 0.00%)</title><rect x="99.5214%" y="133" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="135983" fg:w="2"/><text x="99.7714%" y="147.50"></text></g><g><title>opcode::arithmetic (2 gates, 0.00%)</title><rect x="99.5214%" y="109" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="135983" fg:w="2"/><text x="99.7714%" y="123.50"></text></g><g><title>main.nr:346:35::x_equal_predicate &amp; !y_equal_predicate (2 gates, 0.00%)</title><rect x="99.5228%" y="205" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="135985" fg:w="2"/><text x="99.7728%" y="219.50"></text></g><g><title>opcode::arithmetic (2 gates, 0.00%)</title><rect x="99.5228%" y="181" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="135985" fg:w="2"/><text x="99.7728%" y="195.50"></text></g><g><title>main.nr:351:14::BigNum::conditional_select(x1, BigNum::new(), evaluate_group_operation_predicate) (1 gates, 0.00%)</title><rect x="99.5243%" y="205" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="135987" fg:w="1"/><text x="99.7743%" y="219.50"></text></g><g><title>lib.nr:50:76::RuntimeBigNumTrait::conditional_select(lhs, rhs, predicate) (1 gates, 0.00%)</title><rect x="99.5243%" y="181" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="135987" fg:w="1"/><text x="99.7743%" y="195.50"></text></g><g><title>runtime_bignum.nr:224:31::(lhs.limbs[i] - rhs.limbs[i]) * predicate as Field (1 gates, 0.00%)</title><rect x="99.5243%" y="157" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="135987" fg:w="1"/><text x="99.7743%" y="171.50"></text></g><g><title>opcode::arithmetic (1 gates, 0.00%)</title><rect x="99.5243%" y="133" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="135987" fg:w="1"/><text x="99.7743%" y="147.50"></text></g><g><title>main.nr:362:32::BigNum::conditional_select(y1, x2.neg(), double_predicate) (4 gates, 0.00%)</title><rect x="99.5250%" y="205" width="0.0029%" height="23" fill="rgb(255,249,249)" fg:x="135988" fg:w="4"/><text x="99.7750%" y="219.50"></text></g><g><title>lib.nr:50:76::RuntimeBigNumTrait::conditional_select(lhs, rhs, predicate) (4 gates, 0.00%)</title><rect x="99.5250%" y="181" width="0.0029%" height="23" fill="rgb(255,249,249)" fg:x="135988" fg:w="4"/><text x="99.7750%" y="195.50"></text></g><g><title>runtime_bignum.nr:224:31::(lhs.limbs[i] - rhs.limbs[i]) * predicate as Field (4 gates, 0.00%)</title><rect x="99.5250%" y="157" width="0.0029%" height="23" fill="rgb(255,249,249)" fg:x="135988" fg:w="4"/><text x="99.7750%" y="171.50"></text></g><g><title>opcode::arithmetic (4 gates, 0.00%)</title><rect x="99.5250%" y="133" width="0.0029%" height="23" fill="rgb(255,249,249)" fg:x="135988" fg:w="4"/><text x="99.7750%" y="147.50"></text></g><g><title>runtime_bignum.nr:608:38::self.__neg_with_flags(val) (4 gates, 0.00%)</title><rect x="99.5279%" y="157" width="0.0029%" height="23" fill="rgb(255,249,249)" fg:x="135992" fg:w="4"/><text x="99.7779%" y="171.50"></text></g><g><title>opcode::blackbox::range (4 gates, 0.00%)</title><rect x="99.5279%" y="133" width="0.0029%" height="23" fill="rgb(255,249,249)" fg:x="135992" fg:w="4"/><text x="99.7779%" y="147.50"></text></g><g><title>runtime_bignum.nr:234:13::self.limbs[i].assert_max_bit_size(120) (16 gates, 0.01%)</title><rect x="99.5309%" y="133" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="135996" fg:w="16"/><text x="99.7809%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (16 gates, 0.01%)</title><rect x="99.5309%" y="109" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="135996" fg:w="16"/><text x="99.7809%" y="123.50"></text></g><g><title>opcode::blackbox::range (16 gates, 0.01%)</title><rect x="99.5309%" y="85" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="135996" fg:w="16"/><text x="99.7809%" y="99.50"></text></g><g><title>runtime_bignum.nr:609:9::result.validate_in_range() (18 gates, 0.01%)</title><rect x="99.5309%" y="157" width="0.0132%" height="23" fill="rgb(255,248,248)" fg:x="135996" fg:w="18"/><text x="99.7809%" y="171.50"></text></g><g><title>runtime_bignum.nr:237:9::self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32) (2 gates, 0.00%)</title><rect x="99.5426%" y="133" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="136012" fg:w="2"/><text x="99.7926%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (2 gates, 0.00%)</title><rect x="99.5426%" y="109" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="136012" fg:w="2"/><text x="99.7926%" y="123.50"></text></g><g><title>opcode::blackbox::range (2 gates, 0.00%)</title><rect x="99.5426%" y="85" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="136012" fg:w="2"/><text x="99.7926%" y="99.50"></text></g><g><title>runtime_bignum.nr:613:16::result_limb == 0 (1 gates, 0.00%)</title><rect x="99.5440%" y="157" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="136014" fg:w="1"/><text x="99.7940%" y="171.50"></text></g><g><title>opcode::arithmetic (1 gates, 0.00%)</title><rect x="99.5440%" y="133" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="136014" fg:w="1"/><text x="99.7940%" y="147.50"></text></g><g><title>runtime_bignum.nr:617:20::result_limb == 0 (2 gates, 0.00%)</title><rect x="99.5448%" y="157" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="136015" fg:w="2"/><text x="99.7948%" y="171.50"></text></g><g><title>opcode::arithmetic (2 gates, 0.00%)</title><rect x="99.5448%" y="133" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="136015" fg:w="2"/><text x="99.7948%" y="147.50"></text></g><g><title>main.nr:362:63::x2.neg() (26 gates, 0.02%)</title><rect x="99.5279%" y="205" width="0.0190%" height="23" fill="rgb(255,247,247)" fg:x="135992" fg:w="26"/><text x="99.7779%" y="219.50"></text></g><g><title>lib.nr:268:9::Params::get_instance().neg(self) (26 gates, 0.02%)</title><rect x="99.5279%" y="181" width="0.0190%" height="23" fill="rgb(255,247,247)" fg:x="135992" fg:w="26"/><text x="99.7779%" y="195.50"></text></g><g><title>runtime_bignum.nr:620:16::result_limb == 0 (1 gates, 0.00%)</title><rect x="99.5462%" y="157" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="136017" fg:w="1"/><text x="99.7962%" y="171.50"></text></g><g><title>opcode::arithmetic (1 gates, 0.00%)</title><rect x="99.5462%" y="133" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="136017" fg:w="1"/><text x="99.7962%" y="147.50"></text></g><g><title>main.nr:363:32::BigNum::conditional_select(y1, x1, double_predicate) (12 gates, 0.01%)</title><rect x="99.5470%" y="205" width="0.0088%" height="23" fill="rgb(255,248,248)" fg:x="136018" fg:w="12"/><text x="99.7970%" y="219.50"></text></g><g><title>lib.nr:50:76::RuntimeBigNumTrait::conditional_select(lhs, rhs, predicate) (12 gates, 0.01%)</title><rect x="99.5470%" y="181" width="0.0088%" height="23" fill="rgb(255,248,248)" fg:x="136018" fg:w="12"/><text x="99.7970%" y="195.50"></text></g><g><title>runtime_bignum.nr:224:31::(lhs.limbs[i] - rhs.limbs[i]) * predicate as Field (12 gates, 0.01%)</title><rect x="99.5470%" y="157" width="0.0088%" height="23" fill="rgb(255,248,248)" fg:x="136018" fg:w="12"/><text x="99.7970%" y="171.50"></text></g><g><title>opcode::arithmetic (12 gates, 0.01%)</title><rect x="99.5470%" y="133" width="0.0088%" height="23" fill="rgb(255,248,248)" fg:x="136018" fg:w="12"/><text x="99.7970%" y="147.50"></text></g><g><title>main.nr:364:32::BigNum::conditional_select(x1, BigNum::one(), double_predicate) (4 gates, 0.00%)</title><rect x="99.5558%" y="205" width="0.0029%" height="23" fill="rgb(255,249,249)" fg:x="136030" fg:w="4"/><text x="99.8058%" y="219.50"></text></g><g><title>lib.nr:50:76::RuntimeBigNumTrait::conditional_select(lhs, rhs, predicate) (4 gates, 0.00%)</title><rect x="99.5558%" y="181" width="0.0029%" height="23" fill="rgb(255,249,249)" fg:x="136030" fg:w="4"/><text x="99.8058%" y="195.50"></text></g><g><title>runtime_bignum.nr:224:31::(lhs.limbs[i] - rhs.limbs[i]) * predicate as Field (4 gates, 0.00%)</title><rect x="99.5558%" y="157" width="0.0029%" height="23" fill="rgb(255,249,249)" fg:x="136030" fg:w="4"/><text x="99.8058%" y="171.50"></text></g><g><title>opcode::arithmetic (4 gates, 0.00%)</title><rect x="99.5558%" y="133" width="0.0029%" height="23" fill="rgb(255,249,249)" fg:x="136030" fg:w="4"/><text x="99.8058%" y="147.50"></text></g><g><title>main.nr:365:32::BigNum::conditional_select(x1, y2, double_predicate) (1 gates, 0.00%)</title><rect x="99.5587%" y="205" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="136034" fg:w="1"/><text x="99.8087%" y="219.50"></text></g><g><title>lib.nr:50:76::RuntimeBigNumTrait::conditional_select(lhs, rhs, predicate) (1 gates, 0.00%)</title><rect x="99.5587%" y="181" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="136034" fg:w="1"/><text x="99.8087%" y="195.50"></text></g><g><title>runtime_bignum.nr:224:31::(lhs.limbs[i] - rhs.limbs[i]) * predicate as Field (1 gates, 0.00%)</title><rect x="99.5587%" y="157" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="136034" fg:w="1"/><text x="99.8087%" y="171.50"></text></g><g><title>opcode::arithmetic (1 gates, 0.00%)</title><rect x="99.5587%" y="133" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="136034" fg:w="1"/><text x="99.8087%" y="147.50"></text></g><g><title>main.nr:366:32::BigNum::conditional_select(x1, y1, double_predicate) (4 gates, 0.00%)</title><rect x="99.5594%" y="205" width="0.0029%" height="23" fill="rgb(255,249,249)" fg:x="136035" fg:w="4"/><text x="99.8094%" y="219.50"></text></g><g><title>lib.nr:50:76::RuntimeBigNumTrait::conditional_select(lhs, rhs, predicate) (4 gates, 0.00%)</title><rect x="99.5594%" y="181" width="0.0029%" height="23" fill="rgb(255,249,249)" fg:x="136035" fg:w="4"/><text x="99.8094%" y="195.50"></text></g><g><title>runtime_bignum.nr:224:31::(lhs.limbs[i] - rhs.limbs[i]) * predicate as Field (4 gates, 0.00%)</title><rect x="99.5594%" y="157" width="0.0029%" height="23" fill="rgb(255,249,249)" fg:x="136035" fg:w="4"/><text x="99.8094%" y="171.50"></text></g><g><title>opcode::arithmetic (4 gates, 0.00%)</title><rect x="99.5594%" y="133" width="0.0029%" height="23" fill="rgb(255,249,249)" fg:x="136035" fg:w="4"/><text x="99.8094%" y="147.50"></text></g><g><title>main.nr:367:32::BigNum::conditional_select(x1, BigNum::new(), double_predicate) (1 gates, 0.00%)</title><rect x="99.5623%" y="205" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="136039" fg:w="1"/><text x="99.8123%" y="219.50"></text></g><g><title>lib.nr:50:76::RuntimeBigNumTrait::conditional_select(lhs, rhs, predicate) (1 gates, 0.00%)</title><rect x="99.5623%" y="181" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="136039" fg:w="1"/><text x="99.8123%" y="195.50"></text></g><g><title>runtime_bignum.nr:224:31::(lhs.limbs[i] - rhs.limbs[i]) * predicate as Field (1 gates, 0.00%)</title><rect x="99.5623%" y="157" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="136039" fg:w="1"/><text x="99.8123%" y="171.50"></text></g><g><title>opcode::arithmetic (1 gates, 0.00%)</title><rect x="99.5623%" y="133" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="136039" fg:w="1"/><text x="99.8123%" y="147.50"></text></g><g><title>runtime_bignum.nr:255:13::self.limbs[i].assert_max_bit_size(120) (16 gates, 0.01%)</title><rect x="99.5631%" y="133" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="136040" fg:w="16"/><text x="99.8131%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (16 gates, 0.01%)</title><rect x="99.5631%" y="109" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="136040" fg:w="16"/><text x="99.8131%" y="123.50"></text></g><g><title>opcode::blackbox::range (16 gates, 0.01%)</title><rect x="99.5631%" y="85" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="136040" fg:w="16"/><text x="99.8131%" y="99.50"></text></g><g><title>runtime_bignum.nr:424:9::quotient.validate_quotient_in_range() (19 gates, 0.01%)</title><rect x="99.5631%" y="157" width="0.0139%" height="23" fill="rgb(255,248,248)" fg:x="136040" fg:w="19"/><text x="99.8131%" y="171.50"></text></g><g><title>runtime_bignum.nr:259:9::self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32) (3 gates, 0.00%)</title><rect x="99.5748%" y="133" width="0.0022%" height="23" fill="rgb(255,249,249)" fg:x="136056" fg:w="3"/><text x="99.8248%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (3 gates, 0.00%)</title><rect x="99.5748%" y="109" width="0.0022%" height="23" fill="rgb(255,249,249)" fg:x="136056" fg:w="3"/><text x="99.8248%" y="123.50"></text></g><g><title>opcode::blackbox::range (3 gates, 0.00%)</title><rect x="99.5748%" y="85" width="0.0022%" height="23" fill="rgb(255,249,249)" fg:x="136056" fg:w="3"/><text x="99.8248%" y="99.50"></text></g><g><title>runtime_bignum.nr:480:40::t0[k][i] * t1[k][j] (17 gates, 0.01%)</title><rect x="99.5770%" y="157" width="0.0124%" height="23" fill="rgb(255,248,248)" fg:x="136059" fg:w="17"/><text x="99.8270%" y="171.50"></text></g><g><title>opcode::arithmetic (17 gates, 0.01%)</title><rect x="99.5770%" y="133" width="0.0124%" height="23" fill="rgb(255,248,248)" fg:x="136059" fg:w="17"/><text x="99.8270%" y="147.50"></text></g><g><title>runtime_bignum.nr:481:25::std::as_witness(new_term) (16 gates, 0.01%)</title><rect x="99.5894%" y="157" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="136076" fg:w="16"/><text x="99.8394%" y="171.50"></text></g><g><title>opcode::arithmetic (16 gates, 0.01%)</title><rect x="99.5894%" y="133" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="136076" fg:w="16"/><text x="99.8394%" y="147.50"></text></g><g><title>runtime_bignum.nr:484:57::t0[k][i] * t1[k][j] (22 gates, 0.02%)</title><rect x="99.6011%" y="157" width="0.0161%" height="23" fill="rgb(255,248,248)" fg:x="136092" fg:w="22"/><text x="99.8511%" y="171.50"></text></g><g><title>opcode::arithmetic (22 gates, 0.02%)</title><rect x="99.6011%" y="133" width="0.0161%" height="23" fill="rgb(255,248,248)" fg:x="136092" fg:w="22"/><text x="99.8511%" y="147.50"></text></g><g><title>runtime_bignum.nr:508:9::borrow_flags.get(0).assert_max_bit_size(1) (1 gates, 0.00%)</title><rect x="99.6172%" y="157" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="136114" fg:w="1"/><text x="99.8672%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (1 gates, 0.00%)</title><rect x="99.6172%" y="133" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="136114" fg:w="1"/><text x="99.8672%" y="147.50"></text></g><g><title>opcode::blackbox::range (1 gates, 0.00%)</title><rect x="99.6172%" y="109" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="136114" fg:w="1"/><text x="99.8672%" y="123.50"></text></g><g><title>runtime_bignum.nr:511:13::borrow_flags.get(i).assert_max_bit_size(1) (5 gates, 0.00%)</title><rect x="99.6180%" y="157" width="0.0037%" height="23" fill="rgb(255,249,249)" fg:x="136115" fg:w="5"/><text x="99.8680%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (5 gates, 0.00%)</title><rect x="99.6180%" y="133" width="0.0037%" height="23" fill="rgb(255,249,249)" fg:x="136115" fg:w="5"/><text x="99.8680%" y="147.50"></text></g><g><title>opcode::blackbox::range (5 gates, 0.00%)</title><rect x="99.6180%" y="109" width="0.0037%" height="23" fill="rgb(255,249,249)" fg:x="136115" fg:w="5"/><text x="99.8680%" y="123.50"></text></g><g><title>runtime_bignum.nr:534:13::std::as_witness(product_limbs.get(i)) (35 gates, 0.03%)</title><rect x="99.6216%" y="157" width="0.0256%" height="23" fill="rgb(255,247,247)" fg:x="136120" fg:w="35"/><text x="99.8716%" y="171.50"></text></g><g><title>opcode::arithmetic (35 gates, 0.03%)</title><rect x="99.6216%" y="133" width="0.0256%" height="23" fill="rgb(255,247,247)" fg:x="136120" fg:w="35"/><text x="99.8716%" y="147.50"></text></g><g><title>runtime_bignum.nr:535:13::product_limbs.get(i).assert_max_bit_size(126) (31 gates, 0.02%)</title><rect x="99.6472%" y="157" width="0.0227%" height="23" fill="rgb(255,247,247)" fg:x="136155" fg:w="31"/><text x="99.8972%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (31 gates, 0.02%)</title><rect x="99.6472%" y="133" width="0.0227%" height="23" fill="rgb(255,247,247)" fg:x="136155" fg:w="31"/><text x="99.8972%" y="147.50"></text></g><g><title>opcode::blackbox::range (31 gates, 0.02%)</title><rect x="99.6472%" y="109" width="0.0227%" height="23" fill="rgb(255,247,247)" fg:x="136155" fg:w="31"/><text x="99.8972%" y="123.50"></text></g><g><title>main.nr:377:9::BigNum::evaluate_quadratic_expression(
            [[lambda], [product_2_lhs_t0]],
            [[true], [false]],
            [
            [product_1_rhs_t0, product_1_rhs_t1, BigNum::new()], [product_2_rhs_t0, product_2_rhs_t1, product_2_rhs_t2]
        ],
            [[false, false, false], [false, false, false]],
            [a_term],
            [false]
        ) (148 gates, 0.11%)</title><rect x="99.5631%" y="205" width="0.1083%" height="23" fill="rgb(255,245,245)" fg:x="136040" fg:w="148"/><text x="99.8131%" y="219.50"></text></g><g><title>lib.nr:241:9::Params::get_instance().evaluate_quadratic_expression(
            lhs_terms,
            lhs_flags,
            rhs_terms,
            rhs_flags,
            linear_terms,
            linear_flags
        ) (148 gates, 0.11%)</title><rect x="99.5631%" y="181" width="0.1083%" height="23" fill="rgb(255,245,245)" fg:x="136040" fg:w="148"/><text x="99.8131%" y="195.50"></text></g><g><title>runtime_bignum.nr:539:16::product_limbs.get(N + N - 2) == 0 (2 gates, 0.00%)</title><rect x="99.6699%" y="157" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="136186" fg:w="2"/><text x="99.9199%" y="171.50"></text></g><g><title>opcode::arithmetic (2 gates, 0.00%)</title><rect x="99.6699%" y="133" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="136186" fg:w="2"/><text x="99.9199%" y="147.50"></text></g><g><title>runtime_bignum.nr:255:13::self.limbs[i].assert_max_bit_size(120) (15 gates, 0.01%)</title><rect x="99.6714%" y="133" width="0.0110%" height="23" fill="rgb(255,248,248)" fg:x="136188" fg:w="15"/><text x="99.9214%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (15 gates, 0.01%)</title><rect x="99.6714%" y="109" width="0.0110%" height="23" fill="rgb(255,248,248)" fg:x="136188" fg:w="15"/><text x="99.9214%" y="123.50"></text></g><g><title>opcode::blackbox::range (15 gates, 0.01%)</title><rect x="99.6714%" y="85" width="0.0110%" height="23" fill="rgb(255,248,248)" fg:x="136188" fg:w="15"/><text x="99.9214%" y="99.50"></text></g><g><title>runtime_bignum.nr:424:9::quotient.validate_quotient_in_range() (16 gates, 0.01%)</title><rect x="99.6714%" y="157" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="136188" fg:w="16"/><text x="99.9214%" y="171.50"></text></g><g><title>runtime_bignum.nr:259:9::self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32) (1 gates, 0.00%)</title><rect x="99.6824%" y="133" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="136203" fg:w="1"/><text x="99.9324%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (1 gates, 0.00%)</title><rect x="99.6824%" y="109" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="136203" fg:w="1"/><text x="99.9324%" y="123.50"></text></g><g><title>opcode::blackbox::range (1 gates, 0.00%)</title><rect x="99.6824%" y="85" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="136203" fg:w="1"/><text x="99.9324%" y="99.50"></text></g><g><title>runtime_bignum.nr:481:25::std::as_witness(new_term) (16 gates, 0.01%)</title><rect x="99.6831%" y="157" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="136204" fg:w="16"/><text x="99.9331%" y="171.50"></text></g><g><title>opcode::arithmetic (16 gates, 0.01%)</title><rect x="99.6831%" y="133" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="136204" fg:w="16"/><text x="99.9331%" y="147.50"></text></g><g><title>runtime_bignum.nr:508:9::borrow_flags.get(0).assert_max_bit_size(1) (1 gates, 0.00%)</title><rect x="99.6948%" y="157" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="136220" fg:w="1"/><text x="99.9448%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (1 gates, 0.00%)</title><rect x="99.6948%" y="133" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="136220" fg:w="1"/><text x="99.9448%" y="147.50"></text></g><g><title>opcode::blackbox::range (1 gates, 0.00%)</title><rect x="99.6948%" y="109" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="136220" fg:w="1"/><text x="99.9448%" y="123.50"></text></g><g><title>runtime_bignum.nr:511:13::borrow_flags.get(i).assert_max_bit_size(1) (5 gates, 0.00%)</title><rect x="99.6955%" y="157" width="0.0037%" height="23" fill="rgb(255,249,249)" fg:x="136221" fg:w="5"/><text x="99.9455%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (5 gates, 0.00%)</title><rect x="99.6955%" y="133" width="0.0037%" height="23" fill="rgb(255,249,249)" fg:x="136221" fg:w="5"/><text x="99.9455%" y="147.50"></text></g><g><title>opcode::blackbox::range (5 gates, 0.00%)</title><rect x="99.6955%" y="109" width="0.0037%" height="23" fill="rgb(255,249,249)" fg:x="136221" fg:w="5"/><text x="99.9455%" y="123.50"></text></g><g><title>runtime_bignum.nr:534:13::std::as_witness(product_limbs.get(i)) (20 gates, 0.01%)</title><rect x="99.6992%" y="157" width="0.0146%" height="23" fill="rgb(255,248,248)" fg:x="136226" fg:w="20"/><text x="99.9492%" y="171.50"></text></g><g><title>opcode::arithmetic (20 gates, 0.01%)</title><rect x="99.6992%" y="133" width="0.0146%" height="23" fill="rgb(255,248,248)" fg:x="136226" fg:w="20"/><text x="99.9492%" y="147.50"></text></g><g><title>runtime_bignum.nr:535:13::product_limbs.get(i).assert_max_bit_size(126) (32 gates, 0.02%)</title><rect x="99.7138%" y="157" width="0.0234%" height="23" fill="rgb(255,247,247)" fg:x="136246" fg:w="32"/><text x="99.9638%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (32 gates, 0.02%)</title><rect x="99.7138%" y="133" width="0.0234%" height="23" fill="rgb(255,247,247)" fg:x="136246" fg:w="32"/><text x="99.9638%" y="147.50"></text></g><g><title>opcode::blackbox::range (32 gates, 0.02%)</title><rect x="99.7138%" y="109" width="0.0234%" height="23" fill="rgb(255,247,247)" fg:x="136246" fg:w="32"/><text x="99.9638%" y="123.50"></text></g><g><title>main.nr:390:9::BigNum::evaluate_quadratic_expression(
            [[lambda]],
            [[false]],
            [[lambda]],
            [[false]],
            [x3, x2, x1],
            [true, true, true]
        ) (91 gates, 0.07%)</title><rect x="99.6714%" y="205" width="0.0666%" height="23" fill="rgb(255,246,246)" fg:x="136188" fg:w="91"/><text x="99.9214%" y="219.50"></text></g><g><title>lib.nr:241:9::Params::get_instance().evaluate_quadratic_expression(
            lhs_terms,
            lhs_flags,
            rhs_terms,
            rhs_flags,
            linear_terms,
            linear_flags
        ) (91 gates, 0.07%)</title><rect x="99.6714%" y="181" width="0.0666%" height="23" fill="rgb(255,246,246)" fg:x="136188" fg:w="91"/><text x="99.9214%" y="195.50"></text></g><g><title>runtime_bignum.nr:539:16::product_limbs.get(N + N - 2) == 0 (1 gates, 0.00%)</title><rect x="99.7373%" y="157" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="136278" fg:w="1"/><text x="99.9873%" y="171.50"></text></g><g><title>opcode::arithmetic (1 gates, 0.00%)</title><rect x="99.7373%" y="133" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="136278" fg:w="1"/><text x="99.9873%" y="147.50"></text></g><g><title>runtime_bignum.nr:255:13::self.limbs[i].assert_max_bit_size(120) (16 gates, 0.01%)</title><rect x="99.7380%" y="133" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="136279" fg:w="16"/><text x="99.9880%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (16 gates, 0.01%)</title><rect x="99.7380%" y="109" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="136279" fg:w="16"/><text x="99.9880%" y="123.50"></text></g><g><title>opcode::blackbox::range (16 gates, 0.01%)</title><rect x="99.7380%" y="85" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="136279" fg:w="16"/><text x="99.9880%" y="99.50"></text></g><g><title>runtime_bignum.nr:424:9::quotient.validate_quotient_in_range() (17 gates, 0.01%)</title><rect x="99.7380%" y="157" width="0.0124%" height="23" fill="rgb(255,248,248)" fg:x="136279" fg:w="17"/><text x="99.9880%" y="171.50"></text></g><g><title>runtime_bignum.nr:259:9::self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32) (1 gates, 0.00%)</title><rect x="99.7497%" y="133" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="136295" fg:w="1"/><text x="99.9997%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (1 gates, 0.00%)</title><rect x="99.7497%" y="109" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="136295" fg:w="1"/><text x="99.9997%" y="123.50"></text></g><g><title>opcode::blackbox::range (1 gates, 0.00%)</title><rect x="99.7497%" y="85" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="136295" fg:w="1"/><text x="99.9997%" y="99.50"></text></g><g><title>runtime_bignum.nr:481:25::std::as_witness(new_term) (64 gates, 0.05%)</title><rect x="99.7504%" y="157" width="0.0468%" height="23" fill="rgb(255,246,246)" fg:x="136296" fg:w="64"/><text x="100.0004%" y="171.50"></text></g><g><title>opcode::arithmetic (64 gates, 0.05%)</title><rect x="99.7504%" y="133" width="0.0468%" height="23" fill="rgb(255,246,246)" fg:x="136296" fg:w="64"/><text x="100.0004%" y="147.50"></text></g><g><title>runtime_bignum.nr:508:9::borrow_flags.get(0).assert_max_bit_size(1) (1 gates, 0.00%)</title><rect x="99.7973%" y="157" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="136360" fg:w="1"/><text x="100.0473%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (1 gates, 0.00%)</title><rect x="99.7973%" y="133" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="136360" fg:w="1"/><text x="100.0473%" y="147.50"></text></g><g><title>opcode::blackbox::range (1 gates, 0.00%)</title><rect x="99.7973%" y="109" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="136360" fg:w="1"/><text x="100.0473%" y="123.50"></text></g><g><title>runtime_bignum.nr:511:13::borrow_flags.get(i).assert_max_bit_size(1) (5 gates, 0.00%)</title><rect x="99.7980%" y="157" width="0.0037%" height="23" fill="rgb(255,249,249)" fg:x="136361" fg:w="5"/><text x="100.0480%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (5 gates, 0.00%)</title><rect x="99.7980%" y="133" width="0.0037%" height="23" fill="rgb(255,249,249)" fg:x="136361" fg:w="5"/><text x="100.0480%" y="147.50"></text></g><g><title>opcode::blackbox::range (5 gates, 0.00%)</title><rect x="99.7980%" y="109" width="0.0037%" height="23" fill="rgb(255,249,249)" fg:x="136361" fg:w="5"/><text x="100.0480%" y="123.50"></text></g><g><title>runtime_bignum.nr:534:13::std::as_witness(product_limbs.get(i)) (18 gates, 0.01%)</title><rect x="99.8017%" y="157" width="0.0132%" height="23" fill="rgb(255,248,248)" fg:x="136366" fg:w="18"/><text x="100.0517%" y="171.50"></text></g><g><title>opcode::arithmetic (18 gates, 0.01%)</title><rect x="99.8017%" y="133" width="0.0132%" height="23" fill="rgb(255,248,248)" fg:x="136366" fg:w="18"/><text x="100.0517%" y="147.50"></text></g><g><title>runtime_bignum.nr:535:13::product_limbs.get(i).assert_max_bit_size(126) (32 gates, 0.02%)</title><rect x="99.8148%" y="157" width="0.0234%" height="23" fill="rgb(255,247,247)" fg:x="136384" fg:w="32"/><text x="100.0648%" y="171.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (32 gates, 0.02%)</title><rect x="99.8148%" y="133" width="0.0234%" height="23" fill="rgb(255,247,247)" fg:x="136384" fg:w="32"/><text x="100.0648%" y="147.50"></text></g><g><title>opcode::blackbox::range (32 gates, 0.02%)</title><rect x="99.8148%" y="109" width="0.0234%" height="23" fill="rgb(255,247,247)" fg:x="136384" fg:w="32"/><text x="100.0648%" y="123.50"></text></g><g><title>main.nr:400:9::BigNum::evaluate_quadratic_expression(
            [[lambda]],
            [[false]],
            [[x3, x1]],
            [[false, true]],
            [y3, y1],
            [false, false]
        ) (138 gates, 0.10%)</title><rect x="99.7380%" y="205" width="0.1010%" height="23" fill="rgb(255,245,245)" fg:x="136279" fg:w="138"/><text x="99.9880%" y="219.50"></text></g><g><title>lib.nr:241:9::Params::get_instance().evaluate_quadratic_expression(
            lhs_terms,
            lhs_flags,
            rhs_terms,
            rhs_flags,
            linear_terms,
            linear_flags
        ) (138 gates, 0.10%)</title><rect x="99.7380%" y="181" width="0.1010%" height="23" fill="rgb(255,245,245)" fg:x="136279" fg:w="138"/><text x="99.9880%" y="195.50"></text></g><g><title>runtime_bignum.nr:539:16::product_limbs.get(N + N - 2) == 0 (1 gates, 0.00%)</title><rect x="99.8383%" y="157" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="136416" fg:w="1"/><text x="100.0883%" y="171.50"></text></g><g><title>opcode::arithmetic (1 gates, 0.00%)</title><rect x="99.8383%" y="133" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="136416" fg:w="1"/><text x="100.0883%" y="147.50"></text></g><g><title>main.nr:414:17::BigNum::conditional_select(BigNum::new(), x_out, infinity_predicate) (13 gates, 0.01%)</title><rect x="99.8390%" y="205" width="0.0095%" height="23" fill="rgb(255,248,248)" fg:x="136417" fg:w="13"/><text x="100.0890%" y="219.50"></text></g><g><title>lib.nr:50:76::RuntimeBigNumTrait::conditional_select(lhs, rhs, predicate) (13 gates, 0.01%)</title><rect x="99.8390%" y="181" width="0.0095%" height="23" fill="rgb(255,248,248)" fg:x="136417" fg:w="13"/><text x="100.0890%" y="195.50"></text></g><g><title>runtime_bignum.nr:224:31::(lhs.limbs[i] - rhs.limbs[i]) * predicate as Field (13 gates, 0.01%)</title><rect x="99.8390%" y="157" width="0.0095%" height="23" fill="rgb(255,248,248)" fg:x="136417" fg:w="13"/><text x="100.0890%" y="171.50"></text></g><g><title>opcode::arithmetic (13 gates, 0.01%)</title><rect x="99.8390%" y="133" width="0.0095%" height="23" fill="rgb(255,248,248)" fg:x="136417" fg:w="13"/><text x="100.0890%" y="147.50"></text></g><g><title>main.nr:415:25::BigNum::conditional_select(y3, y1, evaluate_group_operation_predicate) (4 gates, 0.00%)</title><rect x="99.8485%" y="205" width="0.0029%" height="23" fill="rgb(255,249,249)" fg:x="136430" fg:w="4"/><text x="100.0985%" y="219.50"></text></g><g><title>lib.nr:50:76::RuntimeBigNumTrait::conditional_select(lhs, rhs, predicate) (4 gates, 0.00%)</title><rect x="99.8485%" y="181" width="0.0029%" height="23" fill="rgb(255,249,249)" fg:x="136430" fg:w="4"/><text x="100.0985%" y="195.50"></text></g><g><title>runtime_bignum.nr:224:31::(lhs.limbs[i] - rhs.limbs[i]) * predicate as Field (4 gates, 0.00%)</title><rect x="99.8485%" y="157" width="0.0029%" height="23" fill="rgb(255,249,249)" fg:x="136430" fg:w="4"/><text x="100.0985%" y="171.50"></text></g><g><title>opcode::arithmetic (4 gates, 0.00%)</title><rect x="99.8485%" y="133" width="0.0029%" height="23" fill="rgb(255,249,249)" fg:x="136430" fg:w="4"/><text x="100.0985%" y="147.50"></text></g><g><title>main.nr:417:44::other.y.neg() (4 gates, 0.00%)</title><rect x="99.8514%" y="205" width="0.0029%" height="23" fill="rgb(255,249,249)" fg:x="136434" fg:w="4"/><text x="100.1014%" y="219.50"></text></g><g><title>lib.nr:268:9::Params::get_instance().neg(self) (4 gates, 0.00%)</title><rect x="99.8514%" y="181" width="0.0029%" height="23" fill="rgb(255,249,249)" fg:x="136434" fg:w="4"/><text x="100.1014%" y="195.50"></text></g><g><title>runtime_bignum.nr:608:38::self.__neg_with_flags(val) (4 gates, 0.00%)</title><rect x="99.8514%" y="157" width="0.0029%" height="23" fill="rgb(255,249,249)" fg:x="136434" fg:w="4"/><text x="100.1014%" y="171.50"></text></g><g><title>opcode::arithmetic (4 gates, 0.00%)</title><rect x="99.8514%" y="133" width="0.0029%" height="23" fill="rgb(255,249,249)" fg:x="136434" fg:w="4"/><text x="100.1014%" y="147.50"></text></g><g><title>main.nr:418:17::BigNum::conditional_select(BigNum::new(), y_out, infinity_predicate) (8 gates, 0.01%)</title><rect x="99.8544%" y="205" width="0.0059%" height="23" fill="rgb(255,248,248)" fg:x="136438" fg:w="8"/><text x="100.1044%" y="219.50"></text></g><g><title>lib.nr:50:76::RuntimeBigNumTrait::conditional_select(lhs, rhs, predicate) (8 gates, 0.01%)</title><rect x="99.8544%" y="181" width="0.0059%" height="23" fill="rgb(255,248,248)" fg:x="136438" fg:w="8"/><text x="100.1044%" y="195.50"></text></g><g><title>runtime_bignum.nr:224:31::(lhs.limbs[i] - rhs.limbs[i]) * predicate as Field (8 gates, 0.01%)</title><rect x="99.8544%" y="157" width="0.0059%" height="23" fill="rgb(255,248,248)" fg:x="136438" fg:w="8"/><text x="100.1044%" y="171.50"></text></g><g><title>opcode::arithmetic (8 gates, 0.01%)</title><rect x="99.8544%" y="133" width="0.0059%" height="23" fill="rgb(255,248,248)" fg:x="136438" fg:w="8"/><text x="100.1044%" y="147.50"></text></g><g><title>opcode::arithmetic (5 gates, 0.00%)</title><rect x="99.8602%" y="157" width="0.0037%" height="23" fill="rgb(255,249,249)" fg:x="136446" fg:w="5"/><text x="100.1102%" y="171.50"></text></g><g><title>main.nr:422:32::conditional_select(true, false, evaluate_group_operation_predicate) (25 gates, 0.02%)</title><rect x="99.8602%" y="205" width="0.0183%" height="23" fill="rgb(255,247,247)" fg:x="136446" fg:w="25"/><text x="100.1102%" y="219.50"></text></g><g><title>main.nr:420:70::((a as Field - b as Field) * predicate as Field + b as Field) as bool (25 gates, 0.02%)</title><rect x="99.8602%" y="181" width="0.0183%" height="23" fill="rgb(255,247,247)" fg:x="136446" fg:w="25"/><text x="100.1102%" y="195.50"></text></g><g><title>opcode::blackbox::range (20 gates, 0.01%)</title><rect x="99.8639%" y="157" width="0.0146%" height="23" fill="rgb(255,248,248)" fg:x="136451" fg:w="20"/><text x="100.1139%" y="171.50"></text></g><g><title>opcode::arithmetic (5 gates, 0.00%)</title><rect x="99.8785%" y="157" width="0.0037%" height="23" fill="rgb(255,249,249)" fg:x="136471" fg:w="5"/><text x="100.1285%" y="171.50"></text></g><g><title>bls12_381.nr:155:18::P.mul_with_hint(scalar, transcript) (136,473 gates, 99.88%)</title><rect x="0.0132%" y="253" width="99.8800%" height="23" fill="rgb(255,100,100)" fg:x="18" fg:w="136473"/><text x="0.2632%" y="267.50">bls12_381.nr:155:18::P.mul_with_hint(scalar, transcript)</text></g><g><title>main.nr:577:23::accumulator.sub_with_hint(BigCurve::offset_generator_final(), transcript[5 + 5 * NScalarSlices]) (682 gates, 0.50%)</title><rect x="99.3940%" y="229" width="0.4991%" height="23" fill="rgb(255,239,239)" fg:x="135809" fg:w="682"/><text x="99.6440%" y="243.50"></text></g><g><title>main.nr:423:24::conditional_select(true, infinity_out, infinity_predicate) (20 gates, 0.01%)</title><rect x="99.8785%" y="205" width="0.0146%" height="23" fill="rgb(255,248,248)" fg:x="136471" fg:w="20"/><text x="100.1285%" y="219.50"></text></g><g><title>main.nr:420:70::((a as Field - b as Field) * predicate as Field + b as Field) as bool (20 gates, 0.01%)</title><rect x="99.8785%" y="181" width="0.0146%" height="23" fill="rgb(255,248,248)" fg:x="136471" fg:w="20"/><text x="100.1285%" y="195.50"></text></g><g><title>opcode::blackbox::range (15 gates, 0.01%)</title><rect x="99.8822%" y="157" width="0.0110%" height="23" fill="rgb(255,248,248)" fg:x="136476" fg:w="15"/><text x="100.1322%" y="171.50"></text></g><g><title>bls12_381.nr:163:18::BigNum::new() - expected.y (4 gates, 0.00%)</title><rect x="99.8931%" y="253" width="0.0029%" height="23" fill="rgb(255,249,249)" fg:x="136491" fg:w="4"/><text x="100.1431%" y="267.50"></text></g><g><title>lib.nr:303:9::Params::get_instance().sub(self, other) (4 gates, 0.00%)</title><rect x="99.8931%" y="229" width="0.0029%" height="23" fill="rgb(255,249,249)" fg:x="136491" fg:w="4"/><text x="100.1431%" y="243.50"></text></g><g><title>runtime_bignum.nr:694:62::self.__sub_with_flags(lhs, rhs) (4 gates, 0.00%)</title><rect x="99.8931%" y="205" width="0.0029%" height="23" fill="rgb(255,249,249)" fg:x="136491" fg:w="4"/><text x="100.1431%" y="219.50"></text></g><g><title>opcode::arithmetic (4 gates, 0.00%)</title><rect x="99.8931%" y="181" width="0.0029%" height="23" fill="rgb(255,249,249)" fg:x="136491" fg:w="4"/><text x="100.1431%" y="195.50"></text></g><g><title>runtime_bignum.nr:694:62::self.__sub_with_flags(lhs, rhs) (9 gates, 0.01%)</title><rect x="99.8961%" y="157" width="0.0066%" height="23" fill="rgb(255,248,248)" fg:x="136495" fg:w="9"/><text x="100.1461%" y="171.50"></text></g><g><title>opcode::blackbox::range (9 gates, 0.01%)</title><rect x="99.8961%" y="133" width="0.0066%" height="23" fill="rgb(255,248,248)" fg:x="136495" fg:w="9"/><text x="100.1461%" y="147.50"></text></g><g><title>runtime_bignum.nr:234:13::self.limbs[i].assert_max_bit_size(120) (16 gates, 0.01%)</title><rect x="99.9027%" y="133" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="136504" fg:w="16"/><text x="100.1527%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (16 gates, 0.01%)</title><rect x="99.9027%" y="109" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="136504" fg:w="16"/><text x="100.1527%" y="123.50"></text></g><g><title>opcode::blackbox::range (16 gates, 0.01%)</title><rect x="99.9027%" y="85" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="136504" fg:w="16"/><text x="100.1527%" y="99.50"></text></g><g><title>runtime_bignum.nr:695:9::result.validate_in_range() (17 gates, 0.01%)</title><rect x="99.9027%" y="157" width="0.0124%" height="23" fill="rgb(255,248,248)" fg:x="136504" fg:w="17"/><text x="100.1527%" y="171.50"></text></g><g><title>runtime_bignum.nr:237:9::self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32) (1 gates, 0.00%)</title><rect x="99.9144%" y="133" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="136520" fg:w="1"/><text x="100.1644%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (1 gates, 0.00%)</title><rect x="99.9144%" y="109" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="136520" fg:w="1"/><text x="100.1644%" y="123.50"></text></g><g><title>opcode::blackbox::range (1 gates, 0.00%)</title><rect x="99.9144%" y="85" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="136520" fg:w="1"/><text x="100.1644%" y="99.50"></text></g><g><title>runtime_bignum.nr:707:16::result_limb == 0 (4 gates, 0.00%)</title><rect x="99.9151%" y="157" width="0.0029%" height="23" fill="rgb(255,249,249)" fg:x="136521" fg:w="4"/><text x="100.1651%" y="171.50"></text></g><g><title>opcode::arithmetic (4 gates, 0.00%)</title><rect x="99.9151%" y="133" width="0.0029%" height="23" fill="rgb(255,249,249)" fg:x="136521" fg:w="4"/><text x="100.1651%" y="147.50"></text></g><g><title>runtime_bignum.nr:712:20::result_limb == 0 (10 gates, 0.01%)</title><rect x="99.9180%" y="157" width="0.0073%" height="23" fill="rgb(255,248,248)" fg:x="136525" fg:w="10"/><text x="100.1680%" y="171.50"></text></g><g><title>opcode::arithmetic (10 gates, 0.01%)</title><rect x="99.9180%" y="133" width="0.0073%" height="23" fill="rgb(255,248,248)" fg:x="136525" fg:w="10"/><text x="100.1680%" y="147.50"></text></g><g><title>runtime_bignum.nr:593:20::self.sub(lhs, rhs) (44 gates, 0.03%)</title><rect x="99.8961%" y="181" width="0.0322%" height="23" fill="rgb(255,247,247)" fg:x="136495" fg:w="44"/><text x="100.1461%" y="195.50"></text></g><g><title>runtime_bignum.nr:718:16::result_limb == 0 (4 gates, 0.00%)</title><rect x="99.9253%" y="157" width="0.0029%" height="23" fill="rgb(255,249,249)" fg:x="136535" fg:w="4"/><text x="100.1753%" y="171.50"></text></g><g><title>opcode::arithmetic (4 gates, 0.00%)</title><rect x="99.9253%" y="133" width="0.0029%" height="23" fill="rgb(255,249,249)" fg:x="136535" fg:w="4"/><text x="100.1753%" y="147.50"></text></g><g><title>runtime_bignum.nr:600:32::is_equal_modulus &amp; (diff.limbs[i] == self.modulus[i]) (2 gates, 0.00%)</title><rect x="99.9283%" y="181" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="136539" fg:w="2"/><text x="100.1783%" y="195.50"></text></g><g><title>opcode::arithmetic (2 gates, 0.00%)</title><rect x="99.9283%" y="157" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="136539" fg:w="2"/><text x="100.1783%" y="171.50"></text></g><g><title>runtime_bignum.nr:600:52::diff.limbs[i] == self.modulus[i] (12 gates, 0.01%)</title><rect x="99.9297%" y="181" width="0.0088%" height="23" fill="rgb(255,248,248)" fg:x="136541" fg:w="12"/><text x="100.1797%" y="195.50"></text></g><g><title>opcode::arithmetic (12 gates, 0.01%)</title><rect x="99.9297%" y="157" width="0.0088%" height="23" fill="rgb(255,248,248)" fg:x="136541" fg:w="12"/><text x="100.1797%" y="171.50"></text></g><g><title>runtime_bignum.nr:601:29::is_equal_zero &amp; (diff.limbs[i] == 0) (2 gates, 0.00%)</title><rect x="99.9385%" y="181" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="136553" fg:w="2"/><text x="100.1885%" y="195.50"></text></g><g><title>opcode::arithmetic (2 gates, 0.00%)</title><rect x="99.9385%" y="157" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="136553" fg:w="2"/><text x="100.1885%" y="171.50"></text></g><g><title>runtime_bignum.nr:601:46::diff.limbs[i] == 0 (8 gates, 0.01%)</title><rect x="99.9400%" y="181" width="0.0059%" height="23" fill="rgb(255,248,248)" fg:x="136555" fg:w="8"/><text x="100.1900%" y="195.50"></text></g><g><title>opcode::arithmetic (8 gates, 0.01%)</title><rect x="99.9400%" y="157" width="0.0059%" height="23" fill="rgb(255,248,248)" fg:x="136555" fg:w="8"/><text x="100.1900%" y="171.50"></text></g><g><title>lib.nr:59:40::self == other (70 gates, 0.05%)</title><rect x="99.8961%" y="229" width="0.0512%" height="23" fill="rgb(255,246,246)" fg:x="136495" fg:w="70"/><text x="100.1461%" y="243.50"></text></g><g><title>lib.nr:328:9::bn.eq(self, other) (70 gates, 0.05%)</title><rect x="99.8961%" y="205" width="0.0512%" height="23" fill="rgb(255,246,246)" fg:x="136495" fg:w="70"/><text x="100.1461%" y="219.50"></text></g><g><title>runtime_bignum.nr:603:9::is_equal_modulus | is_equal_zero (2 gates, 0.00%)</title><rect x="99.9458%" y="181" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="136563" fg:w="2"/><text x="100.1958%" y="195.50"></text></g><g><title>opcode::arithmetic (2 gates, 0.00%)</title><rect x="99.9458%" y="157" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="136563" fg:w="2"/><text x="100.1958%" y="171.50"></text></g><g><title>bls12_381.nr:164:12::result.x.eq(expected.x) (71 gates, 0.05%)</title><rect x="99.8961%" y="253" width="0.0520%" height="23" fill="rgb(255,246,246)" fg:x="136495" fg:w="71"/><text x="100.1461%" y="267.50"></text></g><g><title>opcode::arithmetic (1 gates, 0.00%)</title><rect x="99.9473%" y="229" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="136565" fg:w="1"/><text x="100.1973%" y="243.50"></text></g><g><title>runtime_bignum.nr:694:62::self.__sub_with_flags(lhs, rhs) (9 gates, 0.01%)</title><rect x="99.9480%" y="157" width="0.0066%" height="23" fill="rgb(255,248,248)" fg:x="136566" fg:w="9"/><text x="100.1980%" y="171.50"></text></g><g><title>opcode::blackbox::range (9 gates, 0.01%)</title><rect x="99.9480%" y="133" width="0.0066%" height="23" fill="rgb(255,248,248)" fg:x="136566" fg:w="9"/><text x="100.1980%" y="147.50"></text></g><g><title>runtime_bignum.nr:234:13::self.limbs[i].assert_max_bit_size(120) (16 gates, 0.01%)</title><rect x="99.9546%" y="133" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="136575" fg:w="16"/><text x="100.2046%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (16 gates, 0.01%)</title><rect x="99.9546%" y="109" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="136575" fg:w="16"/><text x="100.2046%" y="123.50"></text></g><g><title>opcode::blackbox::range (16 gates, 0.01%)</title><rect x="99.9546%" y="85" width="0.0117%" height="23" fill="rgb(255,248,248)" fg:x="136575" fg:w="16"/><text x="100.2046%" y="99.50"></text></g><g><title>runtime_bignum.nr:695:9::result.validate_in_range() (17 gates, 0.01%)</title><rect x="99.9546%" y="157" width="0.0124%" height="23" fill="rgb(255,248,248)" fg:x="136575" fg:w="17"/><text x="100.2046%" y="171.50"></text></g><g><title>runtime_bignum.nr:237:9::self.limbs[N - 1].assert_max_bit_size(final_limb_bits as u32) (1 gates, 0.00%)</title><rect x="99.9663%" y="133" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="136591" fg:w="1"/><text x="100.2163%" y="147.50"></text></g><g><title>mod.nr:27:9::self.__assert_max_bit_size(bit_size) (1 gates, 0.00%)</title><rect x="99.9663%" y="109" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="136591" fg:w="1"/><text x="100.2163%" y="123.50"></text></g><g><title>opcode::blackbox::range (1 gates, 0.00%)</title><rect x="99.9663%" y="85" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="136591" fg:w="1"/><text x="100.2163%" y="99.50"></text></g><g><title>runtime_bignum.nr:707:16::result_limb == 0 (4 gates, 0.00%)</title><rect x="99.9671%" y="157" width="0.0029%" height="23" fill="rgb(255,249,249)" fg:x="136592" fg:w="4"/><text x="100.2171%" y="171.50"></text></g><g><title>opcode::arithmetic (4 gates, 0.00%)</title><rect x="99.9671%" y="133" width="0.0029%" height="23" fill="rgb(255,249,249)" fg:x="136592" fg:w="4"/><text x="100.2171%" y="147.50"></text></g><g><title>runtime_bignum.nr:712:20::result_limb == 0 (10 gates, 0.01%)</title><rect x="99.9700%" y="157" width="0.0073%" height="23" fill="rgb(255,248,248)" fg:x="136596" fg:w="10"/><text x="100.2200%" y="171.50"></text></g><g><title>opcode::arithmetic (10 gates, 0.01%)</title><rect x="99.9700%" y="133" width="0.0073%" height="23" fill="rgb(255,248,248)" fg:x="136596" fg:w="10"/><text x="100.2200%" y="147.50"></text></g><g><title>runtime_bignum.nr:593:20::self.sub(lhs, rhs) (44 gates, 0.03%)</title><rect x="99.9480%" y="181" width="0.0322%" height="23" fill="rgb(255,247,247)" fg:x="136566" fg:w="44"/><text x="100.1980%" y="195.50"></text></g><g><title>runtime_bignum.nr:718:16::result_limb == 0 (4 gates, 0.00%)</title><rect x="99.9773%" y="157" width="0.0029%" height="23" fill="rgb(255,249,249)" fg:x="136606" fg:w="4"/><text x="100.2273%" y="171.50"></text></g><g><title>opcode::arithmetic (4 gates, 0.00%)</title><rect x="99.9773%" y="133" width="0.0029%" height="23" fill="rgb(255,249,249)" fg:x="136606" fg:w="4"/><text x="100.2273%" y="147.50"></text></g><g><title>runtime_bignum.nr:600:32::is_equal_modulus &amp; (diff.limbs[i] == self.modulus[i]) (2 gates, 0.00%)</title><rect x="99.9802%" y="181" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="136610" fg:w="2"/><text x="100.2302%" y="195.50"></text></g><g><title>opcode::arithmetic (2 gates, 0.00%)</title><rect x="99.9802%" y="157" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="136610" fg:w="2"/><text x="100.2302%" y="171.50"></text></g><g><title>runtime_bignum.nr:600:52::diff.limbs[i] == self.modulus[i] (12 gates, 0.01%)</title><rect x="99.9817%" y="181" width="0.0088%" height="23" fill="rgb(255,248,248)" fg:x="136612" fg:w="12"/><text x="100.2317%" y="195.50"></text></g><g><title>opcode::arithmetic (12 gates, 0.01%)</title><rect x="99.9817%" y="157" width="0.0088%" height="23" fill="rgb(255,248,248)" fg:x="136612" fg:w="12"/><text x="100.2317%" y="171.50"></text></g><g><title>runtime_bignum.nr:601:29::is_equal_zero &amp; (diff.limbs[i] == 0) (2 gates, 0.00%)</title><rect x="99.9905%" y="181" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="136624" fg:w="2"/><text x="100.2405%" y="195.50"></text></g><g><title>opcode::arithmetic (2 gates, 0.00%)</title><rect x="99.9905%" y="157" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="136624" fg:w="2"/><text x="100.2405%" y="171.50"></text></g><g><title>runtime_bignum.nr:601:46::diff.limbs[i] == 0 (8 gates, 0.01%)</title><rect x="99.9919%" y="181" width="0.0059%" height="23" fill="rgb(255,248,248)" fg:x="136626" fg:w="8"/><text x="100.2419%" y="195.50"></text></g><g><title>opcode::arithmetic (8 gates, 0.01%)</title><rect x="99.9919%" y="157" width="0.0059%" height="23" fill="rgb(255,248,248)" fg:x="136626" fg:w="8"/><text x="100.2419%" y="171.50"></text></g><g><title>lib.nr:59:40::self == other (70 gates, 0.05%)</title><rect x="99.9480%" y="229" width="0.0512%" height="23" fill="rgb(255,246,246)" fg:x="136566" fg:w="70"/><text x="100.1980%" y="243.50"></text></g><g><title>lib.nr:328:9::bn.eq(self, other) (70 gates, 0.05%)</title><rect x="99.9480%" y="205" width="0.0512%" height="23" fill="rgb(255,246,246)" fg:x="136566" fg:w="70"/><text x="100.1980%" y="219.50"></text></g><g><title>runtime_bignum.nr:603:9::is_equal_modulus | is_equal_zero (2 gates, 0.00%)</title><rect x="99.9978%" y="181" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="136634" fg:w="2"/><text x="100.2478%" y="195.50"></text></g><g><title>opcode::arithmetic (2 gates, 0.00%)</title><rect x="99.9978%" y="157" width="0.0015%" height="23" fill="rgb(255,249,249)" fg:x="136634" fg:w="2"/><text x="100.2478%" y="171.50"></text></g><g><title>all (136,637 gates, 100%)</title><rect x="0.0000%" y="301" width="100.0000%" height="23" fill="rgb(255,100,100)" fg:x="0" fg:w="136637"/><text x="0.2500%" y="315.50"></text></g><g><title>main.nr:28:5::curves::bls12_381::test_mul() (136,637 gates, 100.00%)</title><rect x="0.0000%" y="277" width="100.0000%" height="23" fill="rgb(255,100,100)" fg:x="0" fg:w="136637"/><text x="0.2500%" y="291.50">main.nr:28:5::curves::bls12_381::test_mul()</text></g><g><title>bls12_381.nr:165:12::result.y.eq(expected.y) (71 gates, 0.05%)</title><rect x="99.9480%" y="253" width="0.0520%" height="23" fill="rgb(255,246,246)" fg:x="136566" fg:w="71"/><text x="100.1980%" y="267.50"></text></g><g><title>opcode::arithmetic (1 gates, 0.00%)</title><rect x="99.9993%" y="229" width="0.0007%" height="23" fill="rgb(255,249,249)" fg:x="136636" fg:w="1"/><text x="100.2493%" y="243.50"></text></g></svg></svg>